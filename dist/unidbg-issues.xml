<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>zhkl0228/unidbg Issues</title><link>https://github.com/zhkl0228/unidbg/issues</link><atom:link href="http://127.0.0.1:1200/github/issue/zhkl0228/unidbg" rel="self" type="application/rss+xml"></atom:link><description>zhkl0228/unidbg Issues - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><lastBuildDate>Thu, 10 Oct 2024 07:53:39 GMT</lastBuildDate><ttl>5</ttl><item><title>getAllNetworks() Problem</title><description>&lt;p&gt;The JNI function check the network but there not built-in class for this.
What can I do?&lt;/p&gt;
&lt;p&gt;My solution :
&lt;code&gt;return vm.resolveClass(&quot;android/net/Network&quot;).newObject(null);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Logs:
&lt;code&gt;JNIEnv-&amp;gt;CallObjectMethodV(android.net.ConnectivityManager@36bc55de, getAllNetworks() =&amp;gt; android.net.Network@564fabc8) was called from RX@0x12045cec[libscplugin.so]0x45cec [15:48:08 409]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:410) - handleInterrupt intno=2, NR=-128368, svcNumber=0x1a0, PC=unidbg@0xfffe0a94, LR=RX@0x12065264[libscplugin.so]0x65264, syscall=null java.lang.ClassCastException: class com.github.unidbg.linux.android.dvm.DvmObject cannot be cast to class com.github.unidbg.linux.android.dvm.Array (com.github.unidbg.linux.android.dvm.DvmObject and com.github.unidbg.linux.android.dvm.Array are in unnamed module of loader &#39;app&#39;) at com.github.unidbg.linux.android.dvm.DalvikVM64$161.handle(DalvikVM64.java:2648) at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:119) at com.github.unidbg.arm.backend.InterruptHookNotifier.notifyCallSVC(InterruptHookNotifier.java:14) at com.github.unidbg.arm.backend.dynarmic.DynarmicBackend64.callSVC(DynarmicBackend64.java:32) at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Native Method) at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Dynarmic.java:78) at com.github.unidbg.arm.backend.DynarmicBackend.emu_start(DynarmicBackend.java:82) at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:378) at com.github.unidbg.thread.Function64.run(Function64.java:39) at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19) at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:165) at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:97) at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:341) at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:262) at com.github.unidbg.Module.emulateFunction(Module.java:163) at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135) at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316) at com.test.test.test.&amp;lt;init&amp;gt;(Test.java:63) at com.test.test.test.main(Test.java:35) [15:48:08 411]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:417) - emulate RX@0x120457e4[libscplugin.so]0x457e4 exception sp=unidbg@0xe4ffada0, msg=class com.github.unidbg.linux.android.dvm.DvmObject cannot be cast to class com.github.unidbg.linux.android.dvm.Array (com.github.unidbg.linux.android.dvm.DvmObject and com.github.unidbg.linux.android.dvm.Array are in unnamed module of loader &#39;app&#39;), offset=364ms @ Runnable|Function64 address=0x120457e4, arguments=[unidbg@0xfffe1640[libjnigraphics.so]0x640, -1224627949, 521960438, 632587706] Exception in thread &quot;main&quot; java.lang.NullPointerException: Cannot invoke &quot;com.github.unidbg.lin&lt;/code&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/689</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/689</guid><pubDate>Tue, 08 Oct 2024 12:51:40 GMT</pubDate><author>123edi10</author></item><item><title>Read memory issue</title><description>&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;While making some tests, I started facing some issues, some of them were resolved, however there is one that I am unable to solve.&lt;/p&gt;
&lt;p&gt;At first I was getting this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[09:01:02 753]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:67) - Write memory failed: address=0xe4000008, size=4, value=0x122691e0, PC=RX@0x1208bac8[library.so]0x8bac8, LR=RX@0x120815e0[library.so]0x815e0
54 [main] WARN com.github.unidbg.arm.AbstractARMEmulator  - Write memory failed: address=0xe4000008, size=4, value=0x122691e0, PC=RX@0x1208bac8[library.so]0x8bac8, LR=RX@0x120815e0[library.so]0x815e0
[09:01:02 754]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:417) - emulate RX@0x12078770[library.so]0x78770 exception sp=unidbg@0xe4ffeda0, msg=unicorn.UnicornException: Invalid memory write (UC_ERR_WRITE_UNMAPPED), offset=137ms @ Runnable|Function32 address=0x12078770, arguments=[unidbg@0xfffe12a0, -639021477, 1059063940, 1295226194, 252651381, 1514840818, 1704064279]
55 [main] WARN com.github.unidbg.AbstractEmulator  - emulate RX@0x12078770[library.so]0x78770 exception sp=unidbg@0xe4ffeda0, msg=unicorn.UnicornException: Invalid memory write (UC_ERR_WRITE_UNMAPPED), offset=137ms @ Runnable|Function32 address=0x12078770, arguments=[unidbg@0xfffe12a0, -639021477, 1059063940, 1295226194, 252651381, 1514840818, 1704064279]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;it was solved by mapping the memory on that memory range:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;Backend backend = emulator.getBackend();
backend.mem_map(0xe4000000L, 0x1000, UnicornConst.UC_PROT_READ | UnicornConst.UC_PROT_WRITE);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After that, code started to work again until reaching a similar issue:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[09:05:16 332]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:67) - Read memory failed: address=0xff000000, size=4, value=0x0, PC=RX@0x12081510[library.so]0x81510, LR=RX@0x1207ad00[library.so]0x7ad00
119 [main] WARN com.github.unidbg.arm.AbstractARMEmulator  - Read memory failed: address=0xff000000, size=4, value=0x0, PC=RX@0x12081510[library.so]0x81510, LR=RX@0x1207ad00[library.so]0x7ad00
[09:05:16 333]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:417) - emulate RX@0x12078770[library.so]0x78770 exception sp=unidbg@0xe4ffefb8, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=199ms @ Runnable|Function32 address=0x12078770, arguments=[unidbg@0xfffe12a0, -639021477, 1059063940, 1295226194, 252651381, 1514840818, 1704064279]
120 [main] WARN com.github.unidbg.AbstractEmulator  - emulate RX@0x12078770[library.so]0x78770 exception sp=unidbg@0xe4ffefb8, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=199ms @ Runnable|Function32 address=0x12078770, arguments=[unidbg@0xfffe12a0, -639021477, 1059063940, 1295226194, 252651381, 1514840818, 1704064279]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which was resolved in a similar way:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;backend.mem_map(0xff000000L, 0x4000, UnicornConst.UC_PROT_READ | UnicornConst.UC_PROT_WRITE);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And code started to work again but here is where comes the issue, it started to give:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[15:49:26 871]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:67) - Read memory failed: address=0x2a4, size=4, value=0x0, PC=RX@0x12081510[library.so]0x81510, LR=RX@0x1207ad00[library.so]0x7ad00
118 [main] WARN com.github.unidbg.arm.AbstractARMEmulator  - Read memory failed: address=0x2a4, size=4, value=0x0, PC=RX@0x12081510[library.so]0x81510, LR=RX@0x1207ad00[library.so]0x7ad00
[15:49:26 871]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:417) - emulate RX@0x12078770[library.so]0x78770 exception sp=unidbg@0xe4ffefb8, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=206ms @ Runnable|Function32 address=0x12078770, arguments=[unidbg@0xfffe12a0, -639021477, 1059063940, 1295226194, 252651381, 1514840818, 1704064279]
118 [main] WARN com.github.unidbg.AbstractEmulator  - emulate RX@0x12078770[library.so]0x78770 exception sp=unidbg@0xe4ffefb8, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=206ms @ Runnable|Function32 address=0x12078770, arguments=[unidbg@0xfffe12a0, -639021477, 1059063940, 1295226194, 252651381, 1514840818, 1704064279]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As far as I know &lt;code&gt;0x2a4&lt;/code&gt; should be mapped to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;impl.setPointer(0x2a4, _GetStringUTFChars);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Any idea on how to solve this?&lt;/p&gt;
&lt;p&gt;Best regards&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/681</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/681</guid><pubDate>Thu, 26 Sep 2024 13:56:35 GMT</pubDate><author>mgp25</author></item><item><title>vm中有静态方法调不到是为什么呢？</title><description>&lt;img width=&quot;1392&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/db15b902-58ff-438d-b7ce-8c7bbf5b4a0f&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
[12:29:02 764]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:412) - handleInterrupt intno=2, NR=-129168, svcNumber=0x16e, PC=unidbg@0xfffe0774, LR=RX@0x12049ad0[libmain.so]0x49ad0, syscall=null
java.lang.IllegalArgumentException: find method failed: doCommandForString(I)Ljava/lang/String;
at com.github.unidbg.linux.android.dvm.DvmClass.findNativeFunction(DvmClass.java:255)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:101)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316)
at com.alibaba.wireless.security.open.middletier.Sgmiddletier.callStaticObjectMethod(Sgmiddletier.java:336)
at com.github.unidbg.linux.android.dvm.AbstractJni.callStaticObjectMethod(AbstractJni.java:422)
at com.github.unidbg.linux.android.dvm.DvmMethod.callStaticObjectMethod(DvmMethod.java:54)
at com.github.unidbg.linux.android.dvm.DalvikVM64$111.handle(DalvikVM64.java:1811)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:121)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:378)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:341)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:262)
at com.github.unidbg.Module.emulateFunction(Module.java:165)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316)
at com.alibaba.wireless.security.open.middletier.Sgmiddletier.doCommandNative(Sgmiddletier.java:91)
at com.alibaba.wireless.security.open.middletier.Sgmiddletier.call_test(Sgmiddletier.java:165)
at com.alibaba.wireless.security.open.middletier.Sgmiddletier.main(Sgmiddletier.java:96)</description><link>https://github.com/zhkl0228/unidbg/issues/680</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/680</guid><pubDate>Thu, 26 Sep 2024 04:30:04 GMT</pubDate><author>liuwang168</author></item><item><title>java.lang.UnsupportedOperationException : _CallCharMethodA</title><description>&lt;p&gt;执行时候_CallCharMethodA异常，主动抛出的，这样的我应该怎么去补环境呢？
异常日志如下：
[15:14:19 980]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:399) - handleInterrupt intno=2, NR=-130176, svcNumber=0x12f, PC=unidbg@0xfffe0384[&lt;a href=&quot;http://libandroid.so/&quot;&gt;libandroid.so&lt;/a&gt;]0x384, LR=RX@0x4004edb8[&lt;a href=&quot;http://libdexjni.so/&quot;&gt;libdexjni.so&lt;/a&gt;]0x4edb8, syscall=null
java.lang.UnsupportedOperationException
at com.github.unidbg.linux.android.dvm.DalvikVM64$42.handle(DalvikVM64.java:699)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:118)
at com.github.unidbg.arm.backend.InterruptHookNotifier.notifyCallSVC(InterruptHookNotifier.java:14)
at com.github.unidbg.arm.backend.dynarmic.DynarmicBackend64.callSVC(DynarmicBackend64.java:32)
at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Native Method)
at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Dynarmic.java:78)
at com.github.unidbg.arm.backend.DynarmicBackend.emu_start(DynarmicBackend.java:82)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:236)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:317)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/678</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/678</guid><pubDate>Wed, 18 Sep 2024 07:24:47 GMT</pubDate><author>littXu</author></item><item><title>possible duplicate effort (android)</title><description>&lt;p&gt;I guess it depends what your ultimate goal is, but I see that you have started implementing some android APIs (e.g Bitmap.java), which overlaps with our project: &lt;a href=&quot;https://gitlab.com/android_translation_layer/android_translation_layer&quot;&gt;https://gitlab.com/android_translation_layer/android_translation_layer&lt;/a&gt;, though we don&#39;t currently support using arm libraries on non-arm systems.&lt;/p&gt;
&lt;p&gt;Since this project is mostly focused on the problem of emulation, it might be beneficial for you to utilize our project for dealing with android APIs (both java and native).&lt;/p&gt;
&lt;p&gt;For non-time-critical stuff one could just use (parts of) our project in an aarch64 alpine chroot with qemu-user, but we can also run full apps which would absolutely benefit from only emulating the parts that &lt;em&gt;need&lt;/em&gt; to be emulated.&lt;/p&gt;
&lt;p&gt;We simply use art (though we have some patches on top for various reasons), and it seems that it should be possible to utilize the &quot;native bridge&quot; functionality (mainly used by intel&#39;s houdini) to load arm libraries on non-arm systems. &lt;a href=&quot;https://github.com/goffioul/ax86-nb-qemu&quot;&gt;https://github.com/goffioul/ax86-nb-qemu&lt;/a&gt; is an open source implementation of a &quot;native bridge&quot;, which supposedly works with AOSP (we have not tried to get it to work with our project yet), but I wonder if something like dynarmic would be easier to deal with since it&#39;s in-process.&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/677</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/677</guid><pubDate>Sun, 15 Sep 2024 19:08:32 GMT</pubDate><author>Mis012</author></item><item><title>方法调用方式应该正确，但就是报java.lang.IllegalStateException: obj is null: class android/content/Context</title><description>&lt;p&gt;public String parseSig(String plainText) {
DvmObject contexts = vm.resolveClass(&quot;android/content/Context&quot;).newObject(null);
String methodSign = &quot;getClock(Landroid/content/Context;[BI)Ljava/lang/String;&quot;;
StringObject obj = sigUtil.callStaticJniMethodObject(emulator, methodSign, contexts, plainText.getBytes(), 1);
return obj.getValue();
}&lt;/p&gt;
&lt;p&gt;Find native function Java_com_yxcorp_gifshow_util_CPU_getClock =&amp;gt; RX@0x40002030[&lt;a href=&quot;http://libcore.so/&quot;&gt;libcore.so&lt;/a&gt;]0x2030
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.getName()Ljava/lang/String;) =&amp;gt; 0x4a974877 was called from RX@0x40000aa0[&lt;a href=&quot;http://libcore.so/&quot;&gt;libcore.so&lt;/a&gt;]0xaa0
[21:39:05 788]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:412) - handleInterrupt intno=2, NR=-130432, svcNumber=0x11f, PC=unidbg@0xfffe0284, LR=RX@0x40000ba4[&lt;a href=&quot;http://libcore.so/&quot;&gt;libcore.so&lt;/a&gt;]0xba4, syscall=null
java.lang.IllegalStateException: obj is null: class android/content/Context
at com.github.unidbg.linux.android.dvm.jni.ProxyJni.callObjectMethodV(ProxyJni.java:407)
at com.github.unidbg.linux.android.dvm.DvmMethod.callObjectMethodV(DvmMethod.java:89)
at com.github.unidbg.linux.android.dvm.DalvikVM64$32.handle(DalvikVM64.java:559)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:121)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:378)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:341)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:262)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/676</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/676</guid><pubDate>Fri, 13 Sep 2024 13:45:07 GMT</pubDate><author>abbypop</author></item><item><title>你好，请问参数怎么传Object[]数组呢？</title><description>&lt;p&gt;native函数的参数是需要传一个Object[]数组
String sgin = sgmiddletier.callJniMethodObject(emulator, &quot;doCommandNative(I[Ljava/lang/Object;)Ljava/lang/Object;&quot;,
Integer.valueOf(10401),new Object[]{map,&quot;21792629&quot;,2,&quot;sgAuthCode&quot;,true}).toString();
&lt;img width=&quot;992&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/b098606a-bf43-4508-b3b7-2ef64eec2441&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;img width=&quot;1080&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/21a58471-1677-4eea-aeb9-c7516b160215&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
这个代码里面不支持&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/675</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/675</guid><pubDate>Fri, 13 Sep 2024 01:12:16 GMT</pubDate><author>liuwang168</author></item><item><title>so中访问了env-&gt;NewDirectByteBuffer(buffer, _capacity)出现异常，求各位大佬帮忙看一下</title><description>&lt;p&gt;代码如下，麻烦各位大佬看一下：
jobject NativeByteBuffer::getJavaByteBuffer() {
if (javaByteBuffer == nullptr &amp;amp;&amp;amp; javaVm != nullptr) {
JNIEnv *env = 0;
if (javaVm-&amp;gt;GetEnv((void **) &amp;amp;env, JNI_VERSION_1_6) != JNI_OK) {
if (LOGS_ENABLED) DEBUG_E(&quot;can&#39;t get jnienv&quot;);
exit(1);
}
javaByteBuffer = env-&amp;gt;NewDirectByteBuffer(buffer, _capacity);&lt;/p&gt;
&lt;p&gt;unidbg执行报定位到这个异常中&lt;br&gt;
Pointer _NewDirectByteBuffer = svcMemory.registerSvc(new Arm64Svc() {
@Override
public long handle(Emulator&amp;lt;?&amp;gt; emulator) {
throw new UnsupportedOperationException();
}
});&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/674</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/674</guid><pubDate>Tue, 10 Sep 2024 06:32:54 GMT</pubDate><author>winnerMaster1</author></item><item><title>调用so错误，大佬帮看下 （(ARM32SyscallHandler:533) - handleInterrupt intno=2, NR=192)</title><description>&lt;p&gt;报错：
&quot;C:\Program Files\Java\jdk1.8.0_202\bin\java.exe&quot; -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:56480,suspend=y,server=n -javaagent:C:\Users\hxiang.ARCVIDEO\AppData\Local\JetBrains\IntelliJIdea2022.1\captureAgent\debugger-agent.jar -Dfile.encoding=UTF-8 -classpath &quot;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;D:\unidbg-0.9.7\unidbg-android\target\test-classes;D:\unidbg-0.9.7\unidbg-android\target\classes;D:\unidbg-0.9.7\unidbg-api\target\classes;D:\maven_repo\com\github\zhkl0228\unicorn\1.0.12\unicorn-1.0.12.jar;D:\maven_repo\org\scijava\native-lib-loader\2.3.5\native-lib-loader-2.3.5.jar;D:\maven_repo\com\github\zhkl0228\capstone\3.1.8\capstone-3.1.8.jar;D:\maven_repo\net\java\dev\jna\jna\5.10.0\jna-5.10.0.jar;D:\maven_repo\com\github\zhkl0228\keystone\0.9.7\keystone-0.9.7.jar;D:\maven_repo\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;D:\maven_repo\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;D:\maven_repo\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;D:\maven_repo\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\maven_repo\com\alibaba\fastjson\1.2.83\fastjson-1.2.83.jar;D:\maven_repo\com\github\zhkl0228\demumble\1.0.4\demumble-1.0.4.jar;D:\maven_repo\net\dongliu\apk-parser\2.6.10\apk-parser-2.6.10.jar;D:\unidbg-0.9.7\backend\dynarmic\target\classes;D:\unidbg-0.9.7\backend\hypervisor\target\classes;D:\unidbg-0.9.7\backend\kvm\target\classes;D:\unidbg-0.9.7\backend\unicorn2\target\classes;D:\maven_repo\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\maven_repo\junit\junit\4.13.2\junit-4.13.2.jar;D:\maven_repo\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;D:\maven_repo\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;D:\maven_repo\org\slf4j\slf4j-reload4j\1.7.36\slf4j-reload4j-1.7.36.jar;D:\maven_repo\ch\qos\reload4j\reload4j\1.2.19\reload4j-1.2.19.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2022.1\lib\idea_rt.jar&quot; com.iptv.mktv.Mktv
Connected to the target VM, address: &#39;127.0.0.1:56480&#39;, transport: &#39;socket&#39;
当前进程PID -&amp;gt; 13984
[10:28:51 167]  INFO [com.github.unidbg.linux.AndroidElfLoader] (AndroidElfLoader:468) - &lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt; load dependency &lt;a href=&quot;http://liblog.so/&quot;&gt;liblog.so&lt;/a&gt; failed
[10:28:51 170]  INFO [com.github.unidbg.linux.AndroidElfLoader] (AndroidElfLoader:468) - &lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt; load dependency &lt;a href=&quot;http://libz.so/&quot;&gt;libz.so&lt;/a&gt; failed
[10:28:51 170]  INFO [com.github.unidbg.linux.AndroidElfLoader] (AndroidElfLoader:468) - &lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt; load dependency &lt;a href=&quot;http://libstdc++.so/&quot;&gt;libstdc++.so&lt;/a&gt; failed
[10:28:51 170]  INFO [com.github.unidbg.linux.AndroidElfLoader] (AndroidElfLoader:468) - &lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt; load dependency &lt;a href=&quot;http://libm.so/&quot;&gt;libm.so&lt;/a&gt; failed
[10:28:51 171]  INFO [com.github.unidbg.linux.AndroidElfLoader] (AndroidElfLoader:468) - &lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt; load dependency &lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt; failed
[10:28:51 171]  INFO [com.github.unidbg.linux.AndroidElfLoader] (AndroidElfLoader:468) - &lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt; load dependency &lt;a href=&quot;http://libdl.so/&quot;&gt;libdl.so&lt;/a&gt; failed
[10:28:51 221]  WARN [com.github.unidbg.linux.ARM32SyscallHandler] (ARM32SyscallHandler:533) - handleInterrupt intno=2, NR=192, svcNumber=0x0, PC=RWX@0x4044aa7a, LR=RWX@0x4044aa69, syscall=null
java.lang.IllegalStateException: munmap aligned=0x271000, start=0x4005e000
at com.github.unidbg.spi.AbstractLoader.munmap(AbstractLoader.java:144)
at com.github.unidbg.linux.AndroidElfLoader.mmap2(AndroidElfLoader.java:735)
at com.github.unidbg.linux.ARM32SyscallHandler.mmap2(ARM32SyscallHandler.java:1840)
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:346)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function32.run(Function32.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:229)
at com.github.unidbg.linux.LinuxInitFunction.call(LinuxInitFunction.java:31)
at com.github.unidbg.linux.LinuxModule.callInitFunction(LinuxModule.java:141)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:180)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:62)
at com.github.unidbg.spi.AbstractLoader.load(AbstractLoader.java:233)
at com.github.unidbg.linux.android.dvm.BaseVM.loadLibrary(BaseVM.java:312)
at com.iptv.mktv.Mktv.&lt;init&gt;(Mktv.java:42)
at com.iptv.mktv.Mktv.main(Mktv.java:96)
[10:28:51 223]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x401d0c49[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x1d0c49 exception sp=unidbg@0xbffff6c4, msg=munmap aligned=0x271000, start=0x4005e000, offset=7ms
[10:28:51 224]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005f8f0, size=1, value=0x0, PC=RX@0x4005f8f0[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f8f0, LR=unidbg@0xffff0000
[10:28:51 224]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005f8f1[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f8f1 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=1ms
[10:28:51 224]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005f970, size=1, value=0x0, PC=RX@0x4005f970[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f970, LR=unidbg@0xffff0000
[10:28:51 224]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005f971[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f971 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 224]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005f99c, size=1, value=0x0, PC=RX@0x4005f99c[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f99c, LR=unidbg@0xffff0000
[10:28:51 224]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005f99d[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f99d exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 225]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005f9c8, size=1, value=0x0, PC=RX@0x4005f9c8[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f9c8, LR=unidbg@0xffff0000
[10:28:51 225]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005f9c9[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5f9c9 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=1ms
[10:28:51 226]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005fa00, size=1, value=0x0, PC=RX@0x4005fa00[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fa00, LR=unidbg@0xffff0000
[10:28:51 226]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005fa01[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fa01 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 226]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005fa2c, size=1, value=0x0, PC=RX@0x4005fa2c[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fa2c, LR=unidbg@0xffff0000
[10:28:51 226]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005fa2d[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fa2d exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 226]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005fa84, size=1, value=0x0, PC=RX@0x4005fa84[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fa84, LR=unidbg@0xffff0000
[10:28:51 227]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005fa85[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fa85 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=1ms
[10:28:51 227]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005fad4, size=1, value=0x0, PC=RX@0x4005fad4[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fad4, LR=unidbg@0xffff0000
[10:28:51 227]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005fad5[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fad5 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 227]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005fbb0, size=1, value=0x0, PC=RX@0x4005fbb0[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fbb0, LR=unidbg@0xffff0000
[10:28:51 227]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005fbb1[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fbb1 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 227]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005fc8c, size=1, value=0x0, PC=RX@0x4005fc8c[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fc8c, LR=unidbg@0xffff0000
[10:28:51 227]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005fc8d[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fc8d exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 228]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4005fcc8, size=1, value=0x0, PC=RX@0x4005fcc8[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fcc8, LR=unidbg@0xffff0000
[10:28:51 228]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4005fcc9[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x5fcc9 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[10:28:51 231]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x400984f8, size=1, value=0x0, PC=RX@0x400984f8[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x984f8, LR=unidbg@0xffff0000
[10:28:51 231]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x400984f9[&lt;a href=&quot;http://libtvcore.so/&quot;&gt;libtvcore.so&lt;/a&gt;]0x984f9 exception sp=unidbg@0xbffff730, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
Exception in thread &quot;main&quot; java.lang.IllegalStateException: Illegal JNI version: 0xffffffff
at com.github.unidbg.linux.android.dvm.BaseVM.checkVersion(BaseVM.java:207)
at com.github.unidbg.linux.android.dvm.DalvikModule.callJNI_OnLoad(DalvikModule.java:39)
at com.iptv.mktv.Mktv.&lt;init&gt;(Mktv.java:45)
at com.iptv.mktv.Mktv.main(Mktv.java:96)
Disconnected from the target VM, address: &#39;127.0.0.1:56480&#39;, transport: &#39;socket&#39;&lt;/init&gt;&lt;/init&gt;&lt;/p&gt;
&lt;p&gt;Process finished with exit code 1&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/672</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/672</guid><pubDate>Thu, 05 Sep 2024 02:31:51 GMT</pubDate><author>hayXiang</author></item><item><title>求助！！运行报错，好像是找不到方法JNIEnv-&gt;GetMethodID(java/lang/String.charAt(I)C)。</title><description>&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/1b1e6002-dbf0-40ce-b4c3-d268126cb501&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;img src=&quot;https://github.com/user-attachments/assets/ed2fd95e-2bf6-4b15-a3be-8e2f79dda8b9&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/671</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/671</guid><pubDate>Sun, 01 Sep 2024 04:31:16 GMT</pubDate><author>Phoebe-xylon</author></item><item><title>请教一下大佬 toReflectedMethod 的问题</title><description>&lt;p&gt;遇到需要toReflectedMethod 来补环境的错误
android/hardware/camera2/CameraManager-&amp;gt;openCamera(Ljava/lang/String;Landroid/hardware/camera2/CameraDevice$StateCallback;Landroid/os/Handler;)V&lt;/p&gt;
&lt;p&gt;大佬知道要如何补吗&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/669</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/669</guid><pubDate>Wed, 28 Aug 2024 16:16:27 GMT</pubDate><author>1242239352</author></item><item><title>NR=222,mmap2出错</title><description>&lt;p&gt;WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:369) - handleInterrupt intno=2, NR=222, svcNumber=0x0, PC=RX@0x404ea7ac[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x6a7ac, LR=RX@0x40223bf8[&lt;a href=&quot;http://libbitcpt.so/&quot;&gt;libbitcpt.so&lt;/a&gt;]0x223bf8, syscall=null
java.lang.AbstractMethodError: mmap2 start=0x40000000, length=1998848, prot=0x3, flags=0x12, fd=4, offset=0
at com.github.unidbg.linux.AndroidElfLoader.mmap2(AndroidElfLoader.java:760)
so打开是乱码的，可能加固了，不知道和这个有没有关系，某数字游戏盒子&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/667</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/667</guid><pubDate>Sun, 25 Aug 2024 17:05:57 GMT</pubDate><author>whiskey-7</author></item><item><title>补环境过程中出现pathname的错误？&quot;com.sun.jna.Pointer.getString(long)&quot; because &quot;pathname&quot; is null</title><description>&lt;p&gt;[19:46:07 676]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:412) - handleInterrupt intno=2, NR=79, svcNumber=0x0, PC=RX@0x4036a20c[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x6a20c, LR=RX@0x400fcda8[&lt;a href=&quot;http://libmain.so/&quot;&gt;libmain.so&lt;/a&gt;]0xfcda8, syscall=null
java.lang.NullPointerException: Cannot invoke &quot;com.sun.jna.Pointer.getString(long)&quot; because &quot;pathname&quot; is null
at com.github.unidbg.linux.ARM64SyscallHandler.fstatat64(ARM64SyscallHandler.java:1383)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:391)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:378)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:341)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:262)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/666</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/666</guid><pubDate>Sat, 24 Aug 2024 12:07:24 GMT</pubDate><author>freedomzzj</author></item><item><title>进程已结束，退出代码为 -1073740791 (0xC0000409)</title><description>&lt;p&gt;自己尝试解决了很长时间无果~
将项目的 master 下载下来并且依赖库下载完成后，运行案例 TTEncrypt.java 后报错：
&quot;D:\Program Files\Java\jdk-22\bin\java.exe&quot; &quot;-javaagent:D:\Program Files\IntelliJ IDEA 2023.3.5\lib\idea_rt.jar=64135:D:\Program Files\IntelliJ IDEA 2023.3.5\bin&quot; -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath D:\WWW\unidbg-test\unidbg-android\target\test-classes;D:\WWW\unidbg-test\unidbg-android\target\classes;D:\WWW\unidbg-test\unidbg-api\target\classes;C:\Users\ASUS.m2\repository\com\github\zhkl0228\unicorn\1.0.14\unicorn-1.0.14.jar;C:\Users\ASUS.m2\repository\org\scijava\native-lib-loader\2.3.5\native-lib-loader-2.3.5.jar;C:\Users\ASUS.m2\repository\com\github\zhkl0228\capstone\3.1.8\capstone-3.1.8.jar;C:\Users\ASUS.m2\repository\net\java\dev\jna\jna\5.10.0\jna-5.10.0.jar;C:\Users\ASUS.m2\repository\com\github\zhkl0228\keystone\0.9.7\keystone-0.9.7.jar;C:\Users\ASUS.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\ASUS.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\ASUS.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\ASUS.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\ASUS.m2\repository\com\alibaba\fastjson\1.2.83\fastjson-1.2.83.jar;C:\Users\ASUS.m2\repository\com\github\zhkl0228\demumble\1.0.4\demumble-1.0.4.jar;C:\Users\ASUS.m2\repository\net\dongliu\apk-parser\2.6.10\apk-parser-2.6.10.jar;D:\WWW\unidbg-test\backend\dynarmic\target\classes;D:\WWW\unidbg-test\backend\hypervisor\target\classes;D:\WWW\unidbg-test\backend\kvm\target\classes;D:\WWW\unidbg-test\backend\unicorn2\target\classes;C:\Users\ASUS.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ASUS.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\ASUS.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ASUS.m2\repository\org\slf4j\slf4j-reload4j\2.0.13\slf4j-reload4j-2.0.13.jar;C:\Users\ASUS.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar com.bytedance.frameworks.core.encrypt.TTEncrypt&lt;/p&gt;
&lt;p&gt;进程已结束，退出代码为 -1073740791 (0xC0000409)&lt;/p&gt;
&lt;p&gt;运行 unidbg-android/src/test/java/com/sun/jna/JniDispatch32.java 成功，返回和帮助中的 gif 一致；&lt;/p&gt;
&lt;p&gt;运行 unidbg-android/src/test/java/com/sun/jna/JniDispatch64.java 失败，返回和第一个一样：
&quot;D:\Program Files\Java\jdk-22\bin\java.exe&quot; &quot;-javaagent:D:\Program Files\IntelliJ IDEA 2023.3.5\lib\idea_rt.jar=64108:D:\Program Files\IntelliJ IDEA 2023.3.5\bin&quot; -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath D:\WWW\unidbg-test\unidbg-android\target\test-classes;D:\WWW\unidbg-test\unidbg-android\target\classes;D:\WWW\unidbg-test\unidbg-api\target\classes;C:\Users\ASUS.m2\repository\com\github\zhkl0228\unicorn\1.0.14\unicorn-1.0.14.jar;C:\Users\ASUS.m2\repository\org\scijava\native-lib-loader\2.3.5\native-lib-loader-2.3.5.jar;C:\Users\ASUS.m2\repository\com\github\zhkl0228\capstone\3.1.8\capstone-3.1.8.jar;C:\Users\ASUS.m2\repository\net\java\dev\jna\jna\5.10.0\jna-5.10.0.jar;C:\Users\ASUS.m2\repository\com\github\zhkl0228\keystone\0.9.7\keystone-0.9.7.jar;C:\Users\ASUS.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\ASUS.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\ASUS.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\ASUS.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\ASUS.m2\repository\com\alibaba\fastjson\1.2.83\fastjson-1.2.83.jar;C:\Users\ASUS.m2\repository\com\github\zhkl0228\demumble\1.0.4\demumble-1.0.4.jar;C:\Users\ASUS.m2\repository\net\dongliu\apk-parser\2.6.10\apk-parser-2.6.10.jar;D:\WWW\unidbg-test\backend\dynarmic\target\classes;D:\WWW\unidbg-test\backend\hypervisor\target\classes;D:\WWW\unidbg-test\backend\kvm\target\classes;D:\WWW\unidbg-test\backend\unicorn2\target\classes;C:\Users\ASUS.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ASUS.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\ASUS.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\ASUS.m2\repository\org\slf4j\slf4j-reload4j\2.0.13\slf4j-reload4j-2.0.13.jar;C:\Users\ASUS.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar com.sun.jna.JniDispatch64&lt;/p&gt;
&lt;p&gt;进程已结束，退出代码为 -1073740791 (0xC0000409)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/664</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/664</guid><pubDate>Wed, 21 Aug 2024 09:24:48 GMT</pubDate><author>wuliang9524</author></item><item><title>不知道还在不在关注这个项目</title><description>&lt;p&gt;我现在有个疑问，我有个就是ARM32架构的机器，我应该怎么使用这个项目呢，或者说有什么更好的方法直接调用.so文件吗&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/661</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/661</guid><pubDate>Mon, 19 Aug 2024 04:40:16 GMT</pubDate><author>ning1306158</author></item><item><title>启动就自动停止了</title><description>&lt;p&gt;日志
athname =/dev/&lt;strong&gt;properties&lt;/strong&gt;
File opened &#39;/dev/&lt;strong&gt;properties&lt;/strong&gt;&#39; with oflags=0xa8000 from RX@0x40222e75[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x1be75
File closed &#39;/dev/&lt;strong&gt;properties&lt;/strong&gt;&#39; from RX@0x40220fe1[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x19fe1
pathname =/proc/stat
File opened &#39;/proc/stat&#39; with oflags=0xa0000 from RX@0x40222e75[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x1be75
Read 1871 bytes from &#39;/proc/stat&#39;
Read 0 bytes from &#39;/proc/stat&#39;
File closed &#39;/proc/stat&#39; from RX@0x40220fe1[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x19fe1
pathname =/proc/self/maps
File opened &#39;/proc/self/maps&#39; with oflags=0x0 from RX@0x40166904[&lt;a href=&quot;http://libnatciml.so/&quot;&gt;libNatciml.so&lt;/a&gt;]0x166904
Read 1 bytes from &#39;/proc/self/maps&#39;
Read 1 bytes from &#39;/proc/self/maps&#39;
Read 1 bytes from &#39;/proc/self/maps&#39;
Read 1 bytes from &#39;/proc/self/maps&#39;
Read 1 bytes from &#39;/proc/self/maps&#39;
很多Read 1 bytes from &#39;/proc/self/maps&#39;
Read 0 bytes from &#39;/proc/self/maps&#39;
exit status=0
2024-08-13 10:48:49.471  WARN 11768 --- [           main] c.github.unidbg.arm.AbstractARMEmulator  : memory failed: address=0x0, size=4, value=0x0, PC=RX@0x4004bc14[&lt;a href=&quot;http://libnatciml.so/&quot;&gt;libNatciml.so&lt;/a&gt;]0x4bc14, LR=unidbg@0xffff0000
2024-08-13 10:48:49.472  WARN 11768 --- [           main] com.github.unidbg.AbstractEmulator       : emulate RX@0x4004bc15[&lt;a href=&quot;http://libnatciml.so/&quot;&gt;libNatciml.so&lt;/a&gt;]0x4bc15 exception sp=unidbg@0xbffff798, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=1ms
2024-08-13 10:48:49.472  WARN 11768 --- [           main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;mingRenService&#39; defined in file [D:\ideaProject\feichangzhun\target\classes\com\anjia\unidbgserver\service\MingRenService.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.anjia.unidbgserver.service.MingRenService]: Constructor threw exception; nested exception is java.lang.IllegalStateException: Illegal JNI version: 0xffffffff
2024-08-13 10:48:49.532 ERROR 11768 --- [           main] o.s.boot.SpringApplication               : Application run failed&lt;/p&gt;
&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;mingRenService&#39; defined in file [D:\ideaProject\feichangzhun\target\classes\com\anjia\unidbgserver\service\MingRenService.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.anjia.unidbgserver.service.MingRenService]: Constructor threw exception; nested exception is java.lang.IllegalStateException: Illegal JNI version: 0xffffffff
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
at com.anjia.unidbgserver.UnidbgServerApplication.main(UnidbgServerApplication.java:31)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.anjia.unidbgserver.service.MingRenService]: Constructor threw exception; nested exception is java.lang.IllegalStateException: Illegal JNI version: 0xffffffff
at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
... 15 common frames omitted
Caused by: java.lang.IllegalStateException: Illegal JNI version: 0xffffffff
at com.github.unidbg.linux.android.dvm.BaseVM.checkVersion(BaseVM.java:194)
at com.github.unidbg.linux.android.dvm.DalvikModule.callJNI_OnLoad(DalvikModule.java:39)
at com.anjia.unidbgserver.service.MingRenService.&lt;init&gt;(MingRenService.java:173)
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
... 17 common frames omitted&lt;/init&gt;&lt;/p&gt;
&lt;p&gt;Process finished with exit code 1&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/660</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/660</guid><pubDate>Tue, 13 Aug 2024 02:51:23 GMT</pubDate><author>jing-xf</author></item><item><title>ldid error</title><description>&lt;p&gt;run the command &lt;code&gt;sudo ./ldid -M -Shypervisor.entitlements &quot;$JAVA_HOME&quot;/bin/java&lt;/code&gt;
return the error
&lt;code&gt;ldid.cpp(3332): _assert(): errno=2&lt;/code&gt;
jdk version: temurin-21.jdk
CPU: M3 pro&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/659</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/659</guid><pubDate>Sun, 11 Aug 2024 13:38:04 GMT</pubDate><author>fa1conn</author></item><item><title>如何反射拿到android/content/Context的方法</title><description>&lt;p&gt;方法需要返回 安卓Context的一下方法，原java代码 就是 反射 但是这里反射拿到的是unidbg的 而且提示找不到 如何解决
&lt;img src=&quot;https://github.com/user-attachments/assets/625a3199-064d-4fe5-8b9c-e1be6c9b3400&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/658</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/658</guid><pubDate>Sun, 11 Aug 2024 10:59:49 GMT</pubDate><author>errorge</author></item><item><title>Static and dynamic analysis</title><description>&lt;h3&gt;Unlock the Power of Android ELF Binary Analysis with SherlockElf&lt;/h3&gt;
&lt;p&gt;Are you a security researcher, developer, or reverse engineer working with Android ELF binaries? Look no further! SherlockElf is your all-in-one toolkit designed to make static and dynamic analysis of ELF binaries not only possible but straightforward and efficient.&lt;/p&gt;
&lt;h3&gt;Key Features:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Static Analysis:&lt;/strong&gt; Extract and dive deep into metadata, headers, and sections from ELF binaries to uncover intricate details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Analysis:&lt;/strong&gt; Execute and monitor ELF binaries to observe runtime behavior, helping you identify potential vulnerabilities before they can be exploited.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;User-Friendly Interface:&lt;/strong&gt; With an intuitive command-line interface, navigating and utilizing SherlockElf is a breeze, even for those new to binary analysis.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comprehensive Reporting:&lt;/strong&gt; Generate detailed analysis reports, providing a thorough breakdown of your findings for further inspection.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cross-Platform Support&lt;/strong&gt;: Whether you&#39;re on Windows, macOS, or Linux, SherlockElf operates seamlessly across multiple platforms, ensuring you can work in your preferred environment.&lt;/p&gt;
&lt;h3&gt;Why Choose SherlockElf?&lt;/h3&gt;
&lt;p&gt;SherlockElf simplifies complex tasks, providing you with the tools needed to analyze ELF binaries with confidence. Its robust features and easy-to-use interface make it a must-have for professionals aiming to stay ahead in the cybersecurity landscape.&lt;/p&gt;
&lt;h3&gt;Getting Started:&lt;/h3&gt;
&lt;p&gt;Clone the repository, install dependencies, and start analyzing in minutes! SherlockElf supports advanced setups with rooted Android devices and integrates smoothly with tools like Frida for dynamic analysis.&lt;/p&gt;
&lt;p&gt;Join the community of contributors and start exploring the full potential of ELF binary analysis with SherlockElf today!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iamtorsten/SherlockElf&quot;&gt;https://github.com/iamtorsten/SherlockElf&lt;/a&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/657</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/657</guid><pubDate>Fri, 09 Aug 2024 11:49:03 GMT</pubDate><author>qpacp</author></item><item><title>NR=222 munmap 在unidbg中mmap已经被模拟，但是后续的java.lang.IllegalStateException是什么问题</title><description>&lt;img width=&quot;1114&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/851f5f99-24bf-4ff2-8db2-db438de0efde&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;img width=&quot;899&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/0e676f25-45cd-46c0-8bec-73092cc9a91e&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;img width=&quot;939&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/6b2677b3-d644-4031-abc2-a8f742366f20&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/656</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/656</guid><pubDate>Thu, 08 Aug 2024 11:35:16 GMT</pubDate><author>xcc19960929</author></item><item><title>pthread_join Pointer 对象为空</title><description>&lt;p&gt;`
IWhale whale = Whale.getInstance(emulator);
Symbol free = emulator.getMemory().findModule(&quot;&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;&quot;).findSymbolByName(&quot;pthread_join&quot;);
final AtomicLong value_ptr = new AtomicLong();&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    whale.inlineHookFunction(free, new ReplaceCallback() {
        @Override
        public HookStatus onCall(Emulator&amp;lt;?&amp;gt; emulator, long originFunction) {
            Pointer ptr = emulator.getContext().getPointerArg(1);
            if (ptr != null) {
                if (emulator.is64Bit()) {
                    ptr.setLong(0, value_ptr.get());
                } else {
                    ptr.setInt(0, (int) value_ptr.get());
                }
            } else {
                System.out.println(&quot;pthread_join ptr is null&quot;);
            }
            return HookStatus.LR(emulator, 0);
        }
    });
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;`&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/655</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/655</guid><pubDate>Wed, 07 Aug 2024 11:13:38 GMT</pubDate><author>q601180252</author></item><item><title>AttachCurrentThread 不执行</title><description>&lt;p&gt;我重新Onload 时 0.97 版本AttachCurrentThread中的方法不执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  jint res = OnLoad(getnewvm(), nullptr);
static JNIInvokeInterface libre2vm{

        .DestroyJavaVM=[](JavaVM *vm) -&amp;gt; jint {
            LOGAR(&quot;DestroyJavaVM(JavaVM*)&quot;);
            return 0;
        },
        .AttachCurrentThread=[](JavaVM *vm, JNIEnv **p_env, void *thr_args) {
            LOGGER(&quot;AttachCurrentThread(%p, env, %p)\n&quot;, vm, thr_args);
            *p_env = subenv;
//    return origAttachCurrentThread(vm, p_env, thr_args);
            if (!javaAttached) {
                javaAttached = true;
                while (true) {
                    LOGAR(&quot;exit&quot;);
                    syscall(SYS_exit, 0);
                }
            }
            return 0;
        },
        .DetachCurrentThread=[](JavaVM *vm) -&amp;gt; jint {
            LOGAR(&quot;DetachCurrentThread(JavaVM*)&quot;);
//                return origDetachCurrentThread(vm);
            return 0;
        },

        .GetEnv=libre2getenv,
        .AttachCurrentThreadAsDaemon=[](JavaVM *vm, JNIEnv **p_env, void *thr_args) {
            LOGAR(&quot;AttachCurrentThreadAsDaemon(vm, env, rest)&quot;);
//    return origAttachCurrentThreadAsDaemon(vm, p_env, thr_args);
            return 0;
        }
};

static JavaVM hiervmptr{.functions=&amp;amp;libre2vm};

//extern JavaVM *vmptr;
JavaVM *getnewvm() {
    LOGGER(&quot;AttachCurrentThread %d\n&quot;, 1);
    return &amp;amp;hiervmptr;

}

&lt;/code&gt;&lt;/pre&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/654</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/654</guid><pubDate>Tue, 06 Aug 2024 10:53:37 GMT</pubDate><author>q601180252</author></item><item><title>本地正常，部署到服务器后报错。Read memory failed: address=</title><description>&lt;p&gt;本地都正常，部署到服务器后就不行了，
emulator.attach().addBreakPoint感觉像失效了一样。
System.out.println(&quot;X0:&quot;+X0);一次都没有打印X0
大佬帮忙看看什么原因啊，折磨我一天了&lt;/p&gt;
&lt;p&gt;报错信息：
Read memory failed: address=0x1fffe186e, size=1, value=0x0
emulate RX@0x40c3bf20[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x1bf20 exception sp=unidbg@0xbfffd300, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=12ms @ Runnable|Function64 address=0x4009978c, arguments=[unidbg@0xfffe1640[&lt;a href=&quot;http://libjnigraphics.so/&quot;&gt;libjnigraphics.so&lt;/a&gt;]0x640, 617692062, 967688833, 1669347001, 1118512710, 1863051334, 946177772, 1513245351]&lt;/p&gt;
&lt;p&gt;MyService(UnidbgProperties unidbgProperties) {
DEBUG_FLAG = unidbgProperties.isVerbose();
Dynarmic = unidbgProperties.isDynarmic();
EmulatorBuilder&lt;androidemulator&gt; builder = AndroidEmulatorBuilder.for64Bit().setProcessName(&quot;com.ceshi.encrypt&quot;);
if (Dynarmic) {
builder.addBackendFactory(new Unicorn2Factory(true));
}
emulator = builder.build();
emulator.getSyscallHandler().setEnableThreadDispatcher(true);
final Memory memory = emulator.getMemory();
memory.setLibraryResolver(new AndroidResolver(23));
emulator.getSyscallHandler().addIOResolver(new FileResolver());
vm = emulator.createDalvikVM();
new JniGraphics(emulator, vm).register(memory);
new AndroidModule(emulator, vm).register(memory);
vm.setVerbose(DEBUG_FLAG);
vm.setJni(new Jni(this));
DalvikModule dm = vm.loadLibrary(TempFileUtils.getTempFile(TT_ENCRYPT_LIB_PATH), false);
dm.callJNI_OnLoad(emulator);
module = dm.getModule();
System.out.println(module.base);&lt;/androidemulator&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    emulator.attach().addBreakPoint(module, 0x9AA8B4, new BreakPointCallback() {//+hex34 //0x954014
        @Override
        public boolean onHit(Emulator&amp;lt;?&amp;gt; emulator, long address) {
            UnidbgPointer pointer = UnidbgPointer.register(emulator, Unicorn.UC_ARM64_REG_X0);
            String X0 = Long.toHexString(pointer.peer);
            System.out.println(&quot;X0:&quot;+X0);
            if (X0.length() &amp;gt;= 9 &amp;amp;&amp;amp; X0.startsWith(&quot;1f&quot;))
            {
                emulator.getBackend().reg_write(Unicorn.UC_ARM64_REG_X0, pointer.toUIntPeer());
            }
            return true;
        }
    });
}
&lt;/code&gt;&lt;/pre&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/653</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/653</guid><pubDate>Wed, 31 Jul 2024 14:27:43 GMT</pubDate><author>a810291783</author></item><item><title>调用方法时报错 --- svc number :243184,求教各位大佬如何解决</title><description>&lt;p&gt;16:18:10.483 [main] DEBUG com.github.unidbg.arm.Arguments - map arg5: unidbg@0xbffff720 -&amp;gt;
16:18:10.483 [main] DEBUG com.github.unidbg.AbstractEmulator - emulate RX@0x40005e3c[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x5e3c started sp=unidbg@0xbffff718
16:18:10.486 [main] WARN com.github.unidbg.linux.ARM32SyscallHandler - handleInterrupt intno=2, NR=0, svcNumber=0x3b5f0, PC=RX@0x40005e40[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x5e40, LR=unidbg@0xffff0000, syscall=null
java.lang.IllegalStateException: svc number: 243184
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:136)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function32.run(Function32.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:229)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.LinuxModule.callFunction(LinuxModule.java:258)
at com.anjia.unidbgserver.service.DiDiNativeSigService.didiSig(DiDiNativeSigService.java:144)
at com.anjia.unidbgserver.service.DiDiNativeSigService.main(DiDiNativeSigService.java:158)
debugger break at: 0x40005e40 @ Function32 address=0x40005e3c, arguments=[unidbg@0xfffe12a0, 0, 330084561, 1043351526, , 937773018]&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;r0=0xfffe12a0(-126304) r1=0x0 r2=0x13acb0d1 r3=0x3e3047e6 r4=0x0 r5=0x0 r6=0x0 r7=0x0 r8=0x0 sb=0x0 sl=0x0 fp=0x0 ip=0xe1398da7
SP=0xbffff718 LR=unidbg@0xffff0000 PC=RX@0x40005e40[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x5e40 cpsr: N=0, Z=1, C=1, V=0, T=0, mode=0b10000
d0=0xffffffffffffffff(NaN) d1=0x3220302034203720(3.002229861217884E-67) d2=0x3436333832203236(3.5366761868402984E-57) d3=0x3120323938343135(4.583358096989596E-72) d4=0x2030203020302030(1.2027122125173386E-153) d5=0x2030203020302030(1.2027122125173386E-153) d6=0x2030203020302030(1.2027122125173386E-153) d7=0x2030203020302030(1.2027122125173386E-153)
d8=0x0(0.0) d9=0x0(0.0) d10=0x0(0.0) d11=0x0(0.0) d12=0x0(0.0) d13=0x0(0.0) d14=0x0(0.0) d15=0x0(0.0)
java.lang.IllegalStateException: svc number: 243184
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:136)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function32.run(Function32.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:229)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.LinuxModule.callFunction(LinuxModule.java:258)
at com.anjia.unidbgserver.service.DiDiNativeSigService.didiSig(DiDiNativeSigService.java:144)
at com.anjia.unidbgserver.service.DiDiNativeSigService.main(DiDiNativeSigService.java:158)
16:18:10.507 [main] DEBUG org.scijava.nativelib.NativeLibraryUtil - architecture is OSX_64 &lt;a href=&quot;http://os.name/&quot;&gt;os.name&lt;/a&gt; is mac os x
16:18:10.507 [main] DEBUG org.scijava.nativelib.NativeLibraryUtil - platform specific path is natives/osx_64/
16:18:10.507 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - mappedLib is libdisassembler.dylib
16:18:10.507 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - URL is jar:file:/Users/wang/.m2/repository/com/github/zhkl0228/capstone/3.1.8/capstone-3.1.8.jar!/natives/osx_64/libdisassembler.dylib
16:18:10.507 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - URL path is file:/Users/wang/.m2/repository/com/github/zhkl0228/capstone/3.1.8/capstone-3.1.8.jar!/natives/osx_64/libdisassembler.dylib
16:18:10.508 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - Extracting &#39;jar:file:/Users/wang/.m2/repository/com/github/zhkl0228/capstone/3.1.8/capstone-3.1.8.jar!/natives/osx_64/libdisassembler.dylib&#39; to &#39;/var/folders/lt/20_dfj7564j_bg6jqy2ljf5r0000gn/T/nativelib-loader_5367234270330629461/libdisassembler.dylib&#39;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/652</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/652</guid><pubDate>Fri, 26 Jul 2024 08:40:06 GMT</pubDate><author>dawang0129</author></item><item><title>怎么用vscode调试？</title><description>&lt;p&gt;如何配置vscode搭建调试环境？&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/651</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/651</guid><pubDate>Wed, 24 Jul 2024 04:49:39 GMT</pubDate><author>GHeillcoat</author></item><item><title>这哪个app</title><description>&lt;p&gt;QQ&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/650</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/650</guid><pubDate>Sun, 21 Jul 2024 17:01:08 GMT</pubDate><author>a810291783</author></item><item><title>求大佬指点，这种环境怎么补，全网也没找到相似的例子。</title><description>&lt;blockquote&gt;
&lt;p&gt;hook信息：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;时间：2024-07-21 00:35:26
类名：android.system.Os
日志名称：stat(String)
参数1
参数类型:java.lang.String
参数值：/data/user_de/0/com.tencent.mobileqq/code_cache
返回结果类型:android.system.StructStat
返回结果值：StructStat[st_atim=StructTimespec[tv_nsec=389602659,tv_sec=1721493326],st_atime=1721493326,st_blksize=4096,st_blocks=8,st_ctim=StructTimespec[tv_nsec=389602659,tv_sec=1721493326],st_ctime=1721493326,st_dev=2066,st_gid=20054,st_ino=786640,st_mode=17913,st_mtim=StructTimespec[tv_nsec=389602659,tv_sec=1721493326],st_mtime=1721493326,st_nlink=2,st_rdev=0,st_size=4096,st_uid=10054]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;报错信息：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;java.lang.UnsupportedOperationException: android/system/Os-&amp;gt;stat(Ljava/lang/String;)Landroid/system/StructStat;
at com.github.unidbg.linux.android.dvm.AbstractJni.callStaticObjectMethodV(AbstractJni.java:504)
at com.github.unidbg.linux.android.dvm.AbstractJni.callStaticObjectMethodV(AbstractJni.java:438)
at com.github.unidbg.linux.android.dvm.DvmMethod.callStaticObjectMethodV(DvmMethod.java:59)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;怎么补上这个环境，请大佬指点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;@Override
public DvmObject&amp;lt;?&amp;gt; callStaticObjectMethodV(BaseVM vm, DvmClass dvmClass, String signature, VaList vaList) {
switch (signature) {
case &quot;android/system/Os-&amp;gt;stat(Ljava/lang/String;)Landroid/system/StructStat;&quot;:
String path = String.valueOf(vaList.getObjectArg(0));
if (path.contains(&quot;/storage/emulated&quot;)) {
// 创建 Stat64 对象
Stat64 stat64 = new Stat64(new Pointer(0));
// 设置属性值
stat64.st_blksize = 4096;
stat64.st_blocks = 8;
stat64.st_dev = 2066;
stat64.st_gid = 20054;
stat64.st_ino = 786640;
stat64.st_mode = 17913;
stat64.st_nlink = 2;
stat64.st_rdev = 0;
stat64.st_size = 4096;
stat64.st_uid = 10054;
// 设置时间属性
TimeSpec64 atim = new TimeSpec64(new Pointer(0));
atim.tv_nsec = 389602659;
atim.tv_sec = 1721493326;
stat64.st_atim = atim;
TimeSpec64 mtim = new TimeSpec64(new Pointer(0));
mtim.tv_nsec = 389602659;
mtim.tv_sec = 1721493326;
stat64.st_mtim = mtim;
TimeSpec64 ctim = new TimeSpec64(new Pointer(0));
ctim.tv_nsec = 389602659;
ctim.tv_sec = 1721493326;
stat64.st_ctim = ctim;
}
return vm.resolveClass(&quot;android/system/StructStat&quot;).newObject();
default:
throw new UnsupportedOperationException(signature);
}
}&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/649</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/649</guid><pubDate>Sun, 21 Jul 2024 07:22:32 GMT</pubDate><author>a810291783</author></item><item><title>大佬，clock_gettime clk_id=2 报错问题，能否解决下</title><description>&lt;p&gt;java.lang.UnsupportedOperationException: clk_id=2
at com.github.unidbg.linux.ARM64SyscallHandler.clock_gettime(ARM64SyscallHandler.java:1270)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:334)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:378)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:341)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:262)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:329)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/648</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/648</guid><pubDate>Fri, 19 Jul 2024 09:22:26 GMT</pubDate><author>ljz2009y</author></item><item><title>没有对 SocketIO.SOCK_RAW 进行模拟</title><description>&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;// ARM32SyscallHandler.java
private int socket(Backend backend, Emulator&amp;lt;?&amp;gt; emulator) {

        int fd;
        switch (domain) {
            case SocketIO.AF_UNSPEC:
                throw new UnsupportedOperationException();
// ...
            case SocketIO.AF_NETLINK:
                switch (type) {
                    case SocketIO.SOCK_DGRAM:
                        fd = getMinFd();
                        fdMap.put(fd, new NetLinkSocket(emulator)); 
                        return fd;
                    case SocketIO.SOCK_RAW:
                    default:
                        throw new UnsupportedOperationException(); // Here line 1585
                }
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里没有对 SocketIO.SOCK_RAW 的 case 进行实现，导致报错。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[14:19:40 536] DEBUG [com.github.unidbg.linux.ARM32SyscallHandler] (ARM32SyscallHandler:1537) - socket domain=16, type=3, protocol=0
[14:19:40 536]  WARN [com.github.unidbg.linux.ARM32SyscallHandler] (ARM32SyscallHandler:546) - handleInterrupt intno=2, NR=281, svcNumber=0x0, PC=RX@0x402cba98[libc.so]0x40a98, LR=RX@0x401bd050[libpdd_secure.so]0x1bd050, syscall=null
java.lang.UnsupportedOperationException
at com.github.unidbg.linux.ARM32SyscallHandler.socket(ARM32SyscallHandler.java:1585)
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:438)
&lt;/code&gt;&lt;/pre&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/647</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/647</guid><pubDate>Mon, 08 Jul 2024 06:21:28 GMT</pubDate><author>HappyTsing</author></item><item><title>AndroidModule VirtualModule执行上的一些小问题</title><description>&lt;p&gt;在64位模拟器中执行下面这个代码：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;new AndroidModule(emulator, vm).register(memory);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;调用VirtualModule补libandroid.so的时候，如果加密so用到AAsset_read这个函数，那么可能会遇到下面这种异常：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[11:20:39 109]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:412) - handleInterrupt intno=2, NR=192, svcNumber=0x1f0, PC=unidbg@0xfffe1734[libandroid.so]0x734, LR=RX@0x40038c4c[libkwsgmain.so]0x38c4c, syscall=null com.github.unidbg.arm.backend.BackendException at com.github.unidbg.virtualmodule.android.AndroidModule$11.handle(AndroidModule.java:90) at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:121) at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345) at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128) at unicorn.Unicorn.emu_start(Native Method) at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376) at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:378) at com.github.unidbg.thread.Function64.run(Function64.java:39) at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19) at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175) at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99) at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:341) at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:262) at com.github.unidbg.Module.emulateFunction(Module.java:163) at com.github.unidbg.linux.LinuxModule.callFunction(LinuxModule.java:262) at com.ks.ks2.callByAddress(ks2.java:79) at com.ks.ks2.main(ks2.java:175)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此时可能需要修改&lt;code&gt;AndroidModule&lt;/code&gt;类中的&lt;code&gt;onInitialize&lt;/code&gt;方法，将其中的&lt;code&gt;throw new BackendException();&lt;/code&gt;给替换为&lt;code&gt;return read(emulator, vm);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里对于64位模拟器为什么要抛一个异常呀，有没有大佬可以解释一下呀？&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/646</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/646</guid><pubDate>Tue, 02 Jul 2024 03:23:51 GMT</pubDate><author>srx-2000</author></item><item><title>非标准文件该怎样补</title><description>&lt;p&gt;报错：
open file ：/dev/urandom
2024-06-30 09:49:55.695  WARN 948 --- [           main] c.g.unidbg.linux.ARM64SyscallHandler     : mmap start=0x0, length=1879048192, prot=0x3, flags=0x22, fd=-1, offset=0&lt;/p&gt;
&lt;p&gt;度娘后得知/dev/urandom运行内核驱动程序来动态生成随机数&lt;/p&gt;
&lt;p&gt;/dev/urandom不是一个真正的文件。这是一个特殊的文件，它运行内核驱动程序来动态生成随机数。由于它没有长度，文件传输应用程序不知道何时停止读取它，因此它不能被复制或下载。&lt;/p&gt;
&lt;p&gt;请问大佬这种情况该怎么补上这个环境&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/644</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/644</guid><pubDate>Sun, 30 Jun 2024 04:25:29 GMT</pubDate><author>a810291783</author></item><item><title>Map&lt;String, List&lt;String&gt;&gt;参数如何构造啊啊啊啊，求解</title><description>No description</description><link>https://github.com/zhkl0228/unidbg/issues/642</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/642</guid><pubDate>Thu, 27 Jun 2024 09:45:34 GMT</pubDate><author>dmwzzh</author></item><item><title>黑盒调用so文件种函数的问题请教，数组参数该如何传入</title><description>&lt;p&gt;我希望能通过指定的地址调用该文件上函数并且传入IDA中显示的数组参数，unidbg好像只支持基本类型使用这种方式调用，目前不清楚数组类型的参数要如何传入
查看了SignUtil中的传入map的样例，但是似乎这个样例是针对于已知参数类型的导出函数有效，
请问这样的功能unidbg能实现吗
文件来源：unidbg-android/src/test/resources/example_binaries/armeabi-v7a/libsignutil.so
函数地址：0x2FF8
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/35920349/f14169ca-69af-424c-befb-04ae1ada4235&quot; alt=&quot;QQ图片20240627172329&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/641</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/641</guid><pubDate>Thu, 27 Jun 2024 09:28:01 GMT</pubDate><author>pancihunter</author></item><item><title>多线程pthread_attr_setstacksize执行异常</title><description>&lt;p&gt;多线程pthread_attr_setstacksize执行异常，真机返回值0，unidbg环境返回值22。
请问有办法解决么？
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/115056774/fb81dfe5-b13b-46bc-b084-b32fc3a85450&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/637</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/637</guid><pubDate>Mon, 24 Jun 2024 02:23:55 GMT</pubDate><author>hitoxiao</author></item><item><title>unidbg调用so层函数Refmd5sec报错BackendException，（Refmd5sec是反射调用了java层的一个生成md5的方法）</title><description>&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/54762364/a004ca60-0a52-480d-a759-9ff167afb47f&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/54762364/990c9d21-3ed4-426e-a817-6d98495173cf&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/636</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/636</guid><pubDate>Sat, 22 Jun 2024 23:38:14 GMT</pubDate><author>liuyuanjun520</author></item><item><title>大佬们这个环境要咋补呢，init方法它没得返回值，必然会调用callVoidMethod这个方法，这个方法只有一个出路就是抛出异常</title><description>&lt;p&gt;java.lang.UnsupportedOperationException: javax/crypto/Cipher-&amp;gt;init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V
at com.github.unidbg.linux.android.dvm.AbstractJni.callVoidMethod(AbstractJni.java:985)
at com.github.unidbg.linux.android.dvm.AbstractJni.callVoidMethod(AbstractJni.java:980)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/633</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/633</guid><pubDate>Sun, 09 Jun 2024 11:40:09 GMT</pubDate><author>liuliang520530</author></item><item><title>怎样移除断点</title><description>&lt;p&gt;emulator.attach().addBreakPoint(module, 0x1E5F41, new BreakPointCallback() {
@Override
public boolean onHit(Emulator&amp;lt;?&amp;gt; emulator, long address) {
UnidbgPointer pointer = UnidbgPointer.register(emulator, Unicorn.UC_ARM64_REG_X0);
String X0 = Long.toHexString(pointer.peer);
if (X0.length() &amp;gt;= 9 &amp;amp;&amp;amp; X0.substring(0, 2).equals(&quot;1f&quot;))
{
emulator.getBackend().reg_write(Unicorn.UC_ARM64_REG_X0, pointer.toUIntPeer());
}
return true;
}
});&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/632</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/632</guid><pubDate>Sun, 09 Jun 2024 11:10:11 GMT</pubDate><author>a810291783</author></item><item><title>unidbg-boot-server报错，求大佬帮看看</title><description>&lt;p&gt;unidbg本地正常，集成到unidbg-boot-server报错&lt;/p&gt;
&lt;p&gt;报错信息如下，求大佬帮看看什么原因&lt;/p&gt;
&lt;p&gt;lilac open file:/system/lib/libhoudini.so
lilac open file:/system/lib64/libhoudini.so
lilac open file:/sdcard/Android/
2024-06-03 13:02:00.155  WARN 11256 --- [         task-1] c.g.unidbg.linux.ARM64SyscallHandler     : handleInterrupt intno=2, NR=113, svcNumber=0x0, PC=RX@0x40bfa86c[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x6a86c, LR=RX@0x40bad888[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x1d888, syscall=null&lt;/p&gt;
&lt;p&gt;java.lang.UnsupportedOperationException: clk_id=3
at com.github.unidbg.linux.ARM64SyscallHandler.clock_gettime(ARM64SyscallHandler.java:1125)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:311)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.BaseTask.continueRun(BaseTask.java:104)
at com.github.unidbg.thread.ThreadTask.dispatch(ThreadTask.java:36)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:236)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:52)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/630</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/630</guid><pubDate>Mon, 03 Jun 2024 05:20:09 GMT</pubDate><author>a810291783</author></item><item><title>执行结果返回空JNIEnv-&gt;SetByteArrayRegion([B@0x, 0, 0, unidbg@0xbffff6b1) was called from RX@0x400d55dc[libfekit.so]0xd55dc</title><description>&lt;p&gt;`C:\Users\Administrator.jdks\corretto-21.0.3\bin\java.exe &quot;-javaagent:E:\IntelliJ IDEA 2024.1.1\lib\idea_rt.jar=63217:E:\IntelliJ IDEA 2024.1.1\bin&quot; -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath D:\unidbg-master1\unidbg-android\target\test-classes;D:\unidbg-master1\unidbg-android\target\classes;D:\unidbg-master1\unidbg-api\target\classes;C:\Users\Administrator.m2\repository\com\github\zhkl0228\unicorn\1.0.14\unicorn-1.0.14.jar;C:\Users\Administrator.m2\repository\org\scijava\native-lib-loader\2.3.5\native-lib-loader-2.3.5.jar;C:\Users\Administrator.m2\repository\com\github\zhkl0228\capstone\3.1.8\capstone-3.1.8.jar;C:\Users\Administrator.m2\repository\net\java\dev\jna\jna\5.10.0\jna-5.10.0.jar;C:\Users\Administrator.m2\repository\com\github\zhkl0228\keystone\0.9.7\keystone-0.9.7.jar;C:\Users\Administrator.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\Administrator.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\Administrator.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\Administrator.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Administrator.m2\repository\com\alibaba\fastjson\1.2.83\fastjson-1.2.83.jar;C:\Users\Administrator.m2\repository\com\github\zhkl0228\demumble\1.0.4\demumble-1.0.4.jar;C:\Users\Administrator.m2\repository\net\dongliu\apk-parser\2.6.10\apk-parser-2.6.10.jar;D:\unidbg-master1\backend\dynarmic\target\classes;D:\unidbg-master1\backend\hypervisor\target\classes;D:\unidbg-master1\backend\kvm\target\classes;D:\unidbg-master1\backend\unicorn2\target\classes;C:\Users\Administrator.m2\repository\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\Administrator.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Administrator.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Administrator.m2\repository\org\slf4j\slf4j-reload4j\2.0.5\slf4j-reload4j-2.0.5.jar;C:\Users\Administrator.m2\repository\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar com.mobileqq.Dandelion
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/dt/Dc) was called from RX@0x4006b7d4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6b7d4
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qsecprotocol/ByteData) was called from RX@0x4006baec[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6baec
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/qsec/qsecprotocol/ByteData, RW@0x40a39c90[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa39c90, 1) was called from RX@0x4006c2e0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6c2e0
RegisterNative(com/tencent/mobileqq/qsec/qsecprotocol/ByteData, getByte(Landroid/content/Context;Ljava/lang/Object;)[B, RX@0x403d1884[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x3d1884)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion) was called from RX@0x4006d364[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6d364
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion, RW@0x40a39cb0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa39cb0, 1) was called from RX@0x4006c85c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6c85c
RegisterNative(com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion, energy(Ljava/lang/Object;Ljava/lang/Object;)[B, RX@0x403b76c0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x3b76c0)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qseccodec/SecCipher) was called from RX@0x4006d7c0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6d7c0
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/qsec/qseccodec/SecCipher, RW@0x40a39cd0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa39cd0, 1) was called from RX@0x4006e074[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6e074
RegisterNative(com/tencent/mobileqq/qsec/qseccodec/SecCipher, codec(Ljava/lang/Object;I)Ljava/lang/Object;, RX@0x403c06f4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x3c06f4)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qsecurity/QSec) was called from RX@0x4006e664[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6e664
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/qsec/qsecurity/QSec, RW@0x40a39cf0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa39cf0, 3) was called from RX@0x4006e940[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6e940
RegisterNative(com/tencent/mobileqq/qsec/qsecurity/QSec, doSomething(Landroid/content/Context;I)I, RX@0x400cbc18[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xcbc18)
RegisterNative(com/tencent/mobileqq/qsec/qsecurity/QSec, getXwDebugID(Ljava/lang/String;)[B, RX@0x400d554c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xd554c)
RegisterNative(com/tencent/mobileqq/qsec/qsecurity/QSec, doReport(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I, RX@0x400d5618[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xd5618)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qsecurity/QSec) was called from RX@0x4006fc18[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6fc18
JNIEnv-&amp;gt;GetMethodID(com/tencent/mobileqq/qsec/qsecurity/QSec.updateO3DID(Ljava/lang/String;)V) =&amp;gt; 0xd480a196 was called from RX@0x4007331c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7331c
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/sign/QQSecuritySign$SignResult) was called from RX@0x400736b8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x736b8
JNIEnv-&amp;gt;NewGlobalRef(class com/tencent/mobileqq/sign/QQSecuritySign$SignResult) was called from RX@0x400736d8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x736d8
JNIEnv-&amp;gt;GetMethodID(com/tencent/mobileqq/sign/QQSecuritySign$SignResult.&lt;init&gt;()V) =&amp;gt; 0xa877ec6e was called from RX@0x40073b90[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x73b90
JNIEnv-&amp;gt;GetFieldID(com/tencent/mobileqq/sign/QQSecuritySign$SignResult.token [B) =&amp;gt; 0x729bba5d was called from RX@0x40074174[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x74174
JNIEnv-&amp;gt;GetFieldID(com/tencent/mobileqq/sign/QQSecuritySign$SignResult.sign [B) =&amp;gt; 0x16eec18f was called from RX@0x40074610[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x74610
JNIEnv-&amp;gt;GetFieldID(com/tencent/mobileqq/sign/QQSecuritySign$SignResult.extra [B) =&amp;gt; 0x488f14e6 was called from RX@0x40074a7c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x74a7c
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/sign/QQSecuritySign) was called from RX@0x40074df4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x74df4
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/sign/QQSecuritySign, RW@0x40a39da8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa39da8, 8) was called from RX@0x4006fda8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x6fda8
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, getSign(Lcom/tencent/mobileqq/qsec/qsecurity/QSec;Ljava/lang/String;Ljava/lang/String;[B[BLjava/lang/String;)Lcom/tencent/mobileqq/sign/QQSecuritySign$SignResult;, RX@0x400964e0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x964e0)
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, requestToken()V, RX@0x401a6578[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x1a6578)
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, dispatchEvent(Ljava/lang/String;Ljava/lang/String;Lcom/tencent/mobileqq/fe/EventCallback;)V, RX@0x401aaa18[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x1aaa18)
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, dispatchEventPB(Ljava/lang/String;Ljava/lang/String;[BLcom/tencent/mobileqq/fe/EventCallback;)V, RX@0x401cd300[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x1cd300)
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, notifyFaceDetect(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/tencent/mobileqq/fe/EventCallback;)V, RX@0x401cefa4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x1cefa4)
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, safeUiReport(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/tencent/mobileqq/fe/EventCallback;)V, RX@0x401cf8f4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x1cf8f4)
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, notifyCamera(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/tencent/mobileqq/fe/EventCallback;)V, RX@0x40068fa8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x68fa8)
RegisterNative(com/tencent/mobileqq/sign/QQSecuritySign, initSafeMode(Z)V, RX@0x401d0b24[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x1d0b24)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/channel/ChannelManager) was called from RX@0x40075ff8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x75ff8
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/dt/app/Dtc) was called from RX@0x4040eee8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40eee8
JNIEnv-&amp;gt;NewGlobalRef(class com/tencent/mobileqq/dt/app/Dtc) was called from RX@0x4040f314[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40f314
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/fe/IFEKitLog) was called from RX@0x4040eee8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40eee8
JNIEnv-&amp;gt;NewGlobalRef(class com/tencent/mobileqq/fe/IFEKitLog) was called from RX@0x4040f314[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40f314
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/dt/model/FEBound) was called from RX@0x4040eee8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40eee8
JNIEnv-&amp;gt;NewGlobalRef(class com/tencent/mobileqq/dt/model/FEBound) was called from RX@0x4040f314[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40f314
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/fe/utils/DeepSleepDetector) was called from RX@0x4040eee8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40eee8
JNIEnv-&amp;gt;NewGlobalRef(class com/tencent/mobileqq/fe/utils/DeepSleepDetector) was called from RX@0x4040f314[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x40f314
JNIEnv-&amp;gt;GetStaticMethodID(com/tencent/mobileqq/dt/model/FEBound.transform(I[B)[B) =&amp;gt; 0x5291e1bc was called from RX@0x40410184[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x410184
JNIEnv-&amp;gt;NewByteArray(256) was called from RX@0x4022208c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x22208c
JNIEnv-&amp;gt;SetByteArrayRegion([B@2b6856dd, 0, 256, RW@0x40d6d000) was called from RX@0x402220c8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x2220c8
JNIEnv-&amp;gt;CallStaticObjectMethodV(class com/tencent/mobileqq/dt/model/FEBound, transform(0x1, [B@2b6856dd) =&amp;gt; [B@6ab7a896) was called from RX@0x4022393c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x22393c
JNIEnv-&amp;gt;GetArrayLength([B@6ab7a896 =&amp;gt; 256) was called from RX@0x402220f8[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x2220f8
JNIEnv-&amp;gt;GetByteArrayElements(false) =&amp;gt; [B@6ab7a896 was called from RX@0x40222114[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x222114
JNIEnv-&amp;gt;GetStaticMethodID(com/tencent/mobileqq/dt/model/FEBound.transform(I[B)[B) =&amp;gt; 0x5291e1bc was called from RX@0x40410184[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x410184
JNIEnv-&amp;gt;NewByteArray(256) was called from RX@0x40222eec[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x222eec
JNIEnv-&amp;gt;SetByteArrayRegion([B@5e4c8041, 0, 256, RW@0x40d6d140) was called from RX@0x40222f28[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x222f28
JNIEnv-&amp;gt;CallStaticObjectMethodV(class com/tencent/mobileqq/dt/model/FEBound, transform(0x2, [B@5e4c8041) =&amp;gt; [B@71c8becc) was called from RX@0x4022393c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x22393c
JNIEnv-&amp;gt;GetArrayLength([B@71c8becc =&amp;gt; 256) was called from RX@0x40222f58[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x222f58
JNIEnv-&amp;gt;GetByteArrayElements(false) =&amp;gt; [B@71c8becc was called from RX@0x40222f74[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x222f74
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/channel/ChannelManager, RW@0x40a39e88[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa39e88, 5) was called from RX@0x4007635c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7635c
RegisterNative(com/tencent/mobileqq/channel/ChannelManager, setChannelProxy(Lcom/tencent/mobileqq/channel/ChannelProxy;)V, RX@0x40204784[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x204784)
RegisterNative(com/tencent/mobileqq/channel/ChannelManager, onNativeReceive(Ljava/lang/String;[BZIJ)V, RX@0x402071c0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x2071c0)
RegisterNative(com/tencent/mobileqq/channel/ChannelManager, initReport(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V, RX@0x40207a80[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x207a80)
RegisterNative(com/tencent/mobileqq/channel/ChannelManager, getCmdWhiteList()Ljava/util/ArrayList;, RX@0x402081ec[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x2081ec)
RegisterNative(com/tencent/mobileqq/channel/ChannelManager, setCmdWhiteListChangeCallback(Lcom/tencent/mobileqq/fe/CmdWhiteListChangeCallback;)V, RX@0x40221b54[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x221b54)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/dt/Dtn) was called from RX@0x40078b98[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x78b98
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/dt/Dtn, RW@0x40a39f48[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa39f48, 3) was called from RX@0x400793f0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x793f0
RegisterNative(com/tencent/mobileqq/dt/Dtn, initUin(Ljava/lang/String;)V, RX@0x4022dc6c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x22dc6c)
RegisterNative(com/tencent/mobileqq/dt/Dtn, initContext(Landroid/content/Context;Ljava/lang/String;)V, RX@0x40231684[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x231684)
RegisterNative(com/tencent/mobileqq/dt/Dtn, initLog(Lcom/tencent/mobileqq/fe/IFEKitLog;)V, RX@0x4023b278[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x23b278)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion) was called from RX@0x4007b9b4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7b9b4
JNIEnv-&amp;gt;GetStaticMethodID(com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion.getInstance()Lcom/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion;) =&amp;gt; 0x748be920 was called from RX@0x4007d4bc[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7d4bc
JNIEnv-&amp;gt;FindClass(java/lang/String) was called from RX@0x4007cf38[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7cf38
JNIEnv-&amp;gt;GetMethodID(java/lang/String.&lt;init&gt;([BLjava/lang/String;)V) =&amp;gt; 0x782c535e was called from RX@0x4007bfb4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7bfb4
JNIEnv-&amp;gt;NewByteArray(121) was called from RX@0x4007dfbc[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7dfbc
JNIEnv-&amp;gt;SetByteArrayRegion([B@3bd40a57, 0, 121, unidbg@0xbfffe832) was called from RX@0x4007e194[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7e194
JNIEnv-&amp;gt;NewStringUTF(&quot;UTF-8&quot;) was called from RX@0x4007d130[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7d130
JNIEnv-&amp;gt;NewObjectV(class java/lang/String, &lt;init&gt;([B@3bd40a57, &quot;UTF-8&quot;) =&amp;gt; &quot;com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion-&amp;gt;getInstance()Lcom/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion;&quot;) was called from RX@0x400bb554[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xbb554
JNIEnv-&amp;gt;GetMethodID(java/lang/String.hashCode()I) =&amp;gt; 0x7eba2037 was called from RX@0x4007a620[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7a620
JNIEnv-&amp;gt;CallIntMethodV(&quot;com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion-&amp;gt;getInstance()Lcom/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion;&quot;, hashCode() =&amp;gt; 0x7ebb0acc) was called from RX@0x4037a574[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x37a574
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qsecest/QsecEst) was called from RX@0x4007e6ac[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7e6ac
JNIEnv-&amp;gt;RegisterNatives(com/tencent/mobileqq/qsec/qsecest/QsecEst, RW@0x40a3bd78[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xa3bd78, 1) was called from RX@0x4007e620[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7e620
RegisterNative(com/tencent/mobileqq/qsec/qsecest/QsecEst, d(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)[B, RX@0x4037a944[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x37a944)
JNIEnv-&amp;gt;FindClass(com/tencent/mobileqq/qsec/qsecest/QsecEst) was called from RX@0x4007e8c4[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7e8c4
JNIEnv-&amp;gt;NewGlobalRef(class com/tencent/mobileqq/qsec/qsecest/QsecEst) was called from RX@0x4007eabc[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7eabc
JNIEnv-&amp;gt;GetStaticMethodID(com/tencent/mobileqq/qsec/qsecest/QsecEst.p(Landroid/content/Context;I)Ljava/lang/String;) =&amp;gt; 0x747ab66c was called from RX@0x4007e97c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x7e97c
Find native function Java_com_tencent_mobileqq_qsec_qsecurity_QSec_getXwDebugID =&amp;gt; RX@0x400d554c[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xd554c
JNIEnv-&amp;gt;NewByteArray(0) was called from RX@0x400d55a0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xd55a0
JNIEnv-&amp;gt;SetByteArrayRegion([B@0x, 0, 0, unidbg@0xbffff6b1) was called from RX@0x400d55dc[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0xd55dc
getXwDebugID   ----&amp;gt;&lt;/init&gt;&lt;/init&gt;&lt;/init&gt;&lt;/p&gt;
&lt;p&gt;进程已结束，退出代码为 0
&lt;code&gt; &lt;/code&gt;package com.mobileqq;&lt;/p&gt;
&lt;p&gt;import com.alibaba.fastjson.util.IOUtils;
import com.github.unidbg.AndroidEmulator;
import com.github.unidbg.Emulator;
import com.github.unidbg.Module;
import com.github.unidbg.arm.backend.Unicorn2Factory;
import com.github.unidbg.arm.context.Arm64RegisterContext;
import com.github.unidbg.hook.hookzz.&lt;em&gt;;
import com.github.unidbg.linux.android.AndroidEmulatorBuilder;
import com.github.unidbg.linux.android.AndroidResolver;
import com.github.unidbg.linux.android.dvm.&lt;/em&gt;;
import com.github.unidbg.linux.android.dvm.api.Signature;
import com.github.unidbg.linux.android.dvm.array.ArrayObject;
import com.github.unidbg.linux.android.dvm.array.ByteArray;
import com.github.unidbg.memory.Memory;
import com.github.unidbg.virtualmodule.android.AndroidModule;
import com.github.unidbg.virtualmodule.android.JniGraphics;
import com.sun.jna.JNIEnv;
import com.sun.jna.Pointer;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import java.util.Base64;&lt;/p&gt;
&lt;p&gt;public class Dandelion extends AbstractJni {
private final AndroidEmulator emulator;
private final VM vm;
private final Module module;
private final Memory memory;
private final DvmClass Class_Dandelion;
private final DvmClass Class_QSec;
private final DvmClass Class_QQSecuritySign;
Dandelion() {
emulator = AndroidEmulatorBuilder.for64Bit()
.setProcessName(&quot;com.tencent.mobileqq&quot;)
.addBackendFactory(new Unicorn2Factory(true))
.build(); // 创建模拟器实例，要模拟32位或者64位，在这里区分
memory = emulator.getMemory(); // 模拟器的内存操作接口
emulator.getSyscallHandler().setEnableThreadDispatcher(true);
memory.setLibraryResolver(new AndroidResolver(23)); // 设置系统类库解析
vm = emulator.createDalvikVM(new File(&quot;unidbg-android/src/test/resources/example_binaries/qq.apk&quot;)); // 创建Android虚拟机
new JniGraphics(emulator, vm).register(memory);
new AndroidModule(emulator, vm).register(memory);
vm.setVerbose(true); // 设置是否打印Jni调用细节
vm.setJni(this);
DalvikModule dm = vm.loadLibrary(new File(&quot;unidbg-android/src/test/resources/example_binaries/libfekit.so&quot;), true); // 加载libttEncrypt.so到unicorn虚拟内存，加载成功以后会默认调用init_array等函数
dm.callJNI_OnLoad(emulator); // 手动执行JNI_OnLoad函数
module = dm.getModule(); // 加载好的libttEncrypt.so对应为一个模块
Class_Dandelion = vm.resolveClass(&quot;com/tencent/mobileqq/qsec/qsecdandelionsdk/Dandelion&quot;);
Class_QSec = vm.resolveClass(&quot;com/tencent/mobileqq/qsec/qsecurity/QSec&quot;);
Class_QQSecuritySign = vm.resolveClass(&quot;com/tencent/mobileqq/sign/QQSecuritySign&quot;);
}
void destroy() {
IOUtils.close(emulator);
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static void main(String[] args) {
    Dandelion test = new Dandelion();
    System.out.println(&quot;getXwDebugID   ----&amp;gt;    &quot; + test.getXwDebugID(&quot;88312415&quot;));
    //System.out.println(&quot;getSign   ----&amp;gt;    &quot;+test.getSign());
    test.destroy();
}

//这个执行完毕返回空
public String getXwDebugID(String salt) {
    ByteArray result_string = Class_QSec.newObject(null).callJniMethodObject(emulator, &quot;getXwDebugID(Ljava/lang/String;)[B&quot;
            , new StringObject(vm, salt)
    );
    return result_string == null ? &quot;加密错误&quot; : Base64.getEncoder().encodeToString(result_string.getValue());
}

//这个报错，应该是环境问题，参数不确定是否正确，因为看java是6个参数，但是hook发现就传了5个参数
public String getSign() {
    ByteArray result_string = Class_QQSecuritySign.newObject(null).callJniMethodObject(emulator, &quot;getSign(Lcom/tencent/mobileqq/qsec/qsecurity/QSec;Ljava/lang/String;Ljava/lang/String;[B[BLjava/lang/String;)Lcom/tencent/mobileqq/sign/QQSecuritySign$SignResult;&quot;
            , Class_QSec
            , new StringObject(vm, &quot;wtlogin.login&quot;)
            , new ByteArray(vm, hexToByte(&quotquot;))
            , new ByteArray(vm, hexToByte(&quot;0000AF58&quot;))
            ,new StringObject(vm, &quot;1552235&quot;)
    );
    return result_string == null ? &quot;加密错误&quot; : byteToHex(result_string.getValue());
}

@Override
public void setObjectField(BaseVM vm, DvmObject&amp;lt;?&amp;gt; dvmObject, String signature, DvmObject&amp;lt;?&amp;gt; value) {
    switch (signature) {
        case &quot;com/tencent/mobileqq/sign/QQSecuritySign$SignResult-&amp;gt;token:[B&quot;: {
            System.out.println(&quot;&amp;gt; Patched: com/tencent/mobileqq/sign/QQSecuritySign$SignResult-&amp;gt;token:[B&quot;);
            return ;
        }
        case &quot;com/tencent/mobileqq/sign/QQSecuritySign$SignResult-&amp;gt;extra:[B&quot;: {
            System.out.println(&quot;&amp;gt; Patched: com/tencent/mobileqq/sign/QQSecuritySign$SignResult-&amp;gt;extra:[B&quot;);
            return ;
        }
    }
    throw new UnsupportedOperationException(signature);
}
//这是我补的环境
@Override
public DvmObject&amp;lt;?&amp;gt; newObjectV(BaseVM vm, DvmClass dvmClass, String signature, VaList vaList) {
    switch (signature) {
        case &quot;com/tencent/mobileqq/sign/QQSecuritySign$SignResult-&amp;gt;&amp;lt;init&amp;gt;()V&quot;: {
            return vm.resolveClass(&quot;com/tencent/mobileqq/sign/QQSecuritySign$SignResult&quot;).newObject(new SignResult());
        }
        case &quot;java/lang/String-&amp;gt;&amp;lt;init&amp;gt;([BLjava/lang/String;)V&quot;: {
            ByteArray array = vaList.getObjectArg(0);
            StringObject charsetName = vaList.getObjectArg(1);
            try {
                return new StringObject(vm, new String(array.getValue(), charsetName.getValue()));
            } catch (UnsupportedEncodingException e) {
                throw new IllegalStateException(e);
            }
        }
    }
    throw new UnsupportedOperationException(signature);
}



public static class SignResult {
    static IPatchRedirector $redirector_;


    public SignResult() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector == null || !iPatchRedirector.hasPatch((short) 1)) {
            return;
        }
        iPatchRedirector.redirect((short) 1, (Object) this);
    }
}

public interface IPatchRedirector {
    boolean hasPatch(short s);

    Object redirect(short s);

    Object redirect(short s, Object obj);

    Object redirect(short s, Object obj, int i2);

    Object redirect(short s, Object obj, int i2, Object obj2);

    Object redirect(short s, Object obj, long j2);

    Object redirect(short s, Object obj, Object obj2);

    Object redirect(short s, Object obj, Object obj2, int i2);

    Object redirect(short s, Object obj, Object obj2, Object obj3);

    Object redirect(short s, Object obj, Object obj2, Object obj3, Object obj4);

    Object redirect(short s, Object obj, boolean z);

    Object redirect(short s, Object... objArr);
}














//下边环境还有用处不要删除
@Override
public DvmObject&amp;lt;?&amp;gt; callStaticObjectMethodV(BaseVM vm, DvmClass dvmClass, DvmMethod dvmMethod, VaList vaList) {
    switch (dvmMethod.getSignature())
    {
        case &quot;com/tencent/mobileqq/dt/model/FEBound-&amp;gt;transform(I[B)[B&quot;:
            ByteArray array = vaList.getObjectArg(1);
            ByteArray result = new ByteArray(vm, transform(vaList.getIntArg(0),array.getValue()));
            //System.out.println(&quot;transform[&quot; + vaList.getIntArg(0) + &quot;][&quot; + byteToHex(array.getValue()) + &quot;][&quot; + byteToHex(result.getValue()) + &quot;]&quot;);
            return result;
        case &quot;java/lang/Thread-&amp;gt;currentThread()Ljava/lang/Thread;&quot;:
            return vm.resolveClass(&quot;java/lang/Thread&quot;).newObject(Thread.currentThread());
    }
    return callStaticObjectMethodV(vm, dvmClass, dvmMethod.getSignature(), vaList);
}
@Override
public int callIntMethodV(BaseVM vm, DvmObject&amp;lt;?&amp;gt; dvmObject, DvmMethod dvmMethod, VaList vaList) {
    switch (dvmMethod.getSignature())
    {
        case &quot;java/lang/String-&amp;gt;hashCode()I&quot;:
            return (dvmMethod.getSignature()).hashCode() + 60053;
    }
    return callIntMethodV(vm, dvmObject, dvmMethod.getSignature(), vaList);
}
@Override
public DvmObject&amp;lt;?&amp;gt; callObjectMethodV(BaseVM vm, DvmObject&amp;lt;?&amp;gt; dvmObject, DvmMethod dvmMethod, VaList vaList) {

    switch (dvmMethod.getSignature())
    {

        case &quot;java/lang/Thread-&amp;gt;getStackTrace()[Ljava/lang/StackTraceElement;&quot;:
            StackTraceElement[] elements = ((Thread) dvmObject.getValue()).getStackTrace();
            DvmObject[] objs = new DvmObject[elements.length];
            for (int i = 0; i &amp;lt; elements.length; i++) {
                System.out.println(elements[i]);
                objs[i] = vm.resolveClass(&quot;java/lang/StackTraceElement&quot;).newObject(elements[i]);
            }
            return new ArrayObject(objs);
        case &quot;java/lang/StackTraceElement-&amp;gt;getMethodName()Ljava/lang/String;&quot;:
            StackTraceElement stackTraceElement = (StackTraceElement) dvmObject.getValue();
            return new StringObject(vm, stackTraceElement.getMethodName());
        case &quot;java/lang/StackTraceElement-&amp;gt;getClassName()Ljava/lang/String;&quot;:
            StackTraceElement stackTraceElement1 = (StackTraceElement) dvmObject.getValue();
            return new StringObject(vm, stackTraceElement1.getClassName());

    }
    return callObjectMethodV(vm, dvmObject, dvmMethod.getSignature(), vaList);
}


public class RegisterType {
    public static final byte DOUBLE_HI = 15;
    public static final byte DOUBLE_LO = 14;

}
private static byte[][] mConfigEnCode = new byte[][]{new byte[]{RegisterType.DOUBLE_LO, 1, 13, 10, 2, 7, 6, 5, 0, 12, 4, 8, 11, 9, RegisterType.DOUBLE_HI, 3}, new byte[]{10, 0, 12, 6, 9, 4, 8, RegisterType.DOUBLE_HI, 3, 7, 13, 5, RegisterType.DOUBLE_LO, 11, 1, 2}, new byte[]{6, 2, 0, 13, 4, 10, RegisterType.DOUBLE_LO, 11, RegisterType.DOUBLE_HI, 1, 12, 3, 9, 5, 8, 7}, new byte[]{2, 10, 4, 8, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 0, 3, 13, 12, 11, 6, 7, 5, 1, 9}, new byte[]{RegisterType.DOUBLE_LO, 3, 11, 12, 0, 6, 9, 13, 8, 4, 7, 1, 2, RegisterType.DOUBLE_HI, 10, 5}, new byte[]{10, 11, 5, 4, 8, 12, 13, 0, RegisterType.DOUBLE_HI, 7, 1, 9, 2, 6, 3, RegisterType.DOUBLE_LO}, new byte[]{7, 1, 9, RegisterType.DOUBLE_LO, 3, 5, 11, 13, 6, 2, 12, 10, 0, RegisterType.DOUBLE_HI, 4, 8}, new byte[]{3, 10, 0, 5, 6, 7, 11, 2, 4, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 1, 12, 8, 13, 9}, new byte[]{RegisterType.DOUBLE_HI, 2, RegisterType.DOUBLE_LO, 13, 1, 0, 4, 7, 5, 3, 9, 10, 8, 6, 11, 12}, new byte[]{11, 10, 8, 4, 6, 0, 12, 5, 7, 9, 13, 2, 1, 3, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI}, new byte[]{7, 3, 1, 12, RegisterType.DOUBLE_LO, 8, 10, 5, 6, 13, 11, RegisterType.DOUBLE_HI, 4, 9, 2, 0}, new byte[]{3, 11, 13, 0, 6, 5, 7, 8, 9, 1, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 12, 10, 2, 4}, new byte[]{RegisterType.DOUBLE_HI, 3, 7, 11, RegisterType.DOUBLE_LO, 5, 12, 2, 13, 4, 10, 0, 1, 8, 9, 6}, new byte[]{11, 12, 2, 3, 5, RegisterType.DOUBLE_LO, 1, RegisterType.DOUBLE_HI, 7, 10, 4, 8, 9, 6, 13, 0}, new byte[]{7, 4, 12, 10, 13, 11, 8, 2, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 0, 6, 3, 1, 5, 9}, new byte[]{3, 12, 7, 4, 2, 8, 13, 9, 6, 11, 10, RegisterType.DOUBLE_LO, 0, RegisterType.DOUBLE_HI, 1, 5}, new byte[]{0, 3, 10, 11, 1, 12, 9, 4, 7, 6, RegisterType.DOUBLE_HI, 5, 13, 2, RegisterType.DOUBLE_LO, 8}, new byte[]{12, 11, 5, 3, 13, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 6, 4, 8, 9, 10, 2, 7, 1, 0}, new byte[]{8, 3, RegisterType.DOUBLE_HI, 10, 11, 4, 9, 13, 1, 7, 6, RegisterType.DOUBLE_LO, 5, 0, 12, 2}, new byte[]{4, 12, 10, 6, 13, 9, 5, 7, 2, 8, 11, 0, 3, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 1}, new byte[]{0, 4, 1, 10, 11, 5, 6, RegisterType.DOUBLE_HI, 13, 9, 3, 2, 8, RegisterType.DOUBLE_LO, 12, 7}, new byte[]{12, 0, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 9, 1, 3, 13, 2, 4, 7, 6, 10, 8, 11, 5}, new byte[]{8, 5, 9, 2, 10, RegisterType.DOUBLE_LO, 11, 13, 7, 0, 1, 12, 6, 3, RegisterType.DOUBLE_HI, 4}, new byte[]{4, 13, 3, 9, 5, 1, 11, 2, 6, 8, 10, 0, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 7, 12}, new byte[]{0, 5, RegisterType.DOUBLE_LO, 8, 10, 3, 2, 7, 13, 1, 11, 12, 9, RegisterType.DOUBLE_HI, 6, 4}, new byte[]{13, 12, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 7, 1, 9, 2, 11, 5, 8, 10, 3, 0, 4, 6}, new byte[]{9, 4, 12, 0, 8, RegisterType.DOUBLE_LO, 1, 3, 11, 6, 5, 13, 10, 2, RegisterType.DOUBLE_HI, 7}, new byte[]{5, 12, 6, RegisterType.DOUBLE_HI, 10, 13, RegisterType.DOUBLE_LO, 3, 9, 8, 2, 11, 0, 1, 7, 4}, new byte[]{1, 5, 7, 2, 6, 11, 4, 13, 3, 10, 0, 9, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 12, 8}, new byte[]{13, 0, 11, RegisterType.DOUBLE_HI, 8, 4, 9, 3, 1, 5, RegisterType.DOUBLE_LO, 10, 7, 2, 6, 12}, new byte[]{9, 5, 6, 7, 3, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 4, 2, 8, 13, 0, 1, 11, 10, 12}, new byte[]{5, RegisterType.DOUBLE_LO, 1, 2, 13, 0, 7, 12, 9, 11, 8, 4, 3, 10, 6, RegisterType.DOUBLE_HI}};
private static byte[][] mConfigDeCode = new byte[][]{new byte[]{11, RegisterType.DOUBLE_HI, 6, 12, 5, 4, 1, 8, 13, 7, 3, RegisterType.DOUBLE_LO, 0, 9, 2, 10}, new byte[]{RegisterType.DOUBLE_LO, 4, 10, 7, RegisterType.DOUBLE_HI, 13, 8, 5, 0, 2, 12, 6, 3, 11, 1, 9}, new byte[]{9, 10, RegisterType.DOUBLE_HI, 2, 0, 4, 1, 8, 13, 3, 7, 11, 5, 12, 6, RegisterType.DOUBLE_LO}, new byte[]{6, 0, 12, 3, 7, 5, RegisterType.DOUBLE_HI, 2, 13, 10, 11, 4, 8, 1, RegisterType.DOUBLE_LO, 9}, new byte[]{4, 8, 13, 6, 5, 1, 3, 12, 11, 2, 7, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 0, 10, 9}, new byte[]{3, 7, RegisterType.DOUBLE_HI, 11, 5, 9, 13, 12, 6, 0, RegisterType.DOUBLE_LO, 10, 2, 1, 4, 8}, new byte[]{7, 2, 8, 6, 11, 0, 1, RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 3, 9, 4, 13, 5, 12, 10}, new byte[]{10, 0, 12, 5, 9, 13, 3, RegisterType.DOUBLE_LO, 2, 4, RegisterType.DOUBLE_HI, 6, 7, 8, 1, 11}, new byte[]{4, 2, 5, RegisterType.DOUBLE_LO, 1, 13, 7, 11, 10, 12, 6, 3, 9, 8, 0, RegisterType.DOUBLE_HI}, new byte[]{7, 6, 11, RegisterType.DOUBLE_HI, 12, 5, RegisterType.DOUBLE_LO, 3, 9, 10, 0, 8, 13, 1, 4, 2}, new byte[]{7, 6, RegisterType.DOUBLE_HI, 4, 8, 1, 0, 11, 9, 2, 3, 5, 13, RegisterType.DOUBLE_LO, 10, 12}, new byte[]{6, 10, 0, 4, 2, 9, 11, 3, 7, 13, 12, RegisterType.DOUBLE_HI, 8, 1, RegisterType.DOUBLE_LO, 5}, new byte[]{2, 6, 9, 10, 4, 7, 1, 5, 8, 3, 13, 12, RegisterType.DOUBLE_HI, 11, 0, RegisterType.DOUBLE_LO}, new byte[]{5, 12, 9, 11, 13, 7, 3, RegisterType.DOUBLE_LO, 2, 6, 0, 10, 4, 8, 1, RegisterType.DOUBLE_HI}, new byte[]{1, RegisterType.DOUBLE_LO, 8, 2, 6, 11, 0, 12, 3, 7, 9, RegisterType.DOUBLE_HI, 10, 13, 5, 4}, new byte[]{7, RegisterType.DOUBLE_LO, 0, 8, 10, 13, 3, 6, RegisterType.DOUBLE_HI, 5, 4, 11, 12, 2, 9, 1}, new byte[]{11, 3, 5, 9, 10, 13, 8, 1, 2, 12, 7, RegisterType.DOUBLE_HI, 6, RegisterType.DOUBLE_LO, 0, 4}, new byte[]{11, 3, 2, 9, 7, 5, 6, 4, 12, RegisterType.DOUBLE_LO, 0, 8, 13, RegisterType.DOUBLE_HI, 10, 1}, new byte[]{RegisterType.DOUBLE_HI, 12, 9, 13, 10, 1, 2, 0, 3, 11, 8, 6, RegisterType.DOUBLE_LO, 4, 5, 7}, new byte[]{7, 9, 6, 0, 3, RegisterType.DOUBLE_LO, 11, 10, 13, 8, 4, 12, 5, RegisterType.DOUBLE_HI, 1, 2}, new byte[]{13, 10, 12, 5, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 1, 6, 3, 9, 7, 2, 8, 4, 11, 0}, new byte[]{10, 3, 5, 8, 4, 2, 9, RegisterType.DOUBLE_HI, 7, 11, 13, 0, RegisterType.DOUBLE_LO, 6, 12, 1}, new byte[]{1, 3, RegisterType.DOUBLE_LO, 11, RegisterType.DOUBLE_HI, 7, 9, 0, 8, 12, 13, 5, 4, 10, 6, 2}, new byte[]{5, 10, RegisterType.DOUBLE_LO, 0, 4, 9, 12, 8, 13, 6, 2, 7, RegisterType.DOUBLE_HI, 11, 3, 1}, new byte[]{6, RegisterType.DOUBLE_HI, 8, 7, 2, 12, 3, 11, 1, 10, 9, 5, 4, 13, RegisterType.DOUBLE_LO, 0}, new byte[]{9, 8, 12, 3, RegisterType.DOUBLE_HI, RegisterType.DOUBLE_LO, 7, 4, 10, 6, 5, 0, 2, 13, 1, 11}, new byte[]{RegisterType.DOUBLE_LO, RegisterType.DOUBLE_HI, 7, 8, 11, 3, 9, 0, 1, 2, 5, 6, 4, 13, 12, 10}, new byte[]{9, 10, 4, 5, 0, RegisterType.DOUBLE_LO, 13, 6, 7, 12, 11, 8, RegisterType.DOUBLE_HI, 2, 1, 3}, new byte[]{0, 2, 12, 6, 10, RegisterType.DOUBLE_HI, 3, 1, 9, 8, 4, 5, RegisterType.DOUBLE_LO, 11, 7, 13}, new byte[]{6, 7, 2, RegisterType.DOUBLE_LO, 12, 9, 4, RegisterType.DOUBLE_HI, 8, 11, 10, 5, 0, 13, 3, 1}, new byte[]{10, 5, 12, 13, 6, 3, RegisterType.DOUBLE_HI, 1, 0, 4, 9, 11, 2, RegisterType.DOUBLE_LO, 8, 7}, new byte[]{6, 4, 5, 12, 0, 7, 1, RegisterType.DOUBLE_HI, 13, 11, 10, RegisterType.DOUBLE_LO, 2, 8, 9, 3}};



public static String byteToHex(byte[] bytes){
    String strHex = &quot;&quot;;
    StringBuilder sb = new StringBuilder(&quot;&quot;);
    for (int n = 0; n &amp;lt; bytes.length; n++) {
        strHex = Integer.toHexString(bytes[n] &amp;amp; 0xFF);
        sb.append((strHex.length() == 1) ? &quot;0&quot; + strHex : strHex); // 每个字节由两个字符表示，位数不够，高位补0
    }
    return sb.toString().trim();
}
public static byte[] hexToByte(String hex){
    int m = 0, n = 0;
    int byteLen = hex.length() / 2; // 每两个字符描述一个字节
    byte[] ret = new byte[byteLen];
    for (int i = 0; i &amp;lt; byteLen; i++) {
        m = i * 2 + 1;
        n = m + 1;
        int intVal = Integer.decode(&quot;0x&quot; + hex.substring(i * 2, m) + hex.substring(m, n));
        ret[i] = Byte.valueOf((byte)intVal);
    }
    return ret;
}


public static byte[] transform(int i2, byte[] bArr) {
    try {
        byte[] bArr2 = new byte[bArr.length];
        byte[][] bArr3 = mConfigEnCode;
        if (bArr3.length == 32 &amp;amp;&amp;amp; i2 == 1) {
            transformInner(bArr, bArr2, bArr3);
        } else {
            byte[][] bArr4 = mConfigDeCode;
            if (bArr4.length == 32 &amp;amp;&amp;amp; i2 == 2) {
                transformInner(bArr, bArr2, bArr4);
            } else {
            }
        }
        return bArr2;
    } catch (Throwable th) {
        return null;
    }
}

private static void transformInner(byte[] bArr, byte[] bArr2, byte[][] bArr3) {
    for (int i2 = 0; i2 &amp;lt; bArr.length; i2++) {
        int i3 = i2 * 2;
        bArr2[i2] = (byte) (bArr3[(i3 + 1) % 32][(byte) (bArr[i2] &amp;amp; RegisterType.DOUBLE_HI)] | (bArr3[i3 % 32][(byte) ((bArr[i2] &amp;gt;&amp;gt; 4) &amp;amp; 15)] &amp;lt;&amp;lt; 4));
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
`&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/54140384/61c56b7a-935d-44ac-8aae-b8dda7ea3b9f&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/629</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/629</guid><pubDate>Tue, 28 May 2024 08:17:38 GMT</pubDate><author>a810291783</author></item><item><title>请问，如何补GetStringCritical jni 方法呢</title><description>&lt;p&gt;代码Warn提示：&lt;/p&gt;
&lt;p&gt;[12:19:26 941]  WARN [com.github.unidbg.linux.ARM32SyscallHandler] (ARM32SyscallHandler:537) - handleInterrupt intno=2, NR=-1073744248, svcNumber=0x1dc, PC=unidbg@0xfffe0e54, LR=RX@0x404871ed[&lt;a href=&quot;http://libdexload.so/&quot;&gt;libdexload.so&lt;/a&gt;]0x2b1ed, syscall=null
java.lang.UnsupportedOperationException
at com.github.unidbg.linux.android.dvm.DalvikVM$221.handle(DalvikVM.java:3443)
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:133)
at com.github.unidbg.arm.backend.Unicorn2Backend$11.hook(Unicorn2Backend.java:352)
at com.github.unidbg.arm.backend.unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:109)
at com.github.unidbg.arm.backend.unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.unicorn.Unicorn.emu_start(Unicorn.java:312)
at com.github.unidbg.arm.backend.Unicorn2Backend.emu_start(Unicorn2Backend.java:389)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:378)
at com.github.unidbg.thread.Function32.run(Function32.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:341)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:255)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethodObject(DvmObject.java:93)
看到源码中_GetStringCritical这里直接返回了异常 throw new UnsupportedOperationException();
想问下，这个应该怎么补呢？&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/626</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/626</guid><pubDate>Sun, 26 May 2024 04:23:48 GMT</pubDate><author>dyglcc</author></item><item><title>运行其他示例正常，运行anjuke示例报错了，用了unidbg-0.9.7</title><description>&lt;p&gt;&lt;code&gt;[20:55:51 584]  WARN [com.github.unidbg.linux.ARM32SyscallHandler] (ARM32SyscallHandler:533) - handleInterrupt intno=2, NR=-1073744136, svcNumber=0x12d, PC=unidbg@0xfffe0364, LR=RX@0x40001c05[libsignutil.so]0x1c05, syscall=null java.lang.IllegalStateException: Please vm.setJni(jni) at com.github.unidbg.linux.android.dvm.Hashable.checkJni(Hashable.java:8) at com.github.unidbg.linux.android.dvm.DvmMethod.callIntMethod(DvmMethod.java:129) at com.github.unidbg.linux.android.dvm.DalvikVM$46.handle(DalvikVM.java:795) at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:132) at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345) at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128) at unicorn.Unicorn.emu_start(Native Method) at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376) at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380) at com.github.unidbg.thread.Function32.run(Function32.java:39) at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19) at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172) at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96) at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340) at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:229) at com.github.unidbg.Module.emulateFunction(Module.java:163) at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135) at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316) at com.anjuke.mobile.sign.SignUtil.getSign0(SignUtil.java:58) at com.anjuke.mobile.sign.SignUtil.sign(SignUtil.java:67) at com.anjuke.mobile.sign.SignUtil.main(SignUtil.java:82) [20:55:51 588]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x40001bad[libsignutil.so]0x1bad exception sp=unidbg@0xbffff688, msg=Please vm.setJni(jni), offset=7ms Exception in thread &quot;main&quot; java.lang.NullPointerException: Cannot invoke &quot;com.github.unidbg.linux.android.dvm.StringObject.getValue()&quot; because &quot;obj&quot; is null at com.anjuke.mobile.sign.SignUtil.getSign0(SignUtil.java:59) at com.anjuke.mobile.sign.SignUtil.sign(SignUtil.java:67) at com.anjuke.mobile.sign.SignUtil.main(SignUtil.java:82)&lt;/code&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/625</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/625</guid><pubDate>Wed, 22 May 2024 13:04:48 GMT</pubDate><author>guochengwei111</author></item><item><title>小白的第一个unidbg</title><description>&lt;p&gt;[09:55:42 338]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:412) - handleInterrupt intno=2, NR=-129152, svcNumber=0x16f, PC=unidbg@0xfffe0784, LR=RX@0x4021d3a0[&lt;a href=&quot;http://libfekit.so/&quot;&gt;libfekit.so&lt;/a&gt;]0x21d3a0, syscall=null
java.lang.UnsupportedOperationException: com/tencent/mobileqq/dt/model/FEBound-&amp;gt;transform(I[B)[B
at com.github.unidbg.linux.android.dvm.AbstractJni.callStaticObjectMethodV(AbstractJni.java:504)
at com.github.unidbg.linux.android.dvm.AbstractJni.callStaticObjectMethodV(AbstractJni.java:438)&lt;/p&gt;
&lt;p&gt;求助大佬怎么解决这个问题&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/624</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/624</guid><pubDate>Mon, 20 May 2024 02:29:30 GMT</pubDate><author>a810291783</author></item><item><title>调用问题</title><description>&lt;p&gt;以下是源码&lt;/p&gt;
&lt;p&gt;import com.github.unidbg.AndroidEmulator;
import com.github.unidbg.Emulator;
import com.github.unidbg.Module;
import com.github.unidbg.file.FileResult;
import com.github.unidbg.file.IOResolver;
import com.github.unidbg.linux.android.AndroidEmulatorBuilder;
import com.github.unidbg.linux.android.AndroidResolver;
import com.github.unidbg.linux.android.dvm.*;
import com.github.unidbg.linux.android.dvm.api.AssetManager;
import com.github.unidbg.linux.android.dvm.array.ArrayObject;
import com.github.unidbg.linux.android.dvm.array.ByteArray;
import com.github.unidbg.linux.android.dvm.wrapper.DvmBoolean;
import com.github.unidbg.linux.android.dvm.wrapper.DvmInteger;
import com.github.unidbg.linux.android.dvm.wrapper.DvmLong;
import com.github.unidbg.memory.Memory;
import com.github.unidbg.virtualmodule.android.AndroidModule;
import com.github.unidbg.virtualmodule.android.JniGraphics;
import com.sun.jna.Pointer;
import sun.misc.BASE64Decoder;&lt;/p&gt;
&lt;p&gt;import java.io.File;
import java.io.FileNotFoundException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;&lt;/p&gt;
&lt;p&gt;public class xx extends AbstractJni implements IOResolver{
@Override
public FileResult resolve(Emulator emulator, String pathname, int oflags) {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    return null;
}
private final AndroidEmulator emulator;
private final VM vm;
private final Module module;
public xx(){
    emulator = AndroidEmulatorBuilder.for32Bit().setProcessName(&quot;com.sdu.didi.psnger&quot;).build();
    // 获取模拟器的内存操作接口
    final Memory memory = emulator.getMemory();
    // 设置系统类库解析
    memory.setLibraryResolver(new AndroidResolver(23));
    // 创建Android虚拟机,传入APK，Unidbg可以替我们做部分签名校验的工作
    vm = emulator.createDalvikVM(new File(&quot;F:\\unidbg-master\\unidbg-android\\src\\test\\resources\\1.apk&quot;));
    // 设置JNI
    vm.setJni(this);
    // 打印日志
    vm.setVerbose(true);
    new JniGraphics(emulator, vm).register(memory);
    new AndroidModule(emulator, vm).register(memory);
    emulator.getSyscallHandler().addIOResolver(this);   //重定向io
    // 加载目标SO
    //DalvikModule dm = vm.loadLibrary(&quot;didiwsg&quot;, true);
    DalvikModule dm = vm.loadLibrary(new File(&quot;F:\\unidbg-master\\unidbg-android\\src\\test\\resources\\libdidiwsg.so&quot;), true);
    //获取本SO模块的句柄,后续需要用它
    module = dm.getModule();
    // 调用JNI OnLoad
    dm.callJNI_OnLoad(emulator);
};

public static void main(String[] args) throws FileNotFoundException {
    xx ks = new xx();
    ks.call_0x5881();
}
private void call_0x5881() {
    Pointer jniEnv = vm.getJNIEnv();
    DvmObject&amp;lt;?&amp;gt; thiz = vm.resolveClass(&quot;com/didi/security/wireless/SecurityLib&quot;).newObject(null);
    //准备入参
    List&amp;lt;Object&amp;gt; list = new ArrayList&amp;lt;&amp;gt;(10);
    list.add(jniEnv);
    list.add(vm.addLocalObject(thiz));
    DvmObject&amp;lt;?&amp;gt; context = vm.resolveClass(&quot;com/didi/sdk/app/DIDIApplicationWithHotPatch&quot;).newObject(null); // context
    list.add(vm.addLocalObject(context));
    long time1 = System.currentTimeMillis();
    list.add(vm.addLocalObject(DvmLong.valueOf(vm,time1)));
    list.add(vm.addLocalObject(null));
    String data = &quot;wsgenveV60A2ObpBsTAvEt16MoRnbUfHBdCarU9683KT3AsB67n92UtFZYfoF4d7wM8I7Pek5aRXyV3WkoLTdQe80v/Px3A2ZGS6duRhGMbOYlDjAnDlvJ0MB/nuJX7l5JAJj+tlfbdF9AK7mk5331jsTsnifs2V4lmiUABV6DdM35S6Aa0K8M/k1e0CvzU+534iqsJyZDoaMTwyPQAtLEcQxii86Go4/TAvEt16MoRnbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4PcynmGOryZueY85g/Y6yWhXTpQBc69niKJzcCxvusv1RM4a9+gwdCKoOWZPZ/B5rb0nXW91cRJHqo0j4kFb2Oqr+6pfJLbA1UZrewY0pnlBRB1UnmRcBv/4fHZA0b+c32D8NggkGWlWZqCQKZV+1wI86E67cAtOspW0tMslnB9NiiUxsBLw5NorTTkzEfz9x40YGcKYe0+7uK/lOrF+4slpbUTzGnGT7Dv34wIylCdHRgMdgnLG4JsAFHupHR3LDZKViODrV4P7MsNuUoawxP3Cuc5eec8KAIrRXVJkYlo028N0tbdNnpIfVx3m/E5ANeD1Pq7HPfUXo5KulwAbfVAfvMdqYpBiNrezcUo9xrRaKcanDOt09l1pLwNYzEtN0lRqPogyKq5djCcKqOTzfgZ0oIcSvrdCl69PofAvLZsg18beTh8VdP+SLgwfzEB4ZFA2Tw80gIzSlt6IJzGA1DL364yTo+prLbVKrIM9SN82CXVBaOOt3Op4GtuHQvF8xZDqSLT0qNyk8lixKVI7/YP0Bzosn0j62JkXwvliApUKCrvQ+lLhuqsGlvhuvS8+v2KWRHKSHR3PcCdEvVk5gTx949CKdaTOwxGK9rbrPd+MCs2fqOJI0J5iqIJZLxYGRyYfVnKrqUElmuYb9oxZGmW2l1PRXnx4QnqPYG0gWm/UPQIjSkfX7XGO6jI+AK/jYZvWV6eEjgjvfY6TOI6hc47TYszudpntnajy2UBSL8ZiL9/j2opF7p60eyXF1NYspKyWU/e28CmezFpjFtz0ssPuqOkIXoa3Nc+5LRiBYFbDQ9SfCYV3+fVwNGz973xshjMliZV6cNiHiUsaeInletj+0RSENVriSpqEEX6YpMsVJKDI/bEutKrm5xRjbtwE5c4LG0biq8F0CwCjVC+KGtIVuD1Fd4GsyioZJDrkZQtbpKa9Gc0wiU9AoERu/RPFSlCippF/zT3HuLJANgr0n5hYR9/tekqgHLj4tA0qZFF4wKEu8KxfU2JknHmuVWr8ide8SHL8JFSGU53owVT0edtdJOa2Op16MoRnbUfHBdCarU9683KT3AsB67n92UtF727970746564253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynB67n92UtF96d56753973526e5039505865583JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn7n92UtFe68616MoRnbUfHBdCarU9683KT3AsB67n92UtF0253242437a7379253246743170556246516MoRnbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn496c76435734693262576f3073JDaxNfPy83okP3kLScwCkGiuMcyC4PcynKT3JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn0485263JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn53246304c7572516MoRnbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4PcynnbUfHBdCarU9683KT3AsB67n92UtF232636f64655f7479706525323225334130253243253232706f6c6963JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn67n92UtF53JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn3JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn2532322533412d3125324325323264646670253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynB67n92UtF6613638613961333965383130643JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn7n92UtF53341302e302532432532326c6e67253232253341302e302532432532326170695f76657273696f6e253232253341253232312e302e342532322532432532326170705f76657273JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn025323225324325323261707069642532322533413130303030253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynT3JDaxNfPy83okP3kLScwCkGiuMcyC4PcynRnbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn3JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn6f756e7472795f63JDaxNfPy83okP3kLScwCkGiuMcyC4PcyntF53JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn6f756e7472795f6964253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynB67n92UtFe616d65253232253341253232706c616MoRnbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn683JDaxNfPy83okP3kLScwCkGiuMcyC4PcynoRnbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn61705f74797065253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynB67n92UtFd6f64656c253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynB67n92UtF2432532326e6574776f726b5f74797065253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynB67n92UtF532326f7325323225334125323231302532322532432532326f735f74797065253JDaxNfPy83okP3kLScwCkGiuMcyC4PcynB67n92UtF53JDaxNfPy83okP3kLScwCkGiuMcyC4PcyndCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn683JDaxNfPy83okP3kLScwCkGiuMcyC4PcynnbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn696f6e5f69642532322533412532324d734a795067307648496f4a676e73436d77777159304e3JDaxNfPy83okP3kLScwCkGiuMcyC4PcynUtF64f43JDaxNfPy83okP3kLScwCkGiuMcyC4PcynbUfHBdCarU9683JDaxNfPy83okP3kLScwCkGiuMcyC4Pcyn322533412d31253744&quot;;
    ByteArray byteArray1 = new ByteArray(vm, data.getBytes());
    list.add(vm.addLocalObject(byteArray1));
    Number numbers = module.callFunction(emulator, 0x5881, list.toArray());

    System.out.println(&quot;numbers: intValue:&quot; + numbers.intValue());
    System.out.println(&quot;numbers: longValue&quot; + numbers.longValue());
    DvmObject&amp;lt;?&amp;gt; object = vm.getObject(numbers.intValue());
    System.out.println(object);
    String result = (String) object.getValue();
    System.out.println(&quot;result:&quot; + result);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
输出日志
&quot;E:\Program Files\Java\jdk1.8.0_341\bin\java.exe&quot; &quot;-javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2022.3\lib\idea_rt.jar=27999:D:\Program Files\JetBrains\IntelliJ IDEA 2022.3\bin&quot; -Dfile.encoding=UTF-8 -classpath &quot;E:\Program Files\Java\jdk1.8.0_341\jre\lib\charsets.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\deploy.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\access-bridge-64.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\cldrdata.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\dnsns.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\jaccess.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\jfxrt.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\localedata.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\nashorn.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\sunec.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\sunjce_provider.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\sunmscapi.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\sunpkcs11.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\ext\zipfs.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\javaws.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\jce.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\jfr.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\jfxswt.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\jsse.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\management-agent.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\plugin.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\resources.jar;E:\Program Files\Java\jdk1.8.0_341\jre\lib\rt.jar;F:\unidbg-master\unidbg-android\target\test-classes;F:\unidbg-master\unidbg-android\target\classes;F:\unidbg-master\unidbg-api\target\classes;F:\m2\com\github\zhkl0228\unicorn\1.0.14\unicorn-1.0.14.jar;F:\m2\org\scijava\native-lib-loader\2.3.5\native-lib-loader-2.3.5.jar;F:\m2\com\github\zhkl0228\capstone\3.1.8\capstone-3.1.8.jar;F:\m2\net\java\dev\jna\jna\5.10.0\jna-5.10.0.jar;F:\m2\com\github\zhkl0228\keystone\0.9.7\keystone-0.9.7.jar;F:\m2\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;F:\m2\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;F:\m2\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;F:\m2\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;F:\m2\com\alibaba\fastjson\1.2.83\fastjson-1.2.83.jar;F:\m2\com\github\zhkl0228\demumble\1.0.4\demumble-1.0.4.jar;F:\m2\net\dongliu\apk-parser\2.6.10\apk-parser-2.6.10.jar;F:\unidbg-master\backend\dynarmic\target\classes;F:\unidbg-master\backend\hypervisor\target\classes;F:\unidbg-master\backend\kvm\target\classes;F:\unidbg-master\backend\unicorn2\target\classes;F:\m2\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;F:\m2\junit\junit\4.13.2\junit-4.13.2.jar;F:\m2\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;F:\m2\org\slf4j\slf4j-reload4j\2.0.5\slf4j-reload4j-2.0.5.jar;F:\m2\ch\qos\reload4j\reload4j\1.2.22\reload4j-1.2.22.jar&quot; xx
JNIEnv-&amp;gt;FindClass(com/didi/security/wireless/SecurityLib) was called from RX@0x400046c9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x46c9
JNIEnv-&amp;gt;RegisterNatives(com/didi/security/wireless/SecurityLib, RW@0x401de004[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1de004, 23) was called from RX@0x400047df[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x47df
RegisterNative(com/didi/security/wireless/SecurityLib, nativeInit(Landroid/content/Context;)I, RX@0x40004ccd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x4ccd)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeInitRetry(Landroid/content/Context;)V, RX@0x40005029[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x5029)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeInitCache()V, RX@0x4000503d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x503d)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeReport(Ljava/lang/String;Ljava/lang/String;)Z, RX@0x40005145[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x5145)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeReportByCmd(Ljava/lang/String;)Z, RX@0x400056e5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x56e5)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeSig(Landroid/content/Context;JLjava/lang/String;[B)Ljava/lang/String;, RX@0x40005881[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x5881)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeCheck(Ljava/lang/String;)V, RX@0x40005f81[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x5f81)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeCollect(Ljava/lang/String;)Ljava/lang/String;, RX@0x4000630d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x630d)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeUpdate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V, RX@0x40006935[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x6935)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeUpdate2(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V, RX@0x40006a91[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x6a91)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeSecKey(Ljava/lang/String;)Ljava/lang/String;, RX@0x40006eed[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x6eed)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeSecKey2(Ljava/lang/String;)Ljava/lang/String;, RX@0x40007351[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x7351)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeSecKey3(Ljava/lang/String;)Ljava/lang/String;, RX@0x40007711[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x7711)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeEncrypt(Ljava/lang/String;Ljava/lang/String;[B)[B, RX@0x40007b69[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x7b69)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeEncrypt2([B[B)[B, RX@0x40007da9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x7da9)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeDecrypt2([B[B)[B, RX@0x40007e5d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x7e5d)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeSetHost(Ljava/lang/String;)V, RX@0x400081bd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x81bd)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeGetHost()Ljava/lang/String;, RX@0x40008599[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x8599)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeGetRid()Ljava/lang/String;, RX@0x40008841[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x8841)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeSetServerSessionId(Ljava/lang/String;)V, RX@0x40008bb1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x8bb1)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeGetSessionId()Ljava/lang/String;, RX@0x40008c71[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x8c71)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeIsNewTokenInfoCollected()Z, RX@0x40008c75[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x8c75)
RegisterNative(com/didi/security/wireless/SecurityLib, nativeGetFdInfoInner(Ljava/lang/String;)V, RX@0x40008d79[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x8d79)
JNIEnv-&amp;gt;NewGlobalRef(class com/didi/security/wireless/SecurityLib) was called from RX@0x40004711[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x4711
JNIEnv-&amp;gt;FindClass(android/content/Context) was called from RX@0x40134da3[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134da3
JNIEnv-&amp;gt;NewGlobalRef(class android/content/Context) was called from RX@0x40134dc9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134dc9
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getFilesDir()Ljava/io/File;) =&amp;gt; 0x26aff3ba was called from RX@0x40134df7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134df7
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getPackageManager()Landroid/content/pm/PackageManager;) =&amp;gt; 0x3acc78f0 was called from RX@0x40134e25[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134e25
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getApplicationInfo()Landroid/content/pm/ApplicationInfo;) =&amp;gt; 0xbfeda400 was called from RX@0x40134e53[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134e53
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getPackageName()Ljava/lang/String;) =&amp;gt; 0xf6590850 was called from RX@0x40134e81[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134e81
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getPackageCodePath()Ljava/lang/String;) =&amp;gt; 0xc493eef7 was called from RX@0x40134eaf[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134eaf
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getSystemService(Ljava/lang/String;)Ljava/lang/Object;) =&amp;gt; 0x545bcf2d was called from RX@0x40134edd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134edd
JNIEnv-&amp;gt;GetMethodID(android/content/Context.checkSelfPermission(Ljava/lang/String;)I) =&amp;gt; 0xf180a439 was called from RX@0x40134f0b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134f0b
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getContentResolver()Landroid/content/ContentResolver;) =&amp;gt; 0x3fe770ea was called from RX@0x40134f39[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134f39
JNIEnv-&amp;gt;GetMethodID(android/content/Context.getSharedPreferences(Ljava/lang/String;I)Landroid/content/SharedPreferences;) =&amp;gt; 0xa0a12d1f was called from RX@0x40134f67[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x134f67
JNIEnv-&amp;gt;FindClass(android/provider/Settings$Secure) was called from RX@0x401425d3[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1425d3
JNIEnv-&amp;gt;NewGlobalRef(class android/provider/Settings$Secure) was called from RX@0x401425f9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1425f9
JNIEnv-&amp;gt;GetStaticMethodID(android/provider/Settings$Secure.getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;) =&amp;gt; 0x3efce417 was called from RX@0x40142627[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142627
JNIEnv-&amp;gt;FindClass(android/provider/Settings$System) was called from RX@0x40142643[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142643
JNIEnv-&amp;gt;NewGlobalRef(class android/provider/Settings$System) was called from RX@0x40142667[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142667
JNIEnv-&amp;gt;GetStaticMethodID(android/provider/Settings$System.getInt(Landroid/content/ContentResolver;Ljava/lang/String;)I) =&amp;gt; 0xd541eefc was called from RX@0x40142695[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142695
JNIEnv-&amp;gt;FindClass(android/provider/Settings$Global) was called from RX@0x401426b1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1426b1
JNIEnv-&amp;gt;NewGlobalRef(class android/provider/Settings$Global) was called from RX@0x401426d3[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1426d3
JNIEnv-&amp;gt;GetStaticMethodID(android/provider/Settings$Global.getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;) =&amp;gt; 0x11d9f943 was called from RX@0x40142701[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142701
JNIEnv-&amp;gt;FindClass(android/content/SharedPreferences) was called from RX@0x401367df[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1367df
JNIEnv-&amp;gt;GetMethodID(android/content/SharedPreferences.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;) =&amp;gt; 0x2c5b4190 was called from RX@0x4013680d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13680d
JNIEnv-&amp;gt;GetMethodID(android/content/SharedPreferences.edit()Landroid/content/SharedPreferences$Editor;) =&amp;gt; 0x5913f014 was called from RX@0x4013683b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13683b
JNIEnv-&amp;gt;FindClass(android/content/SharedPreferences$Editor) was called from RX@0x4013686b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13686b
JNIEnv-&amp;gt;GetMethodID(android/content/SharedPreferences$Editor.putString(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;) =&amp;gt; 0x201e0563 was called from RX@0x40136897[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x136897
JNIEnv-&amp;gt;GetMethodID(android/content/SharedPreferences$Editor.commit()Z) =&amp;gt; 0x7555d53d was called from RX@0x401368c5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1368c5
JNIEnv-&amp;gt;FindClass(java/net/URL) was called from RX@0x40131ded[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131ded
JNIEnv-&amp;gt;NewGlobalRef(class java/net/URL) was called from RX@0x40131e37[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131e37
JNIEnv-&amp;gt;GetMethodID(java/net/URL.&lt;init&gt;(Ljava/lang/String;)V) =&amp;gt; 0x9ea2c58c was called from RX@0x40131e65[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131e65
JNIEnv-&amp;gt;GetMethodID(java/net/URL.openConnection(Ljava/net/Proxy;)Ljava/net/URLConnection;) =&amp;gt; 0x59506c0b was called from RX@0x40131e9d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131e9d
JNIEnv-&amp;gt;GetMethodID(java/net/URL.openConnection()Ljava/net/URLConnection;) =&amp;gt; 0x476ce2ab was called from RX@0x40131ed5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131ed5
JNIEnv-&amp;gt;FindClass(java/net/Proxy) was called from RX@0x40131f05[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131f05
JNIEnv-&amp;gt;NewGlobalRef(class java/net/Proxy) was called from RX@0x40131f29[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131f29
JNIEnv-&amp;gt;GetStaticFieldID(java/net/Proxy.NO_PROXYLjava/net/Proxy;) =&amp;gt; 0xc37b86ea was called from RX@0x40131f59[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131f59
JNIEnv-&amp;gt;FindClass(java/lang/String) was called from RX@0x40131f89[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131f89
JNIEnv-&amp;gt;GetMethodID(java/lang/String.getBytes()[B) =&amp;gt; 0x8b04c6b3 was called from RX@0x40131fb7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131fb7
JNIEnv-&amp;gt;FindClass(java/net/HttpURLConnection) was called from RX@0x40131fe9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x131fe9
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.setConnectTimeout(I)V) =&amp;gt; 0x6ef33230 was called from RX@0x40132015[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132015
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.setReadTimeout(I)V) =&amp;gt; 0xcf13410e was called from RX@0x4013203f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13203f
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.setRequestMethod(Ljava/lang/String;)V) =&amp;gt; 0x7494641a was called from RX@0x40132069[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132069
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.setRequestProperty(Ljava/lang/String;Ljava/lang/String;)V) =&amp;gt; 0x38309cf0 was called from RX@0x40132093[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132093
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.setDoOutput(Z)V) =&amp;gt; 0x4680f816 was called from RX@0x401320bd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1320bd
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.connect()V) =&amp;gt; 0x1d52ef82 was called from RX@0x401320e7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1320e7
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.disconnect()V) =&amp;gt; 0xf41a0c2 was called from RX@0x40132111[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132111
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.getResponseCode()I) =&amp;gt; 0x8a5a0adb was called from RX@0x4013213b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13213b
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.getInputStream()Ljava/io/InputStream;) =&amp;gt; 0xdee16d2d was called from RX@0x40132165[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132165
JNIEnv-&amp;gt;GetMethodID(java/net/HttpURLConnection.getOutputStream()Ljava/io/OutputStream;) =&amp;gt; 0xdf063873 was called from RX@0x4013218f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13218f
JNIEnv-&amp;gt;FindClass(java/io/InputStream) was called from RX@0x401321b1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1321b1
JNIEnv-&amp;gt;GetMethodID(java/io/InputStream.close()V) =&amp;gt; 0x6861399c was called from RX@0x401321d9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1321d9
JNIEnv-&amp;gt;FindClass(java/io/OutputStream) was called from RX@0x401321fb[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1321fb
JNIEnv-&amp;gt;GetMethodID(java/io/OutputStream.write([B)V) =&amp;gt; 0xd6d7b3cb was called from RX@0x40132223[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132223
JNIEnv-&amp;gt;GetMethodID(java/io/OutputStream.close()V) =&amp;gt; 0xa47f474b was called from RX@0x4013224d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13224d
JNIEnv-&amp;gt;FindClass(java/io/InputStreamReader) was called from RX@0x4013226f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13226f
JNIEnv-&amp;gt;NewGlobalRef(class java/io/InputStreamReader) was called from RX@0x4013228d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13228d
JNIEnv-&amp;gt;GetMethodID(java/io/InputStreamReader.&lt;init&gt;(Ljava/io/InputStream;)V) =&amp;gt; 0x692aa2f2 was called from RX@0x401322b7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1322b7
JNIEnv-&amp;gt;FindClass(java/io/BufferedReader) was called from RX@0x401322d9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1322d9
JNIEnv-&amp;gt;NewGlobalRef(class java/io/BufferedReader) was called from RX@0x401322f9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1322f9
JNIEnv-&amp;gt;GetMethodID(java/io/BufferedReader.&lt;init&gt;(Ljava/io/Reader;)V) =&amp;gt; 0x8def6c84 was called from RX@0x40132323[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132323
JNIEnv-&amp;gt;GetMethodID(java/io/BufferedReader.close()V) =&amp;gt; 0x7fc065ac was called from RX@0x4013234d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13234d
JNIEnv-&amp;gt;GetMethodID(java/io/BufferedReader.readLine()Ljava/lang/String;) =&amp;gt; 0x4ef37924 was called from RX@0x40132377[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132377
JNIEnv-&amp;gt;FindClass(com/didi/security/wireless/SecurityManager) was called from RX@0x40132399[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132399
JNIEnv-&amp;gt;NewGlobalRef(class com/didi/security/wireless/SecurityManager) was called from RX@0x401323d5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1323d5
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityManager.doSign(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;) =&amp;gt; 0x4ce52784 was called from RX@0x40132409[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x132409
JNIEnv-&amp;gt;FindClass(android/os/BatteryManager) was called from RX@0x40142163[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142163
JNIEnv-&amp;gt;GetMethodID(android/os/BatteryManager.getIntProperty(I)I) =&amp;gt; 0x4fb91ab was called from RX@0x4014218f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x14218f
JNIEnv-&amp;gt;FindClass(java/util/Locale) was called from RX@0x40135eb3[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x135eb3
JNIEnv-&amp;gt;NewGlobalRef(class java/util/Locale) was called from RX@0x40135ed7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x135ed7
JNIEnv-&amp;gt;GetStaticMethodID(java/util/Locale.getDefault()Ljava/util/Locale;) =&amp;gt; 0x21984fec was called from RX@0x40135f05[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x135f05
JNIEnv-&amp;gt;GetMethodID(java/util/Locale.getLanguage()Ljava/lang/String;) =&amp;gt; 0x63ba4a4e was called from RX@0x40135f33[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x135f33
JNIEnv-&amp;gt;GetMethodID(java/util/Locale.getCountry()Ljava/lang/String;) =&amp;gt; 0xab26afd6 was called from RX@0x40135f61[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x135f61
JNIEnv-&amp;gt;FindClass(java/io/File) was called from RX@0x4012fe87[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x12fe87
JNIEnv-&amp;gt;GetMethodID(java/io/File.getAbsolutePath()Ljava/lang/String;) =&amp;gt; 0xb4553f34 was called from RX@0x4012feb5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x12feb5
JNIEnv-&amp;gt;GetMethodID(java/io/File.getCanonicalPath()Ljava/lang/String;) =&amp;gt; 0x25f5f2f7 was called from RX@0x4012fee3[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x12fee3
JNIEnv-&amp;gt;FindClass(android/os/Environment) was called from RX@0x4012ff13[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x12ff13
JNIEnv-&amp;gt;NewGlobalRef(class android/os/Environment) was called from RX@0x4012ff35[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x12ff35
JNIEnv-&amp;gt;GetStaticMethodID(android/os/Environment.getExternalStorageDirectory()Ljava/io/File;) =&amp;gt; 0x57b36412 was called from RX@0x4012ff63[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x12ff63
JNIEnv-&amp;gt;FindClass(java/lang/String) was called from RX@0x40142927[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142927
JNIEnv-&amp;gt;NewGlobalRef(class java/lang/String) was called from RX@0x4014294d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x14294d
JNIEnv-&amp;gt;FindClass(android/net/Uri) was called from RX@0x40142969[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142969
JNIEnv-&amp;gt;NewGlobalRef(class android/net/Uri) was called from RX@0x4014298f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x14298f
JNIEnv-&amp;gt;GetStaticMethodID(android/net/Uri.parse(Ljava/lang/String;)Landroid/net/Uri;) =&amp;gt; 0xbd1820e was called from RX@0x401429bd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1429bd
JNIEnv-&amp;gt;FindClass(android/content/ContentResolver) was called from RX@0x401429d9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1429d9
JNIEnv-&amp;gt;GetMethodID(android/content/ContentResolver.query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;) =&amp;gt; 0x57165ce7 was called from RX@0x40142a09[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142a09
JNIEnv-&amp;gt;FindClass(android/database/Cursor) was called from RX@0x40142a25[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142a25
JNIEnv-&amp;gt;GetMethodID(android/database/Cursor.getCount()I) =&amp;gt; 0x7ed10474 was called from RX@0x40142a53[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142a53
JNIEnv-&amp;gt;GetMethodID(android/database/Cursor.moveToFirst()Z) =&amp;gt; 0xfba9b3f0 was called from RX@0x40142a81[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142a81
JNIEnv-&amp;gt;GetMethodID(android/database/Cursor.getString(I)Ljava/lang/String;) =&amp;gt; 0xfba08c66 was called from RX@0x40142aaf[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142aaf
JNIEnv-&amp;gt;GetMethodID(android/database/Cursor.close()V) =&amp;gt; 0xb5907598 was called from RX@0x40142add[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x142add
JNIEnv-&amp;gt;FindClass(com/didi/security/wireless/AIdClient) was called from RX@0x40141aff[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x141aff
JNIEnv-&amp;gt;NewGlobalRef(class com/didi/security/wireless/AIdClient) was called from RX@0x40141b23[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x141b23
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/AIdClient.getInstance()Lcom/didi/security/wireless/AIdClient;) =&amp;gt; 0x28d94b8e was called from RX@0x40141b51[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x141b51
JNIEnv-&amp;gt;GetMethodID(com/didi/security/wireless/AIdClient.getID()Ljava/lang/String;) =&amp;gt; 0x2dc074bd was called from RX@0x40141b83[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x141b83
JNIEnv-&amp;gt;FindClass(com/didi/security/wireless/SecurityDots) was called from RX@0x4013fc6f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13fc6f
JNIEnv-&amp;gt;NewGlobalRef(class com/didi/security/wireless/SecurityDots) was called from RX@0x4013fc93[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13fc93
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityDots.getInstance()Lcom/didi/security/wireless/SecurityDots;) =&amp;gt; 0xb1b9880c was called from RX@0x4013fcc5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13fcc5
JNIEnv-&amp;gt;GetMethodID(com/didi/security/wireless/SecurityDots.getTouchList()Ljava/lang/String;) =&amp;gt; 0x8f9b8566 was called from RX@0x4013fcfb[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13fcfb
JNIEnv-&amp;gt;GetMethodID(com/didi/security/wireless/SecurityDots.getTouchDevice()Ljava/lang/String;) =&amp;gt; 0x70b45bde was called from RX@0x4013fd2f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13fd2f
JNIEnv-&amp;gt;FindClass(java/lang/Class) was called from RX@0x40138621[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138621
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.getDeclaredFields()[Ljava/lang/reflect/Field;) =&amp;gt; 0x61a8e98d was called from RX@0x4013865b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13865b
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.getDeclaredMethods()[Ljava/lang/reflect/Method;) =&amp;gt; 0x7a1e17eb was called from RX@0x40138699[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138699
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.getDeclaredConstructors()[Ljava/lang/reflect/Constructor;) =&amp;gt; 0xa54a1a4d was called from RX@0x401386d5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1386d5
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.getInterfaces()[Ljava/lang/Class;) =&amp;gt; 0x2a8ea904 was called from RX@0x40138711[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138711
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.getModifiers()I) =&amp;gt; 0x360bba8d was called from RX@0x4013874d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13874d
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.getClassLoader()Ljava/lang/ClassLoader;) =&amp;gt; 0x48b3e3e5 was called from RX@0x40138789[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138789
JNIEnv-&amp;gt;GetMethodID(java/lang/Class.isPrimitive()Z) =&amp;gt; 0x71597b71 was called from RX@0x401387c5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1387c5
JNIEnv-&amp;gt;FindClass(java/lang/ClassLoader) was called from RX@0x401387f9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1387f9
JNIEnv-&amp;gt;GetMethodID(java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;) =&amp;gt; 0xc48b82e2 was called from RX@0x4013882b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13882b
JNIEnv-&amp;gt;FindClass(java/lang/reflect/Method) was called from RX@0x40138861[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138861
JNIEnv-&amp;gt;GetMethodID(java/lang/reflect/Method.getModifiers()I) =&amp;gt; 0x9c98f18a was called from RX@0x40138893[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138893
JNIEnv-&amp;gt;GetMethodID(java/lang/reflect/Method.getDeclaringClass()Ljava/lang/Class;) =&amp;gt; 0xe8cb7313 was called from RX@0x401388d1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1388d1
JNIEnv-&amp;gt;FindClass(java/lang/reflect/Field) was called from RX@0x40138905[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138905
JNIEnv-&amp;gt;GetMethodID(java/lang/reflect/Field.getModifiers()I) =&amp;gt; 0x762f6add was called from RX@0x40138939[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138939
JNIEnv-&amp;gt;GetMethodID(java/lang/reflect/Field.getDeclaringClass()Ljava/lang/Class;) =&amp;gt; 0xdb861ba0 was called from RX@0x40138975[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138975
JNIEnv-&amp;gt;GetMethodID(java/lang/reflect/Field.getName()Ljava/lang/String;) =&amp;gt; 0xba500c7 was called from RX@0x401389b1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1389b1
JNIEnv-&amp;gt;GetMethodID(java/lang/reflect/Field.getType()Ljava/lang/Class;) =&amp;gt; 0xae6ada97 was called from RX@0x401389ed[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1389ed
JNIEnv-&amp;gt;FindClass(android/content/pm/ApplicationInfo) was called from RX@0x40138a21[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138a21
JNIEnv-&amp;gt;GetMethodID(android/content/pm/ApplicationInfo.loadLabel(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;) =&amp;gt; 0xe6b638b6 was called from RX@0x40138a57[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138a57
JNIEnv-&amp;gt;GetFieldID(android/content/pm/ApplicationInfo.targetSdkVersion I) =&amp;gt; 0x74a55c91 was called from RX@0x40138a95[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138a95
JNIEnv-&amp;gt;GetFieldID(android/content/pm/ApplicationInfo.flags I) =&amp;gt; 0xd8f8f0a3 was called from RX@0x40138ad1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138ad1
JNIEnv-&amp;gt;GetFieldID(android/content/pm/ApplicationInfo.packageName Ljava/lang/String;) =&amp;gt; 0x6c272206 was called from RX@0x40138b0d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138b0d
JNIEnv-&amp;gt;GetFieldID(android/content/pm/ApplicationInfo.nativeLibraryDir Ljava/lang/String;) =&amp;gt; 0x1fabc7e8 was called from RX@0x40138b49[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138b49
JNIEnv-&amp;gt;GetFieldID(android/content/pm/ApplicationInfo.dataDir Ljava/lang/String;) =&amp;gt; 0xef83d1b4 was called from RX@0x40138b85[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138b85
JNIEnv-&amp;gt;GetFieldID(android/content/pm/ApplicationInfo.sourceDir Ljava/lang/String;) =&amp;gt; 0x304a6a5 was called from RX@0x40138bc1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138bc1
JNIEnv-&amp;gt;FindClass(android/content/pm/PackageInfo) was called from RX@0x40138bf5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138bf5
JNIEnv-&amp;gt;GetFieldID(android/content/pm/PackageInfo.versionName Ljava/lang/String;) =&amp;gt; 0xbcc0232a was called from RX@0x40138c29[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138c29
JNIEnv-&amp;gt;GetFieldID(android/content/pm/PackageInfo.versionCode I) =&amp;gt; 0x41c3e70b was called from RX@0x40138c65[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138c65
JNIEnv-&amp;gt;GetFieldID(android/content/pm/PackageInfo.applicationInfo Landroid/content/pm/ApplicationInfo;) =&amp;gt; 0xb287dbb2 was called from RX@0x40138ca1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138ca1
JNIEnv-&amp;gt;GetFieldID(android/content/pm/PackageInfo.firstInstallTime J) =&amp;gt; 0x215b0bd1 was called from RX@0x40138cdd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138cdd
JNIEnv-&amp;gt;FindClass(android/content/pm/PackageManager) was called from RX@0x40138d11[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138d11
JNIEnv-&amp;gt;GetMethodID(android/content/pm/PackageManager.getPackageInfo(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;) =&amp;gt; 0x3bca8377 was called from RX@0x40138d45[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138d45
JNIEnv-&amp;gt;GetMethodID(android/content/pm/PackageManager.getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;) =&amp;gt; 0xa0bf5ae3 was called from RX@0x40138d81[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138d81
JNIEnv-&amp;gt;GetMethodID(android/content/pm/PackageManager.getInstalledApplications(I)Ljava/util/List;) =&amp;gt; 0x810a4a3e was called from RX@0x40138dbd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138dbd
JNIEnv-&amp;gt;GetMethodID(android/content/pm/PackageManager.getInstalledPackages(I)Ljava/util/List;) =&amp;gt; 0x566b9634 was called from RX@0x40138df9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138df9
JNIEnv-&amp;gt;FindClass(java/lang/CharSequence) was called from RX@0x40138e2d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138e2d
JNIEnv-&amp;gt;GetMethodID(java/lang/CharSequence.toString()Ljava/lang/String;) =&amp;gt; 0x13c3c453 was called from RX@0x40138e5f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138e5f
JNIEnv-&amp;gt;FindClass(android/view/WindowManager) was called from RX@0x40138e95[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138e95
JNIEnv-&amp;gt;GetMethodID(android/view/WindowManager.getDefaultDisplay()Landroid/view/Display;) =&amp;gt; 0x649eb96b was called from RX@0x40138ec7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138ec7
JNIEnv-&amp;gt;FindClass(android/view/Display) was called from RX@0x40138efd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138efd
JNIEnv-&amp;gt;GetMethodID(android/view/Display.getRealMetrics(Landroid/util/DisplayMetrics;)V) =&amp;gt; 0xfd579536 was called from RX@0x40138f2f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138f2f
JNIEnv-&amp;gt;FindClass(android/util/DisplayMetrics) was called from RX@0x40138f65[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138f65
JNIEnv-&amp;gt;NewGlobalRef(class android/util/DisplayMetrics) was called from RX@0x40138f8f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138f8f
JNIEnv-&amp;gt;GetMethodID(android/util/DisplayMetrics.&lt;init&gt;()V) =&amp;gt; 0x9c3050a4 was called from RX@0x40138fc5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x138fc5
JNIEnv-&amp;gt;GetFieldID(android/util/DisplayMetrics.widthPixels I) =&amp;gt; 0x6be4c703 was called from RX@0x40139001[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139001
JNIEnv-&amp;gt;GetFieldID(android/util/DisplayMetrics.heightPixels I) =&amp;gt; 0x6cb02cc2 was called from RX@0x4013903d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13903d
JNIEnv-&amp;gt;FindClass(android/net/wifi/WifiManager) was called from RX@0x40139071[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139071
JNIEnv-&amp;gt;GetMethodID(android/net/wifi/WifiManager.getConnectionInfo()Landroid/net/wifi/WifiInfo;) =&amp;gt; 0x6b848ba was called from RX@0x401390a3[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1390a3
JNIEnv-&amp;gt;FindClass(android/net/wifi/WifiInfo) was called from RX@0x401390d9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1390d9
JNIEnv-&amp;gt;GetMethodID(android/net/wifi/WifiInfo.getSSID()Ljava/lang/String;) =&amp;gt; 0x2d3b6000 was called from RX@0x4013910b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13910b
JNIEnv-&amp;gt;GetMethodID(android/net/wifi/WifiInfo.getBSSID()Ljava/lang/String;) =&amp;gt; 0xffe5450e was called from RX@0x40139149[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139149
JNIEnv-&amp;gt;FindClass(android/net/ConnectivityManager) was called from RX@0x4013917d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13917d
JNIEnv-&amp;gt;GetMethodID(android/net/ConnectivityManager.getNetworkInfo(I)Landroid/net/NetworkInfo;) =&amp;gt; 0x98e93bd0 was called from RX@0x401391af[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1391af
JNIEnv-&amp;gt;GetMethodID(android/net/ConnectivityManager.getActiveNetworkInfo()Landroid/net/NetworkInfo;) =&amp;gt; 0xde33d4a7 was called from RX@0x401391ed[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1391ed
JNIEnv-&amp;gt;FindClass(android/net/NetworkInfo) was called from RX@0x40139221[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139221
JNIEnv-&amp;gt;GetMethodID(android/net/NetworkInfo.getType()I) =&amp;gt; 0x897d8df3 was called from RX@0x40139253[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139253
JNIEnv-&amp;gt;GetMethodID(android/net/NetworkInfo.getSubtype()I) =&amp;gt; 0x9dea0589 was called from RX@0x40139291[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139291
JNIEnv-&amp;gt;FindClass(android/location/LocationManager) was called from RX@0x401392c5[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1392c5
JNIEnv-&amp;gt;GetMethodID(android/location/LocationManager.isProviderEnabled(Ljava/lang/String;)Z) =&amp;gt; 0xa8b1fa8c was called from RX@0x401392f7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1392f7
JNIEnv-&amp;gt;GetMethodID(android/location/LocationManager.getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;) =&amp;gt; 0xb4bea4a6 was called from RX@0x40139335[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139335
JNIEnv-&amp;gt;FindClass(android/location/Location) was called from RX@0x40139369[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139369
JNIEnv-&amp;gt;GetMethodID(android/location/Location.getLongitude()D) =&amp;gt; 0x6a15fe8a was called from RX@0x4013939f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13939f
JNIEnv-&amp;gt;GetMethodID(android/location/Location.getLatitude()D) =&amp;gt; 0x3fb04981 was called from RX@0x401393dd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1393dd
JNIEnv-&amp;gt;GetMethodID(android/location/Location.getAltitude()D) =&amp;gt; 0x5904778b was called from RX@0x40139419[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139419
JNIEnv-&amp;gt;GetMethodID(android/location/Location.getBearing()F) =&amp;gt; 0x7020b1ad was called from RX@0x40139455[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139455
JNIEnv-&amp;gt;GetMethodID(android/location/Location.getSpeed()F) =&amp;gt; 0xae326bf4 was called from RX@0x40139491[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139491
JNIEnv-&amp;gt;GetMethodID(android/location/Location.getAccuracy()F) =&amp;gt; 0x3c7fd5d6 was called from RX@0x401394cd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1394cd
JNIEnv-&amp;gt;GetMethodID(android/location/Location.getTime()J) =&amp;gt; 0x1e7e9086 was called from RX@0x40139509[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139509
JNIEnv-&amp;gt;GetMethodID(android/location/Location.isFromMockProvider()Z) =&amp;gt; 0x5546322a was called from RX@0x40139545[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139545
JNIEnv-&amp;gt;FindClass(android/telephony/TelephonyManager) was called from RX@0x40139579[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139579
JNIEnv-&amp;gt;GetMethodID(android/telephony/TelephonyManager.getDeviceId()Ljava/lang/String;) =&amp;gt; 0x63bb9035 was called from RX@0x401395af[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1395af
JNIEnv-&amp;gt;GetMethodID(android/telephony/TelephonyManager.getSubscriberId()Ljava/lang/String;) =&amp;gt; 0x36a17047 was called from RX@0x401395ed[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1395ed
JNIEnv-&amp;gt;GetMethodID(android/telephony/TelephonyManager.getSimSerialNumber()Ljava/lang/String;) =&amp;gt; 0xc95067a6 was called from RX@0x40139629[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139629
JNIEnv-&amp;gt;GetMethodID(android/telephony/TelephonyManager.getNetworkOperator()Ljava/lang/String;) =&amp;gt; 0xcb2700c4 was called from RX@0x40139665[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139665
JNIEnv-&amp;gt;GetMethodID(android/telephony/TelephonyManager.getCellLocation()Landroid/telephony/CellLocation;) =&amp;gt; 0x91bbe5b2 was called from RX@0x401396a1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1396a1
JNIEnv-&amp;gt;GetMethodID(android/telephony/TelephonyManager.getNetworkType()I) =&amp;gt; 0xbdaa5e79 was called from RX@0x401396dd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1396dd
JNIEnv-&amp;gt;FindClass(android/telephony/gsm/GsmCellLocation) was called from RX@0x40139711[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139711
JNIEnv-&amp;gt;NewGlobalRef(class android/telephony/gsm/GsmCellLocation) was called from RX@0x4013973b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13973b
JNIEnv-&amp;gt;GetMethodID(android/telephony/gsm/GsmCellLocation.getLac()I) =&amp;gt; 0x1039b80c was called from RX@0x40139771[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139771
JNIEnv-&amp;gt;GetMethodID(android/telephony/gsm/GsmCellLocation.getCid()I) =&amp;gt; 0x14f4adc was called from RX@0x401397ad[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1397ad
JNIEnv-&amp;gt;FindClass(android/telephony/cdma/CdmaCellLocation) was called from RX@0x401397e1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1397e1
JNIEnv-&amp;gt;NewGlobalRef(class android/telephony/cdma/CdmaCellLocation) was called from RX@0x4013980b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13980b
JNIEnv-&amp;gt;GetMethodID(android/telephony/cdma/CdmaCellLocation.getNetworkId()I) =&amp;gt; 0xe5762ef5 was called from RX@0x40139841[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139841
JNIEnv-&amp;gt;GetMethodID(android/telephony/cdma/CdmaCellLocation.getBaseStationId()I) =&amp;gt; 0x6fbaa20 was called from RX@0x4013987d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13987d
JNIEnv-&amp;gt;FindClass(android/view/accessibility/AccessibilityManager) was called from RX@0x401398b1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1398b1
JNIEnv-&amp;gt;GetMethodID(android/view/accessibility/AccessibilityManager.getEnabledAccessibilityServiceList(I)Ljava/util/List;) =&amp;gt; 0x7d8f2a4e was called from RX@0x401398e3[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1398e3
JNIEnv-&amp;gt;FindClass(android/accessibilityservice/AccessibilityServiceInfo) was called from RX@0x40139919[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139919
JNIEnv-&amp;gt;GetMethodID(android/accessibilityservice/AccessibilityServiceInfo.getId()Ljava/lang/String;) =&amp;gt; 0x49bafcee was called from RX@0x4013994b[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x13994b
JNIEnv-&amp;gt;GetFieldID(android/accessibilityservice/AccessibilityServiceInfo.packageNames [Ljava/lang/String;) =&amp;gt; 0x81285afb was called from RX@0x40139989[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139989
JNIEnv-&amp;gt;FindClass(java/util/List) was called from RX@0x401399bd[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1399bd
JNIEnv-&amp;gt;GetMethodID(java/util/List.size()I) =&amp;gt; 0x8fe82bb8 was called from RX@0x401399ef[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x1399ef
JNIEnv-&amp;gt;GetMethodID(java/util/List.get(I)Ljava/lang/Object;) =&amp;gt; 0x143bf95d was called from RX@0x40139a1d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139a1d
JNIEnv-&amp;gt;FindClass(java/lang/System) was called from RX@0x40139a43[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139a43
JNIEnv-&amp;gt;NewGlobalRef(class java/lang/System) was called from RX@0x40139a65[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139a65
JNIEnv-&amp;gt;GetStaticMethodID(java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String;) =&amp;gt; 0x3e16b3f8 was called from RX@0x40139a93[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139a93
JNIEnv-&amp;gt;FindClass(android/os/Build) was called from RX@0x40139ab9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139ab9
JNIEnv-&amp;gt;NewGlobalRef(class android/os/Build) was called from RX@0x40139adb[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139adb
JNIEnv-&amp;gt;GetStaticMethodID(android/os/Build.getSerial()Ljava/lang/String;) =&amp;gt; 0x2be8b741 was called from RX@0x40139b09[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139b09
JNIEnv-&amp;gt;FindClass(com/didi/security/wireless/SecurityLib) was called from RX@0x40139b2f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139b2f
JNIEnv-&amp;gt;NewGlobalRef(class com/didi/security/wireless/SecurityLib) was called from RX@0x40139b55[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139b55
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.getFeature(I)Ljava/lang/Object;) =&amp;gt; 0x197e2867 was called from RX@0x40139b6f[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139b6f
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.getTouchData()Ljava/lang/String;) =&amp;gt; 0xdd79ff1b was called from RX@0x40139b9d[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139b9d
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.OmegaUpload(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V) =&amp;gt; 0x3c86ec2 was called from RX@0x40139bcb[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139bcb
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.getSeed(Landroid/content/Context;)Ljava/lang/String;) =&amp;gt; 0x68aff703 was called from RX@0x40139bf9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139bf9
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.setSeed(Landroid/content/Context;Ljava/lang/String;)V) =&amp;gt; 0xf0cfc5d3 was called from RX@0x40139c27[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139c27
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.scanSucess(Landroid/content/Context;)Ljava/lang/String;) =&amp;gt; 0xf50c4b8f was called from RX@0x40139c55[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139c55
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.isAccessibilityEnabled(Landroid/content/Context;)Ljava/lang/String;) =&amp;gt; 0xb407e6b3 was called from RX@0x40139c83[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139c83
JNIEnv-&amp;gt;GetStaticMethodID(com/didi/security/wireless/SecurityLib.getUserMode()I) =&amp;gt; 0xa2a290a1 was called from RX@0x40139cb1[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139cb1
JNIEnv-&amp;gt;FindClass(java/lang/String) was called from RX@0x40139cd7[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139cd7
JNIEnv-&amp;gt;NewGlobalRef(class java/lang/String) was called from RX@0x40139cf9[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139cf9
JNIEnv-&amp;gt;CallObjectMethod(class com/didi/security/wireless/SecurityLib, getClassLoader() =&amp;gt; dalvik.system.PathClassLoader@3ada9e37) was called from RX@0x40139d11[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139d11
JNIEnv-&amp;gt;NewGlobalRef(dalvik.system.PathClassLoader@3ada9e37) was called from RX@0x40139d33[&lt;a href=&quot;http://libdidiwsg.so/&quot;&gt;libdidiwsg.so&lt;/a&gt;]0x139d33
numbers: intValue:0
numbers: longValue4708659971879862272
null
Exception in thread &quot;main&quot; java.lang.NullPointerException
at xx.call_0x5881(xx.java:87)
at xx.main(xx.java:64)&lt;/init&gt;&lt;/init&gt;&lt;/init&gt;&lt;/init&gt;&lt;/p&gt;
&lt;p&gt;Process finished with exit code 1&lt;/p&gt;
&lt;p&gt;numbers.longValue()  有值  numbers. intValue() 是0
但是 vm.getObject 只能传入int 类型   应该怎么取值呢
so入口        private static native String nativeSig(Context context, long j, String str, byte[] bArr);
so入参        context=com.didi.sdk.app.DIDIApplicationWithHotPatch@43fe50d, j2=1714664877039, str=null, bArr= {} // byte[]  太长不贴了
APK 链接   &lt;a href=&quot;https://www.wandoujia.com/apps/285799&quot;&gt;https://www.wandoujia.com/apps/285799&lt;/a&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/622</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/622</guid><pubDate>Fri, 03 May 2024 04:48:56 GMT</pubDate><author>GC-666</author></item><item><title>dump模拟执行时候发现的错误</title><description>&lt;p&gt;[14:04:06 202] Trace Instruction [Arm64Svc     0x000210] [012300d4] 0xfffe0210: &quot;svc #0x118&quot;[14:04:06 203]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:369) - handleInterrupt intno=2, NR=-130544, svcNumber=0x118, PC=unidbg@0xfffe0214, LR=unidbg@0x7ab3d191d4, syscall=null
com.github.unidbg.arm.backend.BackendException
at com.github.unidbg.linux.android.dvm.DalvikVM64$25.handle(DalvikVM64.java:380)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:118)
at com.github.unidbg.arm.backend.Unicorn2Backend$11.hook(Unicorn2Backend.java:343)
at com.github.unidbg.arm.backend.unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:109)
at com.github.unidbg.arm.backend.unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.unicorn.Unicorn.emu_start(Unicorn.java:312)
at com.github.unidbg.arm.backend.Unicorn2Backend.emu_start(Unicorn2Backend.java:380)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:386)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
这个什么样的错误，是调用系统号0x118没有么，，我查也对不上呀，，求帮忙解答下&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/620</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/620</guid><pubDate>Wed, 24 Apr 2024 06:07:50 GMT</pubDate><author>gtict112</author></item><item><title>最新版代码32位好像不支持Unicorn2Factory？</title><description>&lt;p&gt;仅初始化时就会报错，64位正常，切到一个较老的版本时又能用了 ，出错在enableVFP()这一步,跟so应该无关，因为仅在执行emulator的初始化就会开始报错
emulator = AndroidEmulatorBuilder.for32Bit()
.setProcessName(&quot;com.dragon.read&quot;)
.addBackendFactory(new Unicorn2Factory(false))
//                .addBackendFactory(new DynarmicFactory(false))
.setRootDir(rootDir)
.build();&lt;/p&gt;
&lt;p&gt;Exception in thread &quot;main&quot; com.github.unidbg.arm.backend.BackendException: unicorn.UnicornException: Invalid argument (UC_ERR_ARG)
at com.github.unidbg.arm.backend.Unicorn2Backend.reg_write(Unicorn2Backend.java:111)
at com.github.unidbg.arm.backend.Unicorn2Backend.enableVFP(Unicorn2Backend.java:53)
at com.github.unidbg.arm.AbstractARMEmulator.&lt;init&gt;(AbstractARMEmulator.java:84)
at com.github.unidbg.linux.android.AndroidARMEmulator.&lt;init&gt;(AndroidARMEmulator.java:35)
at com.github.unidbg.linux.android.AndroidEmulatorBuilder.build(AndroidEmulatorBuilder.java:22)
at com.github.unidbg.linux.android.AndroidEmulatorBuilder.build(AndroidEmulatorBuilder.java:6)
at com.ss.fanqie.FanqieRead_32.&lt;init&gt;(FanqieRead_32.java:48)
at com.ss.fanqie.FanqieRead_32.main(FanqieRead_32.java:265)
Caused by: unicorn.UnicornException: Invalid argument (UC_ERR_ARG)&lt;/init&gt;&lt;/init&gt;&lt;/init&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/619</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/619</guid><pubDate>Thu, 11 Apr 2024 01:40:36 GMT</pubDate><author>hjb1991</author></item><item><title>libopenjdk.so</title><description>&lt;p&gt;&lt;a href=&quot;http://xn--libopenjdk-sj2pq52ri6f.so/&quot;&gt;不支持libopenjdk.so&lt;/a&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/617</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/617</guid><pubDate>Wed, 27 Mar 2024 22:50:21 GMT</pubDate><author>fxh615</author></item><item><title>大佬们，看看 这种怎么补啊 &quot;android/os/Parcel-&gt;setDataPosition(I)V&quot;</title><description>&lt;p&gt;case &quot;com/aspire/ca/core/UserStorageItem-&amp;gt;setSessionKey(Ljava/lang/String;)V&quot;: {
return;
}
case &quot;com/aspire/ca/core/UserStorageItem-&amp;gt;writeToParcel(Landroid/os/Parcel;I)V&quot;: {
return;
}&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/616</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/616</guid><pubDate>Thu, 21 Mar 2024 08:41:41 GMT</pubDate><author>wj420521</author></item><item><title>有没有大佬知道java/lang/String-&gt;toCharArray()[C该怎么补啊？求解</title><description>&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/33400938/8cf9f33a-0dc6-4427-a22b-b37df72ae8eb&quot; alt=&quot;微信图片_20240320202523&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/614</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/614</guid><pubDate>Wed, 20 Mar 2024 12:26:23 GMT</pubDate><author>Elliot0215</author></item><item><title>Dynarmic link in README is dead</title><description>&lt;p&gt;Nintendo took down dynarmic as it aided in Switch game piracy because it was used in a Switch emulator (or sonething like that) and so the link in the README is dead now. You may want to remove it.&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/613</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/613</guid><pubDate>Mon, 18 Mar 2024 07:13:06 GMT</pubDate><author>niansa</author></item><item><title>执行报错：Read memory failed和 Invalid memory read (UC_ERR_READ_UNMAPPED)</title><description>&lt;p&gt;完整代码：
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/33949789/7cd13da2-d7db-4486-8ba6-d82b0671da3e&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
&lt;p&gt;报错是：
[10:28:27 020]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:67) - Read memory failed: address=0x0, size=4, value=0x0, PC=RX@0x400bec90[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x18c90, LR=RX@0x400021a5[&lt;a href=&quot;http://libocstool.so/&quot;&gt;libocstool.so&lt;/a&gt;]0x21a5
[10:28:27 022]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:417) - emulate RX@0x400020b9[&lt;a href=&quot;http://libocstool.so/&quot;&gt;libocstool.so&lt;/a&gt;]0x20b9 exception sp=unidbg@0xbffff6d8, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=5ms @ Runnable|Function32 address=0x400020b9, arguments=[unidbg@0xfffe12a0, 370404877, 1800659519, 1691538257]&lt;/p&gt;
&lt;p&gt;看起来是某个内存地址对应方法没有实现，我要怎么修改代码或者调试呢&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/612</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/612</guid><pubDate>Sat, 16 Mar 2024 02:30:24 GMT</pubDate><author>WandererLu</author></item><item><title>ExceptionRaised[dynarmic.cpp-&gt;ExceptionRaised:231]</title><description>&lt;p&gt;unidbg使用自带hookzz出现异常，这是怎么回事啊
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/48487393/5f2578cf-be85-4308-b462-b57f65e4eedf&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/611</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/611</guid><pubDate>Fri, 15 Mar 2024 05:31:42 GMT</pubDate><author>hackdoors</author></item><item><title>调用so的方法后怎么释放内存？我看这些都是GCRoot，调用次数多了直接内存吃满了</title><description>&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/154869466/e689e3f0-620b-4e12-ad4d-6e0d475004d1&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/154869466/1081907f-bbca-44ad-b28b-079691a00fea&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/154869466/6189932b-3065-4da4-89b8-30f1a14e74fd&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
调用emulator.close()也不能释放jni的内存，求帮忙解答&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/610</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/610</guid><pubDate>Thu, 07 Mar 2024 05:54:19 GMT</pubDate><author>dragon537</author></item><item><title>so 里面ftruncate方法时会报错</title><description>&lt;p&gt;有什么解决办法吗&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/609</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/609</guid><pubDate>Mon, 04 Mar 2024 09:04:56 GMT</pubDate><author>q601180252</author></item><item><title>这个环境怎么补啊，android/content/pm/Signature-&gt;toChars()[C</title><description>&lt;p&gt;这个环境怎么补啊，android/content/pm/Signature-&amp;gt;toChars()[C  这个环境怎么补啊，好像没有返回chatarray的对象，我按照下面的方式补会报错。
&lt;code&gt;[10:35:53 743]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:371) - handleInterrupt intno=2, NR=-128144, svcNumber=0x1ae, PC=unidbg@0xfffe0b74, LR=RX@0x4040792c[libEncoder.so]0x792c, syscall=null&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Override
public DvmObject&amp;lt;?&amp;gt; callObjectMethodV(BaseVM vm, DvmObject&amp;lt;?&amp;gt; dvmObject, String signature, VaList vaList) {
    if (&quot;android/content/Context-&amp;gt;getBaseContext()Landroid/content/Context;&quot;.equals(signature)) {
        return dvmObject;
    } else if (&quot;android/content/Context-&amp;gt;getPackageName()Ljava/lang/String;&quot;.equals(signature)) {
        return new StringObject(vm, &quot;xxx&quot;);
    } else if (&quot;android/content/pm/Signature-&amp;gt;toChars()[C&quot;.equals(signature)) {
        String signatureStr = &quot;30820xxx30&quot;;
        char[] chars = signatureStr.toCharArray();
        DvmObject&amp;lt;?&amp;gt;[] charObjects = new DvmObject&amp;lt;?&amp;gt;[chars.length];
        for (int i = 0; i &amp;lt; chars.length; i++) {
            charObjects[i] = DvmInteger.valueOf(vm, chars[i]);
        }
        return new ArrayObject(charObjects);
    }
    return super.callObjectMethodV(vm, dvmObject, signature, vaList);
}
&lt;/code&gt;&lt;/pre&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/606</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/606</guid><pubDate>Fri, 01 Mar 2024 03:09:25 GMT</pubDate><author>van416</author></item><item><title>Can I changed emulator info?</title><description>&lt;p&gt;Like the title says, is there a way to change the device info of emulator, instead of using the default one? Thank you.&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/605</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/605</guid><pubDate>Thu, 29 Feb 2024 15:53:55 GMT</pubDate><author>csisoap</author></item><item><title>执行错误</title><description>&lt;p&gt;`
package com.libre;&lt;/p&gt;
&lt;p&gt;import com.abbottdiabetescare.flashglucose.sensorabstractionservice.dataprocessing.Out;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.github.unidbg.AndroidEmulator;
import com.github.unidbg.Emulator;
import com.github.unidbg.Module;
import com.github.unidbg.arm.backend.Backend;
import com.github.unidbg.arm.backend.CodeHook;
import com.github.unidbg.arm.backend.UnHook;
import com.github.unidbg.arm.backend.Unicorn2Factory;
import com.github.unidbg.debugger.BreakPointCallback;
import com.github.unidbg.debugger.Debugger;
import com.github.unidbg.debugger.DebuggerType;
import com.github.unidbg.file.FileResult;
import com.github.unidbg.file.IOResolver;
import com.github.unidbg.file.linux.AndroidFileIO;
import com.github.unidbg.linux.android.AndroidEmulatorBuilder;
import com.github.unidbg.linux.android.AndroidResolver;
import com.github.unidbg.linux.android.dvm.*;
import com.github.unidbg.linux.android.dvm.array.ByteArray;
import com.github.unidbg.linux.android.dvm.jni.ProxyDvmObject;
import com.github.unidbg.linux.file.ByteArrayFileIO;
import com.github.unidbg.linux.file.SimpleFileIO;
import com.github.unidbg.memory.Memory;
import com.github.unidbg.memory.MemoryBlock;
import com.github.unidbg.pointer.UnidbgPointer;
import com.github.unidbg.spi.LibraryFile;
import com.github.unidbg.utils.Inspector;
import com.github.unidbg.virtualmodule.android.AndroidModule;
import com.github.unidbg.virtualmodule.android.JniGraphics;
import com.outshineiot.bubble.xabet.AlgorithmResults;
import com.outshineiot.bubble.xabet.RequltData;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.commons.io.IOUtils;
import unicorn.Arm64Const;
import unicorn.ArmConst;
import unicorn.UnicornConst;&lt;/p&gt;
&lt;p&gt;import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.zip.DataFormatException;
import java.util.zip.Inflater;&lt;/p&gt;
&lt;p&gt;public class runlibre5 extends AbstractJni {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;static runlibre5 runLibre3Obj;


public static void init(String path) {
    if (runLibre3Obj == null) {
        try {
            String apkFilePath = path + &quot;libre3/libreoop.apk&quot;;
            apkFile2 = new File(apkFilePath);
            runLibre3Obj = new runlibre5(apkFilePath);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

public static void clear() {
    if (runLibre3Obj != null) {
        try {
            runLibre3Obj.destroy();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    runLibre3Obj = null;
    System.gc();
}


private final AndroidEmulator emulator;
private final VM vm;
private final Module module;

private static File apkFile2;

private final DvmClass cNativeClass;

public runlibre5(String apkFilePath) throws DecoderException, IOException {
    System.out.println(&quot;runlibre4 == =====&quot;);
    emulator = AndroidEmulatorBuilder.for64Bit()
            .setProcessName(&quot;com.bubble.minalibre2ca&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//                .addBackendFactory(new DynarmicFactory((true)))
//                 .addBackendFactory(new HypervisorFactory(true))
//                .addBackendFactory(new Unicorn2Factory(true))
.build(); // 创建模拟器实例，要模拟32位或者64位，在这里区分
System.out.println(&quot;backend == =&quot; + emulator.getBackend());
final Memory memory = emulator.getMemory();
// 设置系统类库解析
memory.setLibraryResolver(new AndroidResolver(23));&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    vm = emulator.createDalvikVM(new File(apkFilePath)); // 创建Android虚拟机
    vm.setJni(this);
    vm.setVerbose(true); // 设置是否打印Jni调用细节
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;////        vm.set
//        emulator.getSyscallHandler().addIOResolver(this);
//        DalvikModule dm = vm.loadLibrary(&quot;g&quot;, true); // 加载libttEncrypt.so到unicorn虚拟内存，加载成功以后会默认调用init_array等函数
//        module = dm.getModule(); // 加载好的libttEncrypt.so对应为一个模块
//        dm.callJNI_OnLoad(emulator);
//&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    DalvikModule dm = vm.loadLibrary(&quot;g&quot;, true);
    module = dm.getModule();

    // 执行JNIOnLoad（如果有的话）
    dm.callJNI_OnLoad(emulator);
    String classPath = &quot;tk/glucodata/Natives&quot;;

    cNativeClass = vm.resolveClass(classPath);


}

private void destroy() throws IOException {
    emulator.close();
}

public DvmObject&amp;lt;?&amp;gt; allocObject(BaseVM vm, DvmClass dvmClass, String signature) {
    System.out.println(&quot;allocObject111111=====&quot; + signature);
    if (&quot;com/outshineiot/bubble/xabet/AlgorithmResults-&amp;gt;allocObject&quot;.equals(signature)) {
        return dvmClass.newObject(new AlgorithmResults());
    }
    throw new UnsupportedOperationException(signature);
}

public int getIntField(BaseVM vm, DvmObject&amp;lt;?&amp;gt; dvmObject, String signature) {
    System.out.println(&quot;getIntField=====&quot; + signature);
    if (&quot;android/content/pm/PackageInfo-&amp;gt;versionCode:I&quot;.equals(signature)) {
        return (int) vm.getVersionCode();
    }
    throw new UnsupportedOperationException(signature);
}

@Override
public DvmObject&amp;lt;?&amp;gt; newObject(BaseVM vm, DvmClass dvmClass, String signature, VarArg varArg) {
    System.out.println(&quot;newObject&quot;);
    if (&quot;com/github/unidbg/android/AndroidTest-&amp;gt;&amp;lt;init&amp;gt;()V&quot;.equals(signature)) {
        return dvmClass.newObject(null);
    }
    return super.newObject(vm, dvmClass, signature, varArg);
}


public static void main(String[] args) throws IOException, DecoderException, Exception {


    File file = new File(&quot;&quot;);
    String path = file.getCanonicalPath();
    System.out.println(&quot;path===&quot; + path);
    String apkFilePath = path + &quot;/libre3/libreoop.apk&quot;;
    apkFile2 = new File(apkFilePath);

    runlibre5 runLibre3Obj = new runlibre5(apkFilePath);
    runLibre3Obj.init();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        runLibre3Obj.initNFC();
runLibre3Obj.destroy();
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// /data/user/0/com.bubble.minalibre2ca/files before setfilesdir country=CN nativeDir=/data/app/com.bubble.minalibre2ca-El4SZwJUYPPCboNjatnzAQ==/lib/arm64
public void init() {
    LibraryFile file = vm.findLibrary(&quot;libg.so&quot;);
    String fileName = file.getPath().replace(&quot;/libg.so&quot;, &quot;&quot;);
    System.out.println(fileName);

    String s1 = &quot;/data/user/0/com.bubble.minalibre2ca-1/files&quot;;
    String s2 = &quot;CN&quot;;
    String s3 = fileName;
    int processScan = cNativeClass.callStaticJniMethodInt(emulator, &quot;setfilesdir(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I&quot;, s1, s2, s3);
    cNativeClass.callStaticJniMethod(emulator, &quot;startsensors()V&quot;);
    System.out.println(JSON.toJSONString(processScan));
    boolean flag = cNativeClass.callStaticJniMethodBoolean(emulator, &quot;abbottinit()Z&quot;);
}

public void initNFC() {
    AlgorithmResults algorithmResults = new AlgorithmResults();
    byte[] uid = UtilBlue.hexStringToBytes(&quot;5751b50200a407e0&quot;);
    byte[] info = UtilBlue.hexStringToBytes(&quot;9d0830017709&quot;);
    byte[] data = UtilBlue.hexStringToBytes(&quot;a665c3bf772138b274313497cfeadf760a2d8b40be8cf226a7b4830a8b7b20d320b4f4d131cd915191b7f1964d4599452363d29375257f95772a93d75e4631365b30fd94b3b64f60a54e06385f7b670047dce9e9e5a9d6f2d85d291b87e85fd16d850a7aa088b55525f73b7103f359510eed4e7aee4f22070fbadee295ba3a8eea701134fd58cc7499879a199d11ceb63f5cfedcf771dd4a6b1dbc98c94e92c53107960f64e2ef9396f48a800f737ea97e6744514c34c5d66ae6a567e4e003f55ed78cc39280ac4c790a22fb78cedd676b10c24d9f2b5831d87a1669b1deb42dfe8d04b986b10e42a0e895b3240102f05851bcabb361a811c67543effd7f2d83b66f99d5daf20bd5de30a800fa3fb050368308d246c00b47a9014d6eeeacd96716bf644282cf62f9a11ddad729536b20910784cd81f38877412913458304c356fe690791536f91571b6cc62e36afc5646307f5791d6abdf4&quot;);
    String mname = &quot;nfcdata([B[B[BLcom/outshineiot/bubble/xabet/RequltData;[B[B[B)Ljava/lang/Object&quot;;
    RequltData out = new RequltData();
    DvmObject&amp;lt;?&amp;gt; out1 = ProxyDvmObject.createObject(vm, out);
    out.sensorStartTime = 0;
    out.currentTime = 326855705;
    DvmObject&amp;lt;?&amp;gt; processScan = cNativeClass.callStaticJniMethodObject(emulator, mname, uid, info, data, out1, null, null, null);
    System.out.println(JSON.toJSONString(processScan));
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;`&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/604</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/604</guid><pubDate>Tue, 27 Feb 2024 09:49:36 GMT</pubDate><author>q601180252</author></item><item><title>unidbg 执行SO里面的一个方法空指针异常</title><description>&lt;p&gt;环境都补充完了，但是执行到一半提示这个错误
java.lang.NullPointerException
at com.github.unidbg.linux.android.dvm.DalvikVM64$159.handle(DalvikVM64.java:2464)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:117)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:236)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethod(DvmClass.java:284)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/603</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/603</guid><pubDate>Wed, 21 Feb 2024 13:55:20 GMT</pubDate><author>zshaxy</author></item><item><title>关于unidbg模拟执行mtguard.so之mt3.0问题</title><description>&lt;p&gt;你好，我在构建mtgsig3.0版本时，遇见main(120)调用时，传递的是IIVTQYOSF$1类型对象数组，在unidbg上模拟参数传递的时候，似乎传递不正确，想咨询下有什么办法可以处理该参数传递？
我在unidbg中如下构建参数：
mytemp变量则是自定义的java类IIVTQYOSF$1
DvmObject&lt;!--?--&gt; dvmObject1 = vm.resolveClass(&quot;com.meituan.android.common.mtguard.wtscore.plugin.sign.core.IIVTQYOSF$1&quot;).newObject(mytemp);
ArrayObject initSo_arg=new ArrayObject(dvmObject1);
DvmObject&lt;!--?--&gt; dvmObject_initSo = ShellBridge.callStaticJniMethodObject(emulator, &quot;main(I[Ljava/lang/Object;)[Ljava/lang/Object;&quot;, 120,initSo_arg);
我在使用frida hook得到的结果如下：
[120] - arg0:com.meituan.android.common.mtguard.wtscore.plugin.sign.core.IIVTQYOSF$1@2a2d510
在unidbg模拟执行时，报如下错误：
TAG Vison ------------------- [call]inti2 -------------------
Find native function Java_com_meituan_android_common_mtguard_ShellBridge_main =&amp;gt; RX@0x40025d48[&lt;a href=&quot;http://libmtguard.so/&quot;&gt;libmtguard.so&lt;/a&gt;]0x25d48
Exception in thread &quot;main&quot; java.lang.NullPointerException
at com.sankuai.MT3.myMeituan3.Funtion2(myMeituan3.java:192)
at com.sankuai.MT3.myMeituan3.main(myMeituan3.java:139)
所以我猜测还是参数没有构造好，不知道各位可否有更好的解决办法？&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/602</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/602</guid><pubDate>Mon, 05 Feb 2024 01:45:47 GMT</pubDate><author>myVison</author></item><item><title>so 加壳了 unidbg 能跑起来吗</title><description>&lt;p&gt;so 加壳了 unidbg 能跑起来吗&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/601</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/601</guid><pubDate>Fri, 02 Feb 2024 01:42:43 GMT</pubDate><author>zapata-ok</author></item><item><title>getIFaceFlags: tun0 这个应该怎么搞</title><description>&lt;p&gt;java.lang.UnsupportedOperationException: getIFaceFlags: tun0
at com.github.unidbg.linux.file.UdpSocket.getIFaceFlags(UdpSocket.java:247)
at com.github.unidbg.linux.file.UdpSocket.ioctl(UdpSocket.java:185)
at com.github.unidbg.linux.ARM64SyscallHandler.ioctl(ARM64SyscallHandler.java:1410)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:156)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:236)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/600</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/600</guid><pubDate>Mon, 29 Jan 2024 14:08:01 GMT</pubDate><author>byxuanmai</author></item><item><title>使用unidbg搞的第一个app就如此艰难,大佬能看下这个问题,快崩溃了, app是加固的</title><description>&lt;p&gt;[17:24:05 089]  WARN [com.github.unidbg.linux.ARM32SyscallHandler] (ARM32SyscallHandler:533) - handleInterrupt intno=2, NR=192, svcNumber=0x0, PC=RWX@0x401af73e, LR=RWX@0x401af72d, syscall=null
java.lang.IllegalStateException: munmap aligned=0x25000, start=0x40001000
at com.github.unidbg.spi.AbstractLoader.munmap(AbstractLoader.java:144)
at com.github.unidbg.linux.AndroidElfLoader.mmap2(AndroidElfLoader.java:735)
at com.github.unidbg.linux.ARM32SyscallHandler.mmap2(ARM32SyscallHandler.java:1840)
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:346)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function32.run(Function32.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:229)
at com.github.unidbg.linux.LinuxInitFunction.call(LinuxInitFunction.java:31)
at com.github.unidbg.linux.LinuxModule.callInitFunction(LinuxModule.java:141)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:180)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:62)
at com.github.unidbg.spi.AbstractLoader.load(AbstractLoader.java:233)
at com.github.unidbg.linux.android.dvm.BaseVM.loadLibrary(BaseVM.java:312)
at com.tianyancha.skyeye.&lt;init&gt;(skyeye.java:36)
at com.tianyancha.skyeye.main(skyeye.java:42)
[17:24:05 093]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4001b6a9[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x1b6a9 exception sp=unidbg@0xbffff6b4, msg=munmap aligned=0x25000, start=0x40001000, offset=7ms
[17:24:05 093]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4000c030, size=1, value=0x0, PC=RX@0x4000c030[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0xc030, LR=unidbg@0xffff0000
[17:24:05 093]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x4000c031[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0xc031 exception sp=unidbg@0xbffff720, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[17:24:05 093]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x40014a0c, size=1, value=0x0, PC=RX@0x40014a0c[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x14a0c, LR=unidbg@0xffff0000
[17:24:05 093]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x40014a0d[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x14a0d exception sp=unidbg@0xbffff720, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[17:24:05 094]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x40019c00, size=1, value=0x0, PC=RX@0x40019c00[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x19c00, LR=unidbg@0xffff0000
[17:24:05 094]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x40019c01[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x19c01 exception sp=unidbg@0xbffff720, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[17:24:05 094]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x4001d364, size=1, value=0x0, PC=@0x4001d364[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x1d364, LR=unidbg@0xffff0000
[17:24:05 094]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate @0x4001d365[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x1d365 exception sp=unidbg@0xbffff720, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[17:24:05 094]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x400232a4, size=1, value=0x0, PC=@0x400232a4[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x232a4, LR=unidbg@0xffff0000
[17:24:05 094]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate @0x400232a5[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x232a5 exception sp=unidbg@0xbffff720, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=0ms
[17:24:05 097]  WARN [com.github.unidbg.arm.AbstractARMEmulator] (AbstractARMEmulator$1:64) - Fetch memory failed: address=0x40005430, size=1, value=0x0, PC=RX@0x40005430[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x5430, LR=unidbg@0xffff0000
[17:24:05 097]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x40005431[&lt;a href=&quot;http://libjmencryptbox.so/&quot;&gt;libJMEncryptBox.so&lt;/a&gt;]0x5431 exception sp=unidbg@0xbffff720, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=1ms
Exception in thread &quot;main&quot; java.lang.IllegalStateException: Illegal JNI version: 0xffffffff
at com.github.unidbg.linux.android.dvm.BaseVM.checkVersion(BaseVM.java:207)
at com.github.unidbg.linux.android.dvm.DalvikModule.callJNI_OnLoad(DalvikModule.java:39)
at com.tianyancha.skyeye.&lt;init&gt;(skyeye.java:37)
at com.tianyancha.skyeye.main(skyeye.java:42)&lt;/init&gt;&lt;/init&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/599</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/599</guid><pubDate>Mon, 22 Jan 2024 09:24:18 GMT</pubDate><author>dh15178076212</author></item><item><title>ARM64SyscallHandler -- handleInterrupt intno=2, NR=29, svcNumber=0x0, PC=RX@0x401dab0c[libc.so]0x6ab0c, LR=RX@0x401e424c[libc.so]0x7424c, syscall=null</title><description>&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/30782776/92b7524b-101e-492b-ab33-55cecae28d1c&quot; alt=&quot;微信截图_20240117173920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
请问各位大佬，这是啥错误呀？？&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/597</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/597</guid><pubDate>Mon, 15 Jan 2024 13:24:52 GMT</pubDate><author>hmlyn</author></item><item><title>大神 怎么补反射啊</title><description>&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/75924715/596cbaa6-d7e3-42fc-a216-189c63f1c6b7&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
这个环境怎么补啊  补反射&lt;/p&gt;
&lt;p&gt;NIEnv-&amp;gt;GetStaticMethodID(com/msec/X3.r1(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;) =&amp;gt; 0x9f53ec17 was called from RX@0x400486a8[&lt;a href=&quot;http://libmsec.so/&quot;&gt;libmsec.so&lt;/a&gt;]0x486a8
JNIEnv-&amp;gt;ToReflectedMethod(java/lang/Class, &quot;getDeclaredMethod&quot;, not static) was called from RX@0x400594d8[&lt;a href=&quot;http://libmsec.so/&quot;&gt;libmsec.so&lt;/a&gt;]0x594d8
[14:02:02 184]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:399) - handleInterrupt intno=2, NR=-130848, svcNumber=0x105, PC=unidbg@0xfffe00e4, LR=RX@0x400594d8[&lt;a href=&quot;http://libmsec.so/&quot;&gt;libmsec.so&lt;/a&gt;]0x594d8, syscall=null
java.lang.UnsupportedOperationException: java/lang/Class-&amp;gt;getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
at com.github.unidbg.linux.android.dvm.AbstractJni.toReflectedMethod(AbstractJni.java:1074)
at com.github.unidbg.linux.android.dvm.AbstractJni.toReflectedMethod(AbstractJni.java:1069)
at com.github.unidbg.linux.android.dvm.DvmMethod.toReflectedMethod(DvmMethod.java:244)
at com.github.unidbg.linux.android.dvm.DalvikVM64$6.handle(DalvikVM64.java:128)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/596</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/596</guid><pubDate>Thu, 11 Jan 2024 06:03:27 GMT</pubDate><author>userFund</author></item><item><title>加载JNI_OnLoad后找不指定方法</title><description>&lt;p&gt;import com.github.unidbg.AndroidEmulator;
import com.github.unidbg.linux.android.AndroidEmulatorBuilder;
import com.github.unidbg.linux.android.AndroidResolver;
import com.github.unidbg.linux.android.dvm.DalvikModule;
import com.github.unidbg.linux.android.dvm.DvmClass;
import com.github.unidbg.linux.android.dvm.VM;
import com.github.unidbg.linux.android.dvm.jni.ProxyClassFactory;
import com.github.unidbg.memory.Memory;
import java.io.File;
import java.io.IOException;&lt;/p&gt;
&lt;p&gt;public class shipin {
private final AndroidEmulator emulator;
private final DvmClass hlsUtil;
private final VM vm;
public shipin() {
emulator = AndroidEmulatorBuilder.for32Bit().setProcessName(&quot;sonice.pro.nice&quot;).build();
Memory memory = emulator.getMemory();
memory.setLibraryResolver(new AndroidResolver(23));
vm = emulator.createDalvikVM();
vm.setDvmClassFactory(new ProxyClassFactory());
vm.setVerbose(true);
DalvikModule dm = vm.loadLibrary(new File(&quot;unidbg-android/src/test/resources/example_binaries/armeabi-v7a/libpp_hls.so&quot;), false);
hlsUtil = vm.resolveClass(&quot;com/pp/hls&quot;);
dm.callJNI_OnLoad(emulator);
}
public void destroy() throws IOException {
emulator.close();
}
public int load() {
String load = &quot;load(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String)I&quot;;
int ret=hlsUtil.callJniMethodInt(emulator, load, &quot;1&quot;, &quot;1&quot;, &quot;1&quot;, &quot;1&quot;, &quot;1&quot;, &quot;1&quot;, &quot;1&quot; );
return ret;
}
public static void main(String[] args) throws Exception {
shipin Util = new shipin();
Util.load();
}&lt;/p&gt;
&lt;p&gt;}
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/51832064/a6f37d4c-5017-4bad-84e7-b74f744a4875&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/51832064/3c47513a-a848-485e-8ea3-ca0d8b97e867&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/zhkl0228/unidbg/files/13804316/libpp_hls.zip&quot;&gt;libpp_hls.zip&lt;/a&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/594</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/594</guid><pubDate>Mon, 01 Jan 2024 11:18:25 GMT</pubDate><author>fdsa123q</author></item><item><title>请求支持套嵌调用</title><description>&lt;p&gt;我遇到了一个类似于 #432 的问题，但是暂时没有办法解决&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/593</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/593</guid><pubDate>Tue, 26 Dec 2023 03:43:54 GMT</pubDate><author>MCSQNXA</author></item><item><title>hook_add_new bug</title><description>&lt;p&gt;emulator.getBackend().hook_add_new(new InterruptHook() {
@Override
public void hook(Backend backend, int intno, int swi, Object user) {
int syscall=backend.reg_read(Arm64Const.UC_ARM64_REG_W8).intValue();
if(syscall==215)
{&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                long address=backend.reg_read(Arm64Const.UC_ARM64_REG_X0).longValue();
                long len=backend.reg_read(Arm64Const.UC_ARM64_REG_X1).longValue();
                System.out.println(&quot; hook_add_new :  &quot;+intno+&quot;    &quot;+swi+&quot;　address: &quot;+Long.toHexString(address)+&quot; len:　&quot;+Long.toHexString(len));
            }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;} 寄存器X0 取值为0 不正确&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/591</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/591</guid><pubDate>Fri, 22 Dec 2023 01:19:33 GMT</pubDate><author>tianxingsky</author></item><item><title>模拟执行libjiagu.so com.github.unidbg.arm.backend.BackendException: dvmObject=android.os.IServiceManager@2df32bf7, dvmClass=class android/os/IServiceM...</title><description>&lt;p&gt;[14:43:29 210]  INFO [com.github.unidbg.linux.android.ArmLD64] (ArmLD64:307) - dlopen failed: libjiagu_a64.so
[14:43:29 211]  INFO [com.github.unidbg.linux.android.ArmLD64] (ArmLD64:307) - dlopen failed: &lt;a href=&quot;http://libart.so/&quot;&gt;libart.so&lt;/a&gt;
JNIEnv-&amp;gt;FindClass(com/stub/StubApp) was called from RW@0x401279ac[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x1279ac
JNIEnv-&amp;gt;GetStaticMethodID(com/stub/StubApp.getAppContext()Landroid/content/Context;) =&amp;gt; 0xdb5f413a was called from RW@0x40127a04[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x127a04
JNIEnv-&amp;gt;CallStaticObjectMethodV(class com/stub/StubApp, getAppContext() =&amp;gt; android.app.Application@de3a06f) was called from RW@0x40122600[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x122600
JNIEnv-&amp;gt;FindClass(com/android/internal/os/BinderInternal) was called from RW@0x401294a8[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x1294a8
JNIEnv-&amp;gt;GetStaticMethodID(com/android/internal/os/BinderInternal.getContextObject()Landroid/os/IBinder;) =&amp;gt; 0xe5f49f7f was called from RW@0x40129510[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x129510
JNIEnv-&amp;gt;CallStaticObjectMethodV(class com/android/internal/os/BinderInternal, getContextObject() =&amp;gt; android.os.IBinder@2bea5ab4) was called from RW@0x40122600[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x122600
JNIEnv-&amp;gt;FindClass(android/os/ServiceManagerNative) was called from RW@0x401295a0[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x1295a0
JNIEnv-&amp;gt;GetStaticMethodID(android/os/ServiceManagerNative.asInterface(Landroid/os/IBinder;)Landroid/os/IServiceManager;) =&amp;gt; 0x7b57d1ef was called from RW@0x40129608[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x129608
JNIEnv-&amp;gt;CallStaticObjectMethodV(class android/os/ServiceManagerNative, asInterface(android.os.IBinder@2bea5ab4) =&amp;gt; android.os.IServiceManager@2df32bf7) was called from RW@0x40122600[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x122600
JNIEnv-&amp;gt;FindClass(android/os/ServiceManagerProxy) was called from RW@0x401296a4[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x1296a4
JNIEnv-&amp;gt;GetMethodID(android/os/ServiceManagerProxy.getService(Ljava/lang/String;)Landroid/os/IBinder;) =&amp;gt; 0xd4984bb9 was called from RW@0x4012970c[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x12970c
JNIEnv-&amp;gt;NewStringUTF(&quot;package&quot;) was called from RW@0x40129750[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x129750
JNIEnv-&amp;gt;GetStringUtfChars(&quot;package&quot;) was called from RW@0x401297ac[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x1297ac
[14:43:29 220]  WARN [com.github.unidbg.linux.ARM64SyscallHandler] (ARM64SyscallHandler:399) - handleInterrupt intno=2, NR=-130432, svcNumber=0x11f, PC=unidbg@0xfffe0284, LR=RW@0x40122698[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x122698, syscall=null
com.github.unidbg.arm.backend.BackendException: dvmObject=android.os.IServiceManager@2df32bf7, dvmClass=class android/os/IServiceManager, jmethodID=unidbg@0xffffffffd4984bb9
at com.github.unidbg.linux.android.dvm.DalvikVM64$32.handle(DalvikVM64.java:527)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:118)
at com.github.unidbg.arm.backend.InterruptHookNotifier.notifyCallSVC(InterruptHookNotifier.java:14)
at com.github.unidbg.arm.backend.dynarmic.DynarmicBackend64.callSVC(DynarmicBackend64.java:32)
at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Native Method)
at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Dynarmic.java:78)
at com.github.unidbg.arm.backend.DynarmicBackend.emu_start(DynarmicBackend.java:82)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:175)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:99)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:262)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.LinuxModule.callFunction(LinuxModule.java:262)
at com.github.unidbg.linux.LinuxSymbol.call(LinuxSymbol.java:27)
at com.github.unidbg.linux.android.dvm.DalvikModule.callJNI_OnLoad(DalvikModule.java:33)
at com.stub.StubApp.&lt;init&gt;(StubApp.java:39)
at com.stub.StubApp.main(StubApp.java:104)
[14:43:29 221]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x40009b38[&lt;a href=&quot;http://libjiagu.so/&quot;&gt;libjiagu.so&lt;/a&gt;]0x9b38 exception sp=unidbg@0xbfffd850, msg=dvmObject=android.os.IServiceManager@2df32bf7, dvmClass=class android/os/IServiceManager, jmethodID=unidbg@0xffffffffd4984bb9, offset=255ms
Exception in thread &quot;main&quot; java.lang.IllegalStateException: Illegal JNI version: 0xffffffff
at com.github.unidbg.linux.android.dvm.BaseVM.checkVersion(BaseVM.java:210)
at com.github.unidbg.linux.android.dvm.DalvikModule.callJNI_OnLoad(DalvikModule.java:39)
at com.stub.StubApp.&lt;init&gt;(StubApp.java:39)
at com.stub.StubApp.main(StubApp.java:104)
dynarmic: macOS MachHandler: Failed to receive mach message. error: 0x10004006 ((ipc/rcv) port changed)&lt;/init&gt;&lt;/init&gt;&lt;/p&gt;
&lt;p&gt;Process finished with exit code 1
大佬帮我看看是需要补环境还是unidbg不支持这个getService方法 这个方法我用安卓去写 机子上可以运行不崩溃&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/589</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/589</guid><pubDate>Wed, 20 Dec 2023 06:55:27 GMT</pubDate><author>chaodchen</author></item><item><title>DnsProxyDaemon handle command =&gt; gethostbyname 0 localhost 2 怎么实现</title><description>&lt;p&gt;DnsProxyDaemon 的 handle
command = &quot;gethostbyname 0 localhost 2&quot;
怎么实现&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/586</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/586</guid><pubDate>Sun, 17 Dec 2023 15:05:33 GMT</pubDate><author>BadDeveloper2022</author></item><item><title>Exception in thread &quot;main&quot; java.lang.ArithmeticException: / by zero</title><description>&lt;p&gt;Exception in thread &quot;main&quot; java.lang.ArithmeticException: / by zero
at net.fornwall.jelf.ElfDynamicStructure.&lt;init&gt;(ElfDynamicStructure.java:315)
at net.fornwall.jelf.ElfSegment$3.computeValue(ElfSegment.java:153)
at net.fornwall.jelf.ElfSegment$3.computeValue(ElfSegment.java:150)
at net.fornwall.jelf.MemoizedObject.getValue(MemoizedObject.java:21)
at net.fornwall.jelf.ElfSegment.getDynamicStructure(ElfSegment.java:252)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:427)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:470)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:470)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:470)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:470)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:174)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:62)
at com.github.unidbg.spi.AbstractLoader.load(AbstractLoader.java:237)
at com.github.unidbg.linux.android.dvm.BaseVM.loadLibrary(BaseVM.java:315)&lt;/init&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/585</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/585</guid><pubDate>Tue, 12 Dec 2023 08:40:59 GMT</pubDate><author>funaihui</author></item><item><title>MemoryRead8[dynarmic.cpp-&gt;MemoryRead8:298]: vaddr=0000000040014000</title><description>&lt;p&gt;&lt;strong&gt;Message&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MemoryRead8[dynarmic.cpp-&amp;gt;MemoryRead8:298]: vaddr=0000000040014000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;File&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/zhkl0228/unidbg/files/13637678/unidbg-android.zip&quot;&gt;unidbg-android.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;`
package oicq.wlogin_sdk.pow;&lt;/p&gt;
&lt;p&gt;import com.github.unidbg.AbstractEmulator;
import com.github.unidbg.AndroidEmulator;
import com.github.unidbg.LibraryResolver;
import com.github.unidbg.Module;
import com.github.unidbg.arm.backend.DynarmicFactory;
import com.github.unidbg.arm.backend.HypervisorFactory;
import com.github.unidbg.arm.backend.KvmFactory;
import com.github.unidbg.arm.backend.hypervisor.HypervisorBackend64;
import com.github.unidbg.linux.android.AndroidEmulatorBuilder;
import com.github.unidbg.linux.android.AndroidResolver;
import com.github.unidbg.linux.android.dvm.DalvikModule;
import com.github.unidbg.linux.android.dvm.DvmObject;
import com.github.unidbg.linux.android.dvm.VM;
import com.github.unidbg.linux.android.dvm.jni.ProxyClassFactory;
import com.github.unidbg.memory.Memory;
import com.github.unidbg.virtualmodule.android.AndroidModule;
import com.github.unidbg.virtualmodule.android.JniGraphics;
import junit.framework.TestCase;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;&lt;/p&gt;
&lt;p&gt;import java.io.File;
import java.io.IOException;&lt;/p&gt;
&lt;p&gt;public class ClientPow extends TestCase {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private static LibraryResolver createLibraryResolver() {
    return new AndroidResolver(23);
}

private static AndroidEmulator createARMEmulator() {
    return AndroidEmulatorBuilder
            .for64Bit()
            .setProcessName(&quot;com.tencent.mobileqq&quot;)
            .addBackendFactory(new HypervisorFactory(true))
            .addBackendFactory(new DynarmicFactory(true))
            .addBackendFactory(new KvmFactory(true))
            .build();
}

private final AndroidEmulator emulator;
private final VM vm;

private final DvmObject cClientPow;

public ClientPow() {
    emulator = createARMEmulator();
    final Memory memory = emulator.getMemory();
    memory.setLibraryResolver(createLibraryResolver());

    vm = emulator.createDalvikVM();
    vm.setDvmClassFactory(new ProxyClassFactory());
    Module module = new JniGraphics(emulator, vm).register(memory);
    assert module != null;
    new AndroidModule(emulator, vm).register(memory);

    vm.setVerbose(true);
    File file = new File(&quot;src/test/resources/example_binaries/arm64-v8a/libpow.so&quot;);
    DalvikModule dm = vm.loadLibrary(file.canRead() ? file : new File(&quot;unidbg-android/src/test/resources/example_binaries/arm64-v8a/libpow.so&quot;), true);

    dm.callJNI_OnLoad(emulator);

    cClientPow = vm.resolveClass(&quot;oicq/wlogin_sdk/pow/ClientPow&quot;).newObject(null);
}

private void destroy() throws IOException {
    emulator.close();
    System.out.println(&quot;destroy&quot;);
}

public static void main(String[] args) throws Exception {
    Logger.getLogger(AbstractEmulator.class).setLevel(Level.INFO);
    Logger.getLogger(HypervisorBackend64.class).setLevel(Level.INFO);
    final ClientPow test = new ClientPow();

    test.nativeGetPow();

    test.destroy();
}

void nativeGetPow() throws DecoderException {

    byte[] j_bytes = Hex.decodeHex(&quotquot;);
    System.out.println(&quot;-------------------------------------------&quot;);
    System.out.println(&quot;bytes.length:&quot; + j_bytes.length);

    DvmObject&amp;lt;?&amp;gt; j_result = cClientPow.callJniMethodObject(
            emulator,
            &quot;nativeGetPow([B)[B&quot;, // todo !!! 报错
            (Object) j_bytes
    );

    System.out.println(j_result);
    System.out.println(j_result.getValue());
    System.out.println(&quot;-------------------------------------------&quot;);

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
`&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/584</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/584</guid><pubDate>Mon, 11 Dec 2023 15:35:27 GMT</pubDate><author>t08yu</author></item><item><title>补完环境后,调用返回类型为 byte[] 的native方法的返回值为空</title><description>&lt;p&gt;这是我的apk相关资料,不需要登录,可以直接下载文件 : &lt;a href=&quot;https://www.123pan.com/s/i7najv-Y8qjv.html%E6%8F%90%E5%8F%96%E7%A0%81:6666&quot;&gt;https://www.123pan.com/s/i7najv-Y8qjv.html提取码:6666&lt;/a&gt;
该app是一个加固的, so好像也加固了, 麻烦大佬给看下什么问题, 我测试了一个返回字符串类型的native 方法是可以得到结果的,
并且我用 frida 测试 这个 返回 byte[] 的native 方法是可以得到结果的, 谢谢大佬, 我已点 star哈&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/582</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/582</guid><pubDate>Wed, 06 Dec 2023 08:00:38 GMT</pubDate><author>dh15178076212</author></item><item><title>CallObjectMethodA 等函数的支持</title><description>&lt;p&gt;请问作者大大会加上这些 jni的实现吗, 各种 jni call 的A 调用&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/579</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/579</guid><pubDate>Tue, 28 Nov 2023 09:39:49 GMT</pubDate><author>Dormzz</author></item><item><title>大佬，请问一下这应该怎么改</title><description>&lt;p&gt;[10:33:13 939] DEBUG [com.github.unidbg.pointer.UnidbgPointer] (UnidbgPointer:348) - getString pointer=RX@0x4063a629[libqlustre_v++.so]0xfa629, size=17, encoding=UTF-8, ret=/proc/self/status
[10:33:13 940] DEBUG [com.github.unidbg.pointer.UnidbgPointer] (UnidbgPointer:348) - getString pointer=RX@0x4063d0e9[libqlustre_v++.so]0xfd0e9, size=0, encoding=UTF-8, ret=
fopen 1=/proc/self/status
fopen 2=
[10:33:13 940] DEBUG [com.github.unidbg.pointer.UnidbgPointer] (UnidbgPointer:348) - getString pointer=RX@0x4063a629[libqlustre_v++.so]0xfa629, size=17, encoding=UTF-8, ret=/proc/self/status
fopen=, ret=0
[10:33:13 941] DEBUG [com.github.unidbg.pointer.UnidbgPointer] (UnidbgPointer:348) - getString pointer=unidbg@0xbfffeda8, size=0, encoding=UTF-8, ret=
fgets 1=
fgets 2=1024
[10:33:13 941]  WARN [com.github.unidbg.arm.AbstractARM64Emulator] (AbstractARM64Emulator$1:66) - Read memory failed: address=0x58, size=8, value=0x0
[10:33:13 941]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x40637304[libqlustre_v++.so]0xf7304 exception sp=unidbg@0xbfffed00, msg=unicorn.UnicornException: Invalid memory read (UC_ERR_READ_UNMAPPED), offset=242ms
[10:33:13 941] DEBUG [com.github.unidbg.thread.UniThreadDispatcher] (UniThreadDispatcher:177) - End dispatch task=Runnable|Function64 address=0x40637304, arguments=[unidbg@0xfffe1640, 0, 1344199921, 10003], ret=-1
Exception in thread &quot;main&quot; java.lang.NullPointerException: Cannot invoke &quot;com.github.unidbg.linux.android.dvm.DvmObject.getValue()&quot; because the return value of &quot;com.github.unidbg.linux.android.dvm.VM.getObject(int)&quot; is null
at qunar.Qlustre_v.call_cd(Qlustre_v.java:326)
at qunar.Qlustre_v.main(Qlustre_v.java:279)&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/578</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/578</guid><pubDate>Mon, 27 Nov 2023 02:44:53 GMT</pubDate><author>joobih</author></item><item><title>Why deleteLocalRefs() was removed from public?</title><description>&lt;p&gt;Hey @zhkl0228
Do you know, why deleteLocalRefs() was removed from public in this commit? 0c050c793f8c48ccea9593ec30e9d79ed742098a
I&#39;m using unidbg to directly call a symbol of a JNI function. I cannot simply use your API of calling JNI functions, since the symbol name is not conventional with JNI. (The symbol name is &lt;code&gt;_Z8app_signP7_JNIEnvP8_jobjectP8_jstringS4_S4_&lt;/code&gt;). Instead they bind the symbol name with the Java method with help of RegisterNatives() function inside JNI_OnLoad(). But I cannot call JNI_OnLoad() because they put package signature checking logic inside. Therefore, I need to call addLocalObject() manually, as you do in the callJniFunctions, but there is no public API to clear the local objects. Is it intented? What should I do instead to avoid memory leaks of the local objects?&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/577</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/577</guid><pubDate>Fri, 24 Nov 2023 16:56:16 GMT</pubDate><author>EvGem7</author></item><item><title>Linux上不支持Unicorn2Factory和多线程吗</title><description>&lt;p&gt;SpringBoot + Unidbg搭建的服务，用Docker部署在Linux上，在Windows上所有例子都正常，但是在linux上面一调用这个例子服务就挂掉了其它非多线程例子都正常
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/46556817/224f0522-2651-47c9-8c23-e44fe60b15d1&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
&lt;p&gt;日志文件
&lt;a href=&quot;https://github.com/zhkl0228/unidbg/files/13306983/hs_err_pid1.log&quot;&gt;hs_err_pid1.log&lt;/a&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/575</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/575</guid><pubDate>Thu, 09 Nov 2023 10:39:01 GMT</pubDate><author>anylayer</author></item><item><title>UnicornEngine v2.0.0-rc7版本之前的uc_close函数存在内存泄漏</title><description>No description</description><link>https://github.com/zhkl0228/unidbg/issues/574</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/574</guid><pubDate>Wed, 08 Nov 2023 06:42:04 GMT</pubDate><author>dream2333</author></item><item><title>UNIDBG-IOS test fail. NSInvalidArgumentException</title><description>&lt;p&gt;I am trying to run unidbg-ios FrameworkLoaderTest.java but it is failing.
Do you have any ideas ?&lt;/p&gt;
&lt;p&gt;`&lt;/p&gt;
&lt;p&gt;onMsgSend [__NSTimeZone autorelease] LR=RX@0x100ae3830[CoreFoundation]0x53830
onMsgSend [__NSTimeZone retain] LR=RX@0x100ae3fa4[CoreFoundation]0x53fa4
onMsgSend [__NSTimeZone release] LR=RX@0x100a95ad0[CoreFoundation]0x5ad0
onMsgSend [__NSTimeZone release] LR=RX@0x100a95ad0[CoreFoundation]0x5ad0
onMsgSend [__NSDate release] LR=RX@0x100a95ad0[CoreFoundation]0x5ad0
Oct  9 08:51:09 unidbg.local UniDbg[23372] &lt;error&gt;: *** Terminating app due to uncaught exception &#39;NSInvalidArgumentException&#39;, reason: &#39;*** setObjectForKey: object cannot be nil (key: Apn)&#39;
*** First throw call stack:
(0x100b9a950 0x10001c1fc 0x100aa1910 0x102076168 0x102077bd0 0x102079300 0x1002cc014 0x1002cbfd4 0x1002d2938 0x1021db374 0x100577e1c 0x100577d74 0x100575554)
2023-10-09 08:51:09.680 UniDbg[23372:5b4f] *** Terminating app due to uncaught exception &#39;NSInvalidArgumentException&#39;, reason: &#39;*** setObjectForKey: object cannot be nil (key: Apn)&#39;
*** First throw call stack:
(0x100b9a950 0x10001c1fc 0x100aa1910 0x102076168 0x102077bd0 0x102079300 0x1002cc014 0x1002cbfd4 0x1002d2938 0x1021db374 0x100577e1c 0x100577d74 0x100575554)
libc++abi.dylib: terminating with uncaught exception of type NSException
abort
debugger break at: 0xfffe4f64 @ Runnable|BsdThread fun=RX@0x1021db344[libhook.dylib]0x7344, arg=RW@0x101583cd8, stack=RW@0x10160c000&lt;/error&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;x0=0xa x1=0x60000000600 x2=0x1003e8e98 x3=0x10160a648 x4=0x2060 x5=0x10160a700 x6=0x6e x7=0xd20 x8=0x10160a644 x9=0x10160a648 x10=0x2060 x11=0x600 x12=0x0 x13=0x0 x14=0x0
x15=0x1003dfdcb x16=0xfffe4f60 x17=0x100210030 x18=0x0 x19=0x10020ee5c x20=0x1003e9d48 x21=0x10133c238 x22=0x10133c260 x23=0xc x24=0x1011ab702 x25=0x0 x26=0x10133b670 x27=0x10133a020 x28=0x1020d1000 fp=0x10160a6f0
q0=0xffffff0cffffffffffffffffffffffff(NaN, NaN) q1=0xc(1.6815581571897805E-44) q2=0xf0e0d0c0b0a09080706050403020100(7.949928895127363E-275, 3.6919162048650923E-236) q3=0x2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e(3.0342833339878944E-86, 3.0342833339878944E-86) q4=0x0(0.0) q5=0x0(0.0) q6=0x0(0.0) q7=0x0(0.0) q8=0x408f400000000000(1000.0) q9=0x0(0.0) q10=0x0(0.0) q11=0x0(0.0) q12=0x0(0.0) q13=0x0(0.0) q14=0x0(0.0) q15=0x0(0.0)
q16=0xbe7e5c9412b9377c(-1.1310590213831137E-7) q17=0x4793130fd14afa95(6.338576594565102E36) q18=0x316ae0fa8af5115(8.877810736491012E-294) q19=0xac8daa83803ca816(-4.4443818874912514E-94) q20=0x71d364d9efa58466(2.020611585202696E240) q21=0x1e376c0819a4c116(4.067300962178458E-163) q22=0x4ed8aa4a391c0cb3(6.809316794379461E71) q23=0x78a5636f748f82ee(1.4463212813926347E273) q24=0xa4506ceb90befffa(-9.039402494074541E-134) q25=0x0(0.0) q26=0x0(0.0) q27=0x0(0.0) q28=0x0(0.0) q29=0x0(0.0) q30=0x0(0.0) q31=0x0(0.0)
LR=RX@0x1001f0994[libc++abi.dylib]0x994
SP=0x10160a6d0
PC=unidbg@0xfffe4f64[UniDbg]0xfffe4f64
nzcv: N=0, Z=1, C=1, V=0, EL0, use SP_EL0
[abort                         0x000004f60] [e12300d4] 0xfffe4f60: &quot;svc #0x11f&quot;
=&amp;gt; *[abort                        &lt;em&gt;0x000004f64]&lt;/em&gt;[c0035fd6]&lt;em&gt;0xfffe4f64:&lt;/em&gt;&quot;ret&quot;
`&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/572</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/572</guid><pubDate>Mon, 09 Oct 2023 00:55:55 GMT</pubDate><author>syncdly</author></item><item><title>求助 com.github.unidbg.arm.backend.BackendException</title><description>&lt;p&gt;JNIEnv-&amp;gt;FindClass(com/kuaishou/android/security/internal/dispatch/JNICLibrary) was called from RX@0x40046840[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x46840
JNIEnv-&amp;gt;RegisterNatives(com/kuaishou/android/security/internal/dispatch/JNICLibrary, unidbg@0xbffff480, 5) was called from RX@0x40046ba8[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x46ba8
RegisterNative(com/kuaishou/android/security/internal/dispatch/JNICLibrary, doCommandNative(I[Ljava/lang/Object;)Ljava/lang/Object;, RX@0x40041680[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x41680)
RegisterNative(com/kuaishou/android/security/internal/dispatch/JNICLibrary, gDBF()J, RX@0x4004124c[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x4124c)
RegisterNative(com/kuaishou/android/security/internal/dispatch/JNICLibrary, dCaBk(ILjava/lang/String;[BI)V, RX@0x40041320[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x41320)
RegisterNative(com/kuaishou/android/security/internal/dispatch/JNICLibrary, gDGI()[Ljava/lang/String;, RX@0x40040d6c[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x40d6c)
RegisterNative(com/kuaishou/android/security/internal/dispatch/JNICLibrary, gKSF()J, RX@0x400411a8[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x411a8)
JNIEnv-&amp;gt;FindClass(com/kuaishou/android/security/internal/common/ExceptionProxy) was called from RX@0x40046504[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x46504
JNIEnv-&amp;gt;NewGlobalRef(class com/kuaishou/android/security/internal/common/ExceptionProxy) was called from RX@0x400466a4[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x466a4
JNIEnv-&amp;gt;GetArrayLength([java.lang.Integer@4c6e276e, &quot;d7b7d042-d4f2-4012-be60-d97ff2429c17&quot;, java.lang.Integer@4c6e276e, java.lang.Integer@4c6e276e, com.yxcorp.gifshow.App@568bf312, java.lang.Integer@4c6e276e, java.lang.Integer@4c6e276e] =&amp;gt; 7) was called from RX@0x40041770[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x41770
JNIEnv-&amp;gt;GetObjectArrayElement([java.lang.Integer@4c6e276e, &quot;d7b7d042-d4f2-4012-be60-d97ff2429c17&quot;, java.lang.Integer@4c6e276e, java.lang.Integer@4c6e276e, com.yxcorp.gifshow.App@568bf312, java.lang.Integer@4c6e276e, java.lang.Integer@4c6e276e], 4) =&amp;gt; com.yxcorp.gifshow.App@568bf312 was called from RX@0x400418ac[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x418ac
JNIEnv-&amp;gt;GetObjectArrayElement([java.lang.Integer@4c6e276e, &quot;d7b7d042-d4f2-4012-be60-d97ff2429c17&quot;, java.lang.Integer@4c6e276e, java.lang.Integer@4c6e276e, com.yxcorp.gifshow.App@568bf312, java.lang.Integer@4c6e276e, java.lang.Integer@4c6e276e], 1) =&amp;gt; &quot;d7b7d042-d4f2-4012-be60-d97ff2429c17&quot; was called from RX@0x400418c8[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x418c8
JNIEnv-&amp;gt;GetStringUtfChars(&quot;d7b7d042-d4f2-4012-be60-d97ff2429c17&quot;) was called from RX@0x400418e8[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x418e8
JNIEnv-&amp;gt;GetMethodID(com/yxcorp/gifshow/App.getPackageCodePath()Ljava/lang/String;) =&amp;gt; 0x339b9fd9 was called from RX@0x400344c0[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x344c0
JNIEnv-&amp;gt;CallObjectMethodV(com.yxcorp.gifshow.App@568bf312, getPackageCodePath() =&amp;gt; &quot;/data/app/com.smile.gifmaker-q14Fo0PSb77vTIOM1-iEqQ==/base.apk&quot;) was called from RX@0x40032c64[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x32c64
JNIEnv-&amp;gt;GetStringUtfChars(&quot;/data/app/com.smile.gifmaker-q14Fo0PSb77vTIOM1-iEqQ==/base.apk&quot;) was called from RX@0x40034548[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x34548
JNIEnv-&amp;gt;ReleaseStringUTFChars(&quot;/data/app/com.smile.gifmaker-q14Fo0PSb77vTIOM1-iEqQ==/base.apk&quot;) was called from RX@0x400345b8[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x345b8
JNIEnv-&amp;gt;GetMethodID(com/yxcorp/gifshow/App.getPackageName()Ljava/lang/String;) =&amp;gt; 0xd4107a32 was called from RX@0x4003467c[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x3467c
JNIEnv-&amp;gt;CallObjectMethodV(com.yxcorp.gifshow.App@568bf312, getPackageName() =&amp;gt; &quot;com.smile.gifmaker&quot;) was called from RX@0x40032c64[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x32c64
JNIEnv-&amp;gt;GetStringUtfChars(&quot;com.smile.gifmaker&quot;) was called from RX@0x40034704[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x34704
JNIEnv-&amp;gt;ReleaseStringUTFChars(&quot;com.smile.gifmaker&quot;) was called from RX@0x40034774[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x34774
JNIEnv-&amp;gt;GetStaticMethodID(com/kuaishou/android/security/internal/common/ExceptionProxy.getProcessName(Landroid/content/Context;)Ljava/lang/String;) =&amp;gt; 0x7617252c was called from RX@0x40034804[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x34804
JNIEnv-&amp;gt;CallStaticObjectMethodV(class com/kuaishou/android/security/internal/common/ExceptionProxy, getProcessName(com.yxcorp.gifshow.App@568bf312) =&amp;gt; &quot;com.smile.gifmaker&quot;) was called from RX@0x40034988[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x34988
JNIEnv-&amp;gt;GetStringUtfChars(&quot;com.smile.gifmaker&quot;) was called from RX@0x400348bc[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x348bc
JNIEnv-&amp;gt;ReleaseStringUTFChars(&quot;com.smile.gifmaker&quot;) was called from RX@0x400348e4[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x348e4
JNIEnv-&amp;gt;GetMethodID(com/yxcorp/gifshow/App.getAssets()Landroid/content/res/AssetManager;) =&amp;gt; 0xa9e91d7b was called from RX@0x4003ff90[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x3ff90
JNIEnv-&amp;gt;CallObjectMethodV(com.yxcorp.gifshow.App@568bf312, getAssets() =&amp;gt; android.content.res.AssetManager@40e6dfe1) was called from RX@0x40032c64[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x32c64
JNIEnv-&amp;gt;NewGlobalRef(android.content.res.AssetManager@40e6dfe1) was called from RX@0x40040190[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x40190
com.github.unidbg.arm.backend.BackendException
at com.github.unidbg.virtualmodule.android.AndroidModule$11.handle(AndroidModule.java:90)
at com.github.unidbg.linux.ARM64SyscallHandler.hook(ARM64SyscallHandler.java:117)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function64.run(Function64.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARM64Emulator.eFunc(AbstractARM64Emulator.java:236)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.LinuxModule.callFunction(LinuxModule.java:258)
at chen.dome.ksSign.init_native(ksSign.java:89)
at chen.dome.ksSign.main(ksSign.java:64)
debugger break at: 0xfffe1734 @ Function64 address=0x40041680, arguments=[unidbg@0xfffe1640[&lt;a href=&quot;http://libjnigraphics.so/&quot;&gt;libjnigraphics.so&lt;/a&gt;]0x640, 704024720, 10412, 1397616978]&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;x0=0x3ec300f1 x1=0x406b4000 x2=0xb89b x3=0x0 x4=0x402a69c9 x5=0x1 x6=0x40298000 x7=0x0 x8=0xc0 x9=0x40482640 x10=0x6 x11=0x6 x12=0x70000 x13=0x0 x14=0x1
x15=0x40482640 x16=0x40070c40 x17=0xfffe1730 x18=0x40482700 x19=0xbfffeab8 x20=0xbffff718 x21=0xbfffead4 x22=0x3ec300f1 x23=0x406b4000 x24=0xb89b x25=0xbffff0e0 x26=0xbffff708 x27=0x1e1c4 x28=0xb5772b35 fp=0xbfffe730
q0=0xc409340b5c311e319b79a1026b415b0f(-2.529841121036787E-176, -5.811484929043557E19) q1=0x9552701250317170a16ca134714d6c0f(-1.1195127211794123E-147, -5.742904441398347E-206) q2=0x9340b5c311e319b79a1026b415b000f(7.538002250985468E277, 2.4865451267176427E-264) q3=0x455f530d642834d172ba25714b6e0020(4.463197157716666E244, 1.5147561540352447E26) q4=0xaa11cc8f56bb41f1a1b87a218fb28f9a(-3.0628210803976056E-146, -4.850412283972287E-106) q5=0xffffffff(NaN) q6=0x2eef0(2.6938561678180283E-40) q7=0x1f100000000000001f1(2.456E-321, 2.456E-321) q8=0x0(0.0) q9=0x0(0.0) q10=0x0(0.0) q11=0x0(0.0) q12=0x0(0.0) q13=0x0(0.0) q14=0x0(0.0) q15=0x0(0.0)
q16=0x51f100000000000041f1(8.3403E-320, 1.0364E-319) q17=0x0(0.0) q18=0x51f100000000000041f1(8.3403E-320, 1.0364E-319) q19=0x0(0.0) q20=0x0(0.0) q21=0x0(0.0) q22=0x0(0.0) q23=0x0(0.0) q24=0x3170(1.7734833364494885E-41) q25=0x0(0.0) q26=0xffffffffffffffff(NaN) q27=0x0(0.0) q28=0x0(0.0) q29=0x0(0.0) q30=0x0(0.0) q31=0x0(0.0)
LR=RX@0x40038c4c[&lt;a href=&quot;http://libkwsgmain.so/&quot;&gt;libkwsgmain.so&lt;/a&gt;]0x38c4c
SP=0xbfffded0
PC=unidbg@0xfffe1734[&lt;a href=&quot;http://libjnigraphics.so/&quot;&gt;libjnigraphics.so&lt;/a&gt;]0x734
nzcv: N=1, Z=0, C=0, V=0, EL0, use SP_EL0
start + 0x734
=&amp;gt; *[Arm64Svc         &lt;em&gt;0x001734]&lt;/em&gt;[c0035fd6]&lt;em&gt;0xfffe1734:&lt;/em&gt;&quot;ret&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/571</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/571</guid><pubDate>Thu, 28 Sep 2023 01:27:00 GMT</pubDate><author>GC-666</author></item><item><title>报错 Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)</title><description>&lt;p&gt;`package com.bangcle.comapiprotect;&lt;/p&gt;
&lt;p&gt;import com.github.unidbg.AndroidEmulator;
import com.github.unidbg.Module;
import com.github.unidbg.linux.android.AndroidEmulatorBuilder;
import com.github.unidbg.linux.android.AndroidResolver;
import com.github.unidbg.linux.android.dvm.*;
import com.github.unidbg.memory.Memory;&lt;/p&gt;
&lt;p&gt;import java.io.File;
import java.util.ArrayList;
import java.util.List;&lt;/p&gt;
&lt;p&gt;public class CheckCodeUtil extends AbstractJni {
private final AndroidEmulator emulator;
private final VM vm;
private final Module module;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static String pkgName = &quot;com.timanetworks.android.frame.audisuper.release&quot;;
public static String apkPath = &quot;unidbg-android/src/test/resources/aodi.apk&quot;;
public static String soPath = &quot;encrypt&quot;;

public CheckCodeUtil() {
    emulator = AndroidEmulatorBuilder.for64Bit().setProcessName(pkgName).build();
    Memory memory = emulator.getMemory();
    memory.setLibraryResolver(new AndroidResolver(23));
    vm = emulator.createDalvikVM(new File(apkPath));
    vm.setJni(this);
    vm.setVerbose(true);
    DalvikModule dm = vm.loadLibrary(soPath, true);
    module = dm.getModule();
}

@Override
public DvmObject&amp;lt;?&amp;gt; callObjectMethod(BaseVM vm, DvmObject&amp;lt;?&amp;gt; dvmObject, String signature, VarArg varArg) {
    switch (signature) {
        case &quot;android/app/ActivityThread-&amp;gt;getSystemContext()Landroid/app/ContextImpl;&quot;: {
            return vm.resolveClass(&quot;android/app/ContextImpl&quot;).newObject(null);
        }
        case &quot;android/app/ContextImpl-&amp;gt;getPackageManager()Landroid/content/pm/PackageManager;&quot;: {
            return vm.resolveClass(&quot;android/content/pm/PackageManager&quot;).newObject(null);
        }
        case &quot;android/app/ContextImpl-&amp;gt;getSystemService(Ljava/lang/String;)Ljava/lang/Object;&quot;: {
            return vm.resolveClass(&quot;java/lang/Object&quot;).newObject(null);
        }
        case &quot;java/lang/Object-&amp;gt;getConnectionInfo()Landroid/net/wifi/WifiInfo;&quot;: {
            return vm.resolveClass(&quot;android/net/wifi/WifiInfo&quot;).newObject(null);
        }
        case &quot;android/net/wifi/WifiInfo-&amp;gt;getMacAddress()Ljava/lang/String;&quot;: {
            return new StringObject(vm, &quot;02:00:00:00:00:00&quot;);
        }
    }
    return super.callObjectMethod(vm, dvmObject, signature, varArg);
}

@Override
public DvmObject&amp;lt;?&amp;gt; callStaticObjectMethod(BaseVM vm, DvmClass dvmClass, String signature, VarArg varArg) {
    switch (signature) {
        case &quot;android/app/ActivityThread-&amp;gt;currentPackageName()Ljava/lang/String;&quot;: {
            return new StringObject(vm, &quot;com.timanetworks.android.frame.audisuper.release&quot;);
        }
        case &quot;android/app/ActivityThread-&amp;gt;currentActivityThread()Landroid/app/ActivityThread;&quot;: {
            return vm.resolveClass(&quot;android/app/ActivityThread&quot;).newObject(null);
        }
        case &quot;android/os/SystemProperties-&amp;gt;get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;&quot;: {
            String key = (String) varArg.getObjectArg(0).getValue();
            String val2 = (String) varArg.getObjectArg(1).getValue();
            System.out.println(&quot;get:&quot; + key + &quot; val:&quot; + val2);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//                switch (key){
//                    case &quot;ro.serialno&quot;: return new StringObject(vm, &quot;FA6AT0306923&quot;);
//                }
return new StringObject(vm, &quot;unknown&quot;);
}
}
return super.callStaticObjectMethod(vm, dvmClass, signature, varArg);
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Override
public DvmObject&amp;lt;?&amp;gt; getStaticObjectField(BaseVM vm, DvmClass dvmClass, String signature) {
    switch (signature) {
        case &quot;android/os/Build-&amp;gt;MODEL:Ljava/lang/String;&quot;: {
            return new StringObject(vm, &quot;Pixel&quot;);
        }
        case &quot;android/os/Build-&amp;gt;MANUFACTURER:Ljava/lang/String;&quot;: {
            return new StringObject(vm, &quot;Google&quot;);
        }
        case &quot;android/os/Build$VERSION-&amp;gt;SDK:Ljava/lang/String;&quot;: {
            return new StringObject(vm, &quot;23&quot;);
        }
    }
    return super.getStaticObjectField(vm, dvmClass, signature);
}

public void patchVerify(){
    emulator.getMemory().pointer(module.base + 0x16605).setInt(0, 0x000020B1);
    //emulator.getMemory().pointer(module.base + 0x13fc6).setInt(0, 0x00000128);
}

public void call_checkCode() {
    DvmClass clz = vm.resolveClass(&quot;com/bangcle/comapiprotect/CheckCodeUtil&quot;);
    DvmObject ret = clz.callStaticJniMethodObject(emulator, &quot;checkcode(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;&quot;,
            &quot;hello&quot;, 2, &quot;everhu&quot;);
    System.out.println(ret.getValue());
}

public void call_decheckcode() {
    List&amp;lt;Object&amp;gt; list = new ArrayList&amp;lt;&amp;gt;(10);
    list.add(vm.getJNIEnv());
    //list.add(0);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        list.add(vm.addLocalObject(new StringObject(vm, &quot;MLj4JOPMKPdGeytkeBPy/TvgGCgIOWegKndYgDVbmrctTnrov1z7Uei09BKfKhlW/xnLMOg1HaIN7llJqgPFjmayzV1OI2Rqd7heXxQw1VAmVCe6yXyiiyQ5OHaZ7hhRm5BRpmlFqgY1ebjsv8WPnnw+OZXydnPcySv4Lt5bwmHrOQfygHI7KhDFN40NU8/Csuumues12zRmtaQH9ycfD8fnu27yxX0UQeZBL/VPS+UVNrAwPtjFWrahQztLD3btpjWPXVttVzQZWcLl05iS1hg==&quot;)));
list.add(vm.addLocalObject(new StringObject(vm, &quot;FjjHfs+YR8BculNpfQ5O3chr07YsyxCqsnO1lisOFWhHyCm7vX+03pmFAJvN8xlpUgmj8VUiu9eITzOef08obaRBoC1JJxeu4u5SXli7Zz7rO0y7oV2EFpzhabPQE3TnThnmxQaPOtBAvQ9iltocYSA==&quot;)));
Number ret = module.callFunction(emulator, &quot;Java_com_bangcle_comapiprotect_CheckCodeUtil_decheckcode&quot;, list.toArray());
System.out.println(&quot;解密结果：&quot;+ vm.getObject( ret.intValue()).getValue());
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static void main(String[] args) {
    CheckCodeUtil test = new CheckCodeUtil();
    //test.patchVerify();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        test.call_checkCode();
test.call_decheckcode();
}
}`
报错内容如下：
JNIEnv-&amp;gt;FindClass(android/app/ActivityThread) was called from RX@0x40011a94[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11a94
JNIEnv-&amp;gt;GetStaticMethodID(android/app/ActivityThread.currentPackageName()Ljava/lang/String;) =&amp;gt; 0x99a7d3db was called from RX@0x40011b90[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11b90
JNIEnv-&amp;gt;CallStaticObjectMethod(class android/app/ActivityThread, currentPackageName() =&amp;gt; &quot;com.timanetworks.android.frame.audisuper.release&quot;) was called from RX@0x40011d1c[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11d1c
JNIEnv-&amp;gt;NewGlobalRef(&quot;com.timanetworks.android.frame.audisuper.release&quot;) was called from RX@0x40011d34[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11d34
JNIEnv-&amp;gt;GetStringUtfChars(&quot;com.timanetworks.android.frame.audisuper.release&quot;) was called from RX@0x40011c44[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11c44
JNIEnv-&amp;gt;ReleaseStringUTFChars(&quot;com.timanetworks.android.frame.audisuper.release&quot;) was called from RX@0x40011ce8[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11ce8
JNIEnv-&amp;gt;FindClass(android/app/ActivityThread) was called from RX@0x40011e28[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11e28
JNIEnv-&amp;gt;GetStaticMethodID(android/app/ActivityThread.currentActivityThread()Landroid/app/ActivityThread;) =&amp;gt; 0xf7e11563 was called from RX@0x40012438[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12438
JNIEnv-&amp;gt;CallStaticObjectMethod(class android/app/ActivityThread, currentActivityThread() =&amp;gt; android.app.ActivityThread@43840) was called from RX@0x40012450[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12450
JNIEnv-&amp;gt;NewGlobalRef(android.app.ActivityThread@43840) was called from RX@0x40012468[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12468
JNIEnv-&amp;gt;GetMethodID(android/app/ActivityThread.getSystemContext()Landroid/app/ContextImpl;) =&amp;gt; 0x71cce7a3 was called from RX@0x40011f38[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11f38
JNIEnv-&amp;gt;CallObjectMethod(android.app.ActivityThread@43840, getSystemContext() =&amp;gt; android.app.ContextImpl@115b42e) was called from RX@0x40011f50[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x11f50
JNIEnv-&amp;gt;FindClass(android/app/ContextImpl) was called from RX@0x40012150[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12150
JNIEnv-&amp;gt;GetMethodID(android/app/ContextImpl.getPackageManager()Landroid/content/pm/PackageManager;) =&amp;gt; 0xbb7f5c58 was called from RX@0x40012170[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12170
JNIEnv-&amp;gt;CallObjectMethod(android.app.ContextImpl@115b42e, getPackageManager() =&amp;gt; android.content.pm.PackageManager@f9b8bc) was called from RX@0x40012188[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12188
JNIEnv-&amp;gt;GetMethodID(android/content/pm/PackageManager.getPackageInfo(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;) =&amp;gt; 0x3bca8377 was called from RX@0x400122d4[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x122d4
JNIEnv-&amp;gt;NewStringUTF(&quot;com.timanetworks.android.frame.audisuper.release&quot;) was called from RX@0x400124e8[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x124e8
JNIEnv-&amp;gt;CallObjectMethod(android.content.pm.PackageManager@f9b8bc, getPackageInfo(&quot;com.timanetworks.android.frame.audisuper.release&quot;, 0x40) =&amp;gt; android.content.pm.PackageInfo@67b872) was called from RX@0x40012508[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12508
JNIEnv-&amp;gt;GetFieldID(android/content/pm/PackageInfo.signatures [Landroid/content/pm/Signature;) =&amp;gt; 0x25f17218 was called from RX@0x40012628[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12628
JNIEnv-&amp;gt;GetObjectField(android.content.pm.PackageInfo@67b872, signatures [Landroid/content/pm/Signature; =&amp;gt; [android.content.pm.Signature@18a00e3]) was called from RX@0x40012680[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12680
JNIEnv-&amp;gt;GetObjectArrayElement([android.content.pm.Signature@18a00e3], 0) =&amp;gt; android.content.pm.Signature@18a00e3 was called from RX@0x40012698[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x12698
JNIEnv-&amp;gt;GetMethodID(android/content/pm/Signature.toByteArray()[B) =&amp;gt; 0x6a3e2031 was called from RX@0x400127a0[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x127a0
JNIEnv-&amp;gt;CallObjectMethod(android.content.pm.Signature@18a00e3, toByteArray() =&amp;gt; [B@c7a4e4) was called from RX@0x400127b8[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x127b8
JNIEnv-&amp;gt;GetArrayLength([B@c7a4e4 =&amp;gt; 879) was called from RX@0x400128b0[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x128b0
[00:38:08 133]  WARN [com.github.unidbg.AbstractEmulator] (AbstractEmulator:420) - emulate RX@0x40022f3c[&lt;a href=&quot;http://libencrypt.so/&quot;&gt;libencrypt.so&lt;/a&gt;]0x22f3c exception sp=unidbg@0xbffff480, msg=unicorn.UnicornException: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED), offset=80ms
Exception in thread &quot;main&quot; java.lang.NullPointerException
at com.bangcle.comapiprotect.CheckCodeUtil.call_decheckcode(CheckCodeUtil.java:114)
at com.bangcle.comapiprotect.CheckCodeUtil.main(CheckCodeUtil.java:121)&lt;/p&gt;
&lt;p&gt;不知道什么原因导致的错误
so和脱壳后的dex都放到网盘里面了，有大佬可以帮忙看一下不
链接：&lt;a href=&quot;https://pan.baidu.com/s/1mHVMUaWBjI-TyO1aAtUx3A&quot;&gt;https://pan.baidu.com/s/1mHVMUaWBjI-TyO1aAtUx3A&lt;/a&gt;
提取码：gith&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/569</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/569</guid><pubDate>Sun, 24 Sep 2023 16:40:39 GMT</pubDate><author>zxf834580866</author></item><item><title>JNIEnv-&gt;FindClass() 自动创建DvmClass实例，导致后续无法再给该实例添加superClass</title><description>&lt;p&gt;JNIEnv-&amp;gt;FindClass(android/content/pm/PackageManager)，自身会创建一个DvmClass实例
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/52552891/80f95967-8a43-4bf7-afc2-bdeae6b818cd&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后会有个hash，然后我后面再次遇到，需要给它设置一个superClass的时候，这个设置就不会生效了,
因为代码里根据hash找到了原先已有的DvmClass实例，就不会再创建新的DvmClass实例了，这里设置的superClass也就不生效了，导致后面出错。
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/52552891/d5fa8737-67a2-4875-b622-6162b327fbf8&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
感觉这里应该 DvmClass.java 类里面应该加个setSuperclass方法。
或者有什么办法在JNIEnv-&amp;gt;FindClass()时就可以设置superClass吗?&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/568</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/568</guid><pubDate>Fri, 22 Sep 2023 04:12:40 GMT</pubDate><author>Harvey-2021</author></item><item><title>java环境补完后，紧接着提示 PipedWriteFileIO 错误</title><description>&lt;p&gt;调用某so的函数后，返回null结果，错误列表中提示 java.lang.AbstractMethodError: com.github.unidbg.linux.file.PipedWriteFileIO
在issues中找到 #442 同样的错误，这个应该如何解决。。
目前使用的0.9.5版本
java.lang.AbstractMethodError: com.github.unidbg.linux.file.PipedWriteFileIO
at com.github.unidbg.file.AbstractFileIO.dup2(AbstractFileIO.java:160)
at com.github.unidbg.linux.ARM32SyscallHandler.dup3(ARM32SyscallHandler.java:2086)
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:438)
at com.github.unidbg.arm.backend.InterruptHookNotifier.notifyCallSVC(InterruptHookNotifier.java:14)
at com.github.unidbg.arm.backend.dynarmic.DynarmicBackend32.callSVC(DynarmicBackend32.java:32)
at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Native Method)
at com.github.unidbg.arm.backend.dynarmic.Dynarmic.emu_start(Dynarmic.java:61)
at com.github.unidbg.arm.backend.DynarmicBackend.emu_start(DynarmicBackend.java:76)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:370)
at com.github.unidbg.AbstractEmulator.eFunc(AbstractEmulator.java:446)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:220)
at com.github.unidbg.Module.emulateFunction(Module.java:158)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:133)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:292)
at com.example.qqpayserver.service.unidbg.PddEncrypt.pddInfo3(PddEncrypt.java:161)
at com.example.qqpayserver.service.unidbg.PddEncrypt.main(PddEncrypt.java:34)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/27680901/8cf940c1-0400-46c7-9538-51cfd637d00d&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/27680901/86628fb7-a7a4-4eeb-8b15-74888b04120a&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/567</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/567</guid><pubDate>Sat, 16 Sep 2023 17:54:47 GMT</pubDate><author>cih1996</author></item><item><title>superClass is null</title><description>&lt;p&gt;JNI_Onload时报错DvmClass superClass = dvmClass.getSuperclass();，dvmClass有值，但是superclass是空的，这种环境要怎么补？&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/564</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/564</guid><pubDate>Mon, 11 Sep 2023 06:18:17 GMT</pubDate><author>joshuachenn</author></item><item><title>java.lang.UnsupportedOperationException: clk_id=2</title><description>&lt;p&gt;Find native function Java_com_baidu_search_bdtls_RSA_encrypt =&amp;gt; RX@0x4022a919[&lt;a href=&quot;http://libsearch-bdtls.so/&quot;&gt;libsearch-bdtls.so&lt;/a&gt;]0x5919&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-----------------------------------------------------------------------------&amp;lt;
[15:16:40 592]GetByteArrayElements array=[B@5bdd5689, isCopy=null, md5=c65a9f16901a3b0c11adc5a52802df7e, hex=00000020
size: 4
0000: 00 00 00 20                                        ...
^-----------------------------------------------------------------------------^
JNIEnv-&amp;gt;GetArrayLength([B@5bdd5689 =&amp;gt; 4) was called from RX@0x4022a959[&lt;a href=&quot;http://libsearch-bdtls.so/&quot;&gt;libsearch-bdtls.so&lt;/a&gt;]0x5959&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;-----------------------------------------------------------------------------&amp;lt;
[15:16:40 593]gettimeofday tv=unidbg@0xbfffdc40, md5=7dea362b3fac8e00956a4952a3d4f474, hex=0000000000000000
size: 8
0000: 00 00 00 00 00 00 00 00                            ........
^-----------------------------------------------------------------------------^&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;-----------------------------------------------------------------------------&amp;lt;
[15:16:40 593]gettimeofday tv after tv_sec=1693207000, tv_usec=593000, tv=unidbg@0xbfffdc40, md5=0edf6980eae984c0d23e827e05ca9a8e, hex=d849ec64680c0900
size: 8
0000: D8 49 EC 64 68 0C 09 00                            .I.dh...
^-----------------------------------------------------------------------------^
java.lang.UnsupportedOperationException: clk_id=2
at com.github.unidbg.linux.ARM32SyscallHandler.clock_gettime(ARM32SyscallHandler.java:1759)
at com.github.unidbg.linux.ARM32SyscallHandler.hook(ARM32SyscallHandler.java:410)
at com.github.unidbg.arm.backend.UnicornBackend$11.hook(UnicornBackend.java:345)
at unicorn.Unicorn$NewHook.onInterrupt(Unicorn.java:128)
at unicorn.Unicorn.emu_start(Native Method)
at com.github.unidbg.arm.backend.UnicornBackend.emu_start(UnicornBackend.java:376)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:380)
at com.github.unidbg.thread.Function32.run(Function32.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:229)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316)
at com.seo.baidu.business.unidbg.service.impl.BaiduUnidbgSearchBdtlsServiceImpl.encrypt(BaiduUnidbgSearchBdtlsServiceImpl.java:95)
at com.seo.test.FunctionTest.testTlsbaiduEncrypt(FunctionTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:232)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:175)
at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
debugger break at: 0x400f8b88 @ Function32 address=0x4022a919, arguments=[unidbg@0xfffe12a0, 662033092, 45795770]&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;r0=0x2 r1=0xbfffdc40 r2=0x0 r3=0x2 r4=0x401348fc r5=0x0 r6=0x0 r7=0x107 r8=0x0 sb=0x0 sl=0x0 fp=0x0 ip=0xbfffdc78
SP=0xbfffdc40 LR=RX@0x400d1ef3[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x19ef3 PC=RX@0x400f8b88[&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;]0x40b88 cpsr: N=0, Z=0, C=0, V=0, T=0, mode=0b10000
d0=0x0(0.0) d1=0x61647a742f6f666e(1.4395353965842355E161) d2=0x79(1.6955711418330287E-43) d3=0x73(1.6114932339735396E-43) d4=0x0(0.0) d5=0x0(0.0) d6=0x0(0.0) d7=0x0(0.0)
d8=0x0(0.0) d9=0x0(0.0) d10=0x0(0.0) d11=0x0(0.0) d12=0x0(0.0) d13=0x0(0.0) d14=0x0(0.0) d15=0x0(0.0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;java.lang.NoClassDefFoundError: capstone/api/DisassemblerFactory&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;at com.github.unidbg.arm.AbstractARMEmulator.createArmCapstone(AbstractARMEmulator.java:103)
at com.github.unidbg.arm.AbstractARMEmulator.disassemble(AbstractARMEmulator.java:207)
at com.github.unidbg.arm.CodeHistory.disassemble(CodeHistory.java:21)
at com.github.unidbg.arm.AbstractARMDebugger.disassemble(AbstractARMDebugger.java:942)
at com.github.unidbg.arm.SimpleARMDebugger.loop(SimpleARMDebugger.java:53)
at com.github.unidbg.arm.AbstractARMDebugger.debug(AbstractARMDebugger.java:279)
at com.github.unidbg.AbstractEmulator.handleEmuException(AbstractEmulator.java:414)
at com.github.unidbg.AbstractEmulator.emulate(AbstractEmulator.java:397)
at com.github.unidbg.thread.Function32.run(Function32.java:39)
at com.github.unidbg.thread.MainTask.dispatch(MainTask.java:19)
at com.github.unidbg.thread.UniThreadDispatcher.run(UniThreadDispatcher.java:172)
at com.github.unidbg.thread.UniThreadDispatcher.runMainForResult(UniThreadDispatcher.java:96)
at com.github.unidbg.AbstractEmulator.runMainForResult(AbstractEmulator.java:340)
at com.github.unidbg.arm.AbstractARMEmulator.eFunc(AbstractARMEmulator.java:229)
at com.github.unidbg.Module.emulateFunction(Module.java:163)
at com.github.unidbg.linux.android.dvm.DvmObject.callJniMethod(DvmObject.java:135)
at com.github.unidbg.linux.android.dvm.DvmClass.callStaticJniMethodObject(DvmClass.java:316)
at com.seo.baidu.business.unidbg.service.impl.BaiduUnidbgSearchBdtlsServiceImpl.encrypt(BaiduUnidbgSearchBdtlsServiceImpl.java:95)
at com.seo.test.FunctionTest.testTlsbaiduEncrypt(FunctionTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:232)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:175)
at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Caused by: java.lang.ClassNotFoundException: capstone.api.DisassemblerFactory
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
... 48 more&lt;/p&gt;
&lt;p&gt;进程已结束，退出代码为 255&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/559</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/559</guid><pubDate>Mon, 28 Aug 2023 07:25:04 GMT</pubDate><author>Mrqjj</author></item><item><title>这种情况怎么解决Write to write-protected memory (UC_ERR_WRITE_PROT)</title><description>&lt;p&gt;package com.com.qm;&lt;/p&gt;
&lt;p&gt;import com.github.unidbg.AndroidEmulator;
import com.github.unidbg.Emulator;
import com.github.unidbg.Module;
import com.github.unidbg.ModuleListener;
import com.github.unidbg.arm.HookStatus;
import com.github.unidbg.arm.backend.Unicorn2Factory;&lt;/p&gt;
&lt;p&gt;import com.github.unidbg.arm.context.Arm32RegisterContext;
import com.github.unidbg.arm.context.EditableArm32RegisterContext;
import com.github.unidbg.arm.context.RegisterContext;
import com.github.unidbg.debugger.BreakPointCallback;
import com.github.unidbg.debugger.Debugger;
import com.github.unidbg.hook.HookContext;
import com.github.unidbg.hook.ReplaceCallback;
import com.github.unidbg.hook.hookzz.HookEntryInfo;
import com.github.unidbg.hook.hookzz.HookZz;
import com.github.unidbg.hook.hookzz.IHookZz;
import com.github.unidbg.hook.hookzz.InstrumentCallback;
import com.github.unidbg.linux.AndroidElfLoader;
import com.github.unidbg.linux.android.AndroidEmulatorBuilder;
import com.github.unidbg.linux.android.AndroidResolver;
import com.github.unidbg.linux.android.dvm.*;
import com.github.unidbg.linux.android.dvm.api.ClassLoader;
import com.github.unidbg.linux.android.dvm.api.SystemService;
import com.github.unidbg.linux.android.dvm.array.ByteArray;
import com.github.unidbg.linux.android.dvm.jni.ProxyClassFactory;
import com.github.unidbg.memory.Memory;
import com.github.unidbg.memory.SvcMemory;
import com.github.unidbg.pointer.UnidbgPointer;
import com.github.unidbg.utils.Inspector;
import com.github.unidbg.virtualmodule.android.AndroidModule;
import com.github.unidbg.virtualmodule.android.JniGraphics;
import com.github.unidbg.virtualmodule.android.MediaNdkModule;
import com.sun.jna.Pointer;
import com.weibo.sign.weibo;
import keystone.Keystone;
import keystone.KeystoneArchitecture;
import keystone.KeystoneEncoded;
import keystone.KeystoneMode;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import unicorn.Arm64Const;
import unicorn.ArmConst;
import unicorn.Unicorn;&lt;/p&gt;
&lt;p&gt;import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;&lt;/p&gt;
&lt;p&gt;public class qmSign extends AbstractJni implements ModuleListener {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private final AndroidEmulator emulator;
private final DvmClass Qmsign;
private final VM vm;
private final Module module;
private HookZz hook;


public qmSign(){
    emulator = AndroidEmulatorBuilder
            .for32Bit()
            .setRootDir(new File(&quot;target/rootfs&quot;))
            .addBackendFactory(new Unicorn2Factory(true))
            .setProcessName(&quot;com.kmxs.reader&quot;)
            .build();
    Memory memory = emulator.getMemory();
    memory.setLibraryResolver(new AndroidResolver(23));
    vm = emulator.createDalvikVM(new File(&quot;unidbg-android/src/test/resources/qm/qm7_8_20.apk&quot;));
    vm.setJni(this);
    vm.setVerbose(true);
    // 使用 libandroid.so 的虚拟模块
    new AndroidModule(emulator, vm).register(memory);;
    // 使用 libjnigraphics.so 的虚拟模块
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        new JniGraphics(emulator, vm).register(memory);
// 使用 &lt;a href=&quot;http://libmediandkmodule.so/&quot;&gt;libmediaNdkModule.so&lt;/a&gt; 的虚拟模块
//        new MediaNdkModule(emulator, vm).register(memory);
// add
emulator.getSyscallHandler().setVerbose(true);
emulator.getSyscallHandler().setEnableThreadDispatcher(true);
//最好调整一下log级别
//        DalvikModule dalvikModule = vm.loadLibrary(&quot;libcommon-encryption&quot;, false);
DalvikModule dalvikModule = vm.loadLibrary(new File(&quot;unidbg-android/src/test/resources/qm/libcommon-encryption.so&quot;), true);
module = dalvikModule.getModule();
//        System.out.println(&quot;module: &quot; + module.base);
dalvikModule.callJNI_OnLoad(emulator);
Qmsign = vm.resolveClass(&quot;com.km.encryption.api.Security&quot;);
}
//
//    0x101013a-0x2a0
//    0xa8f90108-0x68f7aae2
static {
Logger.getLogger(AndroidElfLoader.class).setLevel(&lt;a href=&quot;http://level.info/&quot;&gt;Level.INFO&lt;/a&gt;);
}&lt;/p&gt;
&lt;p&gt;//    @Override
//    public FileResult&lt;androidfileio&gt; resolve(Emulator&lt;androidfileio&gt; emulator, String pathname, int oflags) {
//        if (&quot;/dev/urandom&quot;.equals(pathname)) {
//            return FileResult.&lt;androidfileio&gt;success(new RandomFileIO(emulator, pathname) {
//                @Override
//                protected void randBytes(byte[] buf) {
//                    ThreadLocalRandom.current().nextBytes(buf);
//                }
//            });
//        }
//        return null;
//    }&lt;/androidfileio&gt;&lt;/androidfileio&gt;&lt;/androidfileio&gt;&lt;/p&gt;
&lt;p&gt;//    public YiDianZXV2() {
//        emulator = AndroidEmulatorBuilder.for32Bit().setProcessName(&quot;com.xingin.xhs&quot;).build();
//        final Memory memory = emulator.getMemory();
//        memory.setLibraryResolver(new AndroidResolver(23));
//        emulator.getSyscallHandler().addIOResolver(this);
//
//        vm = emulator.createDalvikVM(new File(&quot;unidbg-android/src/test/resources/app/Yidianzixun.apk&quot;));
//        vm.setVerbose(true);
//        vm.setJni(this);
//        DalvikModule dm = vm.loadLibrary(&quot;util&quot;, false);
//        dm.callJNI_OnLoad(emulator);
//    }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private void destroy() throws IOException {
    emulator.close();
    System.out.println(&quot;destroy&quot;);
}





@Override
public void onLoaded(Emulator&amp;lt;?&amp;gt; emulator, Module module) {
    // 提前加载Hook框架
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        if(module.name.equals(&quot;&lt;a href=&quot;http://libc.so/&quot;&gt;libc.so&lt;/a&gt;&quot;)){
//            hook = HookZz.getInstance(emulator);
//        }
//        System.out.println(&quot;********************** logs ****************************&quot;);
//        // 在目标函数中Hook
//        if(module.name.equals(&quot;&lt;a href=&quot;http://libcommon-encryption.so/&quot;&gt;libcommon-encryption.so&lt;/a&gt;&quot;)){
//            hook.instrument(module.base + 0x2a0, new InstrumentCallback&lt;registercontext&gt;() {
//                @Override
//                public void dbiCall(Emulator&amp;lt;?&amp;gt; emulator, RegisterContext ctx, HookEntryInfo info) {
//                    System.out.println(ctx.getIntArg(0));
//                }
//            });
//        }
}&lt;/registercontext&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static void main(String[] args) throws IOException{
    // LDR             R2, =(_ZTVN12_GLOBAL__N_116itanium_demangle9ThrowExprE - 0x15626)
    // mem_read address=0x1561f, size=112
    Logger.getLogger(&quot;com.github.unidbg.linux.ARM32SyscallHandler&quot;).setLevel(Level.DEBUG);
    Logger.getLogger(&quot;com.github.unidbg.unix.UnixSyscallHandler&quot;).setLevel(Level.DEBUG);
    Logger.getLogger(&quot;com.github.unidbg.AbstractEmulator&quot;).setLevel(Level.DEBUG);
    Logger.getLogger(&quot;com.github.unidbg.linux.android.dvm.DalvikVM&quot;).setLevel(Level.DEBUG);
    Logger.getLogger(&quot;com.github.unidbg.linux.android.dvm.BaseVM&quot;).setLevel(Level.DEBUG);
    Logger.getLogger(&quot;com.github.unidbg.linux.android.dvm&quot;).setLevel(Level.DEBUG);
    long start = System.currentTimeMillis();
    qmSign qm = new qmSign();
    System.out.println(&quot;load the vm &quot;+( System.currentTimeMillis() - start )+ &quot;ms&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        qm.debugger();
//        qm.patch2();
//        qm.hook();
qm.CallnativeInit();
qm.destroy();
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void CallnativeInit(){
    emulator.traceCode(module.base + 0x2a0, 0xffff0000);
    List&amp;lt;Object&amp;gt; args = new ArrayList&amp;lt;&amp;gt;(10);
    args.add(vm.getJNIEnv());
    args.add(0);
    byte[] input = &quot;book_privacy=1new_user=1page_no=2read_preference=0uid=58CB52512BA1&quot;.getBytes(StandardCharsets.UTF_8);
    args.add(vm.addLocalObject(new ByteArray(vm,input)));
    Number number = module.callFunction(emulator, 0x15620+1 , args.toArray());
    System.out.println((vm.getObject(number.intValue()).getValue().toString()));;
}

public void hook(){
    //unidbg集成了HookZz框架
    HookZz hook = HookZz.getInstance(emulator);

    //直接hook add函数的地址，比通过符号hook更具有“普适性”
    hook.replace(module.base + 0x15625+1, new ReplaceCallback() {
        @Override
        public HookStatus onCall(Emulator&amp;lt;?&amp;gt; emulator, HookContext context, long originFunction) {
            //R2和R3才是参数，R0是env，R1是object
            System.out.println(String.format(&quot;R2: %d, R3: %d&quot;,context.getIntArg(2),context.getIntArg(3)));
            //把第二个参数R3改成5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//                emulator.getBackend().reg_write(ArmConst.UC_ARM_REG_R2,16843068);
//                // 获取内存操作接口
//
//                // 将R0寄存器的值设置为16843068 (0x1000004)
////                int newValue = 16843068;
////                emulator.getUnicorn().reg_write(ArmConst.UC_ARM_REG_R0, newValue);
//
//                // 读取R0寄存器的新值
//                int r0Value = emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R2).intValue();
//                System.out.println(&quot;R0寄存器的新值：&quot; + r0Value);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            return super.onCall(emulator, context, originFunction);
        }

        @Override
        public void postCall(Emulator&amp;lt;?&amp;gt; emulator, HookContext context) {
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//                emulator.getBackend().reg_write(Unicorn.UC_ARM_REG_R0,10);
//返回值放R0，这里直接修改返回值
super.postCall(emulator, context);
}
}, true);&lt;/p&gt;
&lt;p&gt;//        hook.replace(module.base + 0x15625+1, new ReplaceCallback() {
//            @Override
//            public HookStatus onCall(Emulator&lt;!--?--&gt; emulator, HookContext context, long originFunction) {
//                //R2和R3才是参数，R0是env，R1是object
//                System.out.println(String.format(&quot;R2: %d, R3: %d&quot;,context.getIntArg(2),context.getIntArg(3)));
//                //把第二个参数R3改成5
//                emulator.getBackend().reg_write(Unicorn.UC_ARM_REG_R2,16843068);
//                return super.onCall(emulator, context, originFunction);
//            }
//
//            @Override
//            public void postCall(Emulator&lt;!--?--&gt; emulator, HookContext context) {
////                emulator.getBackend().reg_write(Unicorn.UC_ARM_REG_R0,10);
//                //返回值放R0，这里直接修改返回值
//                super.postCall(emulator, context);
//            }
//        }, true);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//    public void qmhook(){
//        IHookZz hookZz = HookZz.getInstance(emulator); // 加载HookZz，支持inline hook，文档看&lt;a href=&quot;https://github.com/jmpews/HookZz&quot;&gt;https://github.com/jmpews/HookZz&lt;/a&gt;
//        // 2. enable hook
//        hookZz.enable_arm_arm64_b_branch(); // 测试enable_arm_arm64_b_branch，可有可无
////        index = 0;
//        hookZz.replace(module.findSymbolByName(&quot;lrand48&quot;), new ReplaceCallback() {
//            @Override
//            public void postCall(Emulator&amp;lt;?&amp;gt; emulator, HookContext context) {
//
//                ((EditableArm32RegisterContext)context).setR0(0x12345678);
//
//                int ptrace_args0 = context.getIntArg(0);
//                System.out.println(&quot;lrand48=&quot; + ptrace_args0);
//
//            }
//        },true);
//    }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void patch2() {
    UnidbgPointer pointer = UnidbgPointer.pointer(emulator,module.base + 0x15627);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        Keystone keystone = new Keystone(KeystoneArchitecture.Arm64, KeystoneMode.LittleEndian);
//        String s = &quot;MOV r2,ds[r0]&quot;;
//        byte[] machineCode = keystone.assemble(s).getMachineCode();
//        // System.out.println(Integer.toHexString(machineCode[3]));
//        pointer.write(machineCode);
assert pointer != null;
byte[] code = pointer.getByteArray(1, 1);
try(Keystone keystone = new Keystone(KeystoneArchitecture.Arm, KeystoneMode.ArmThumb)){
// 修改
KeystoneEncoded keystoneEncoded = keystone.assemble(&quot;add r2, [r0]&quot;);
byte[] patch = keystoneEncoded.getMachineCode();
//            System.out.println(&quot;pathch_length:&quot;+patch.length);
//            System.out.println(&quot;code_length:&quot;+code.length);
if(patch.length != code.length){
throw new IllegalStateException(Inspector.inspectString(patch, &quot;patch32 length=&quot;+patch.length));
}
pointer.write(0, patch, 0, patch.length);
}
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private void debugger() {
    Debugger debugger = emulator.attach();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;//        debugger.addBreakPoint(module.base + 0x15623+1);
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Override
public DvmObject&amp;lt;?&amp;gt; callObjectMethodV(BaseVM vm, DvmObject&amp;lt;?&amp;gt; dvmObject, String signature, VaList vaList) {
    switch (signature){
        case &quot;com/km/encryption/generator/KeyGenerator-&amp;gt;assetManager:Landroid/content/res/AssetManager;&quot;:{
            return new StringObject(vm, ((DvmClass) dvmObject).getName());
        }
    }
    return new ClassLoader(vm, signature);
}

@Override
public DvmObject&amp;lt;?&amp;gt; callStaticObjectMethod(BaseVM vm, DvmClass dvmClass, String signature, VarArg varArg) {
    if (&quot;android/app/ActivityThread-&amp;gt;currentPackageName()Ljava/lang/String;&quot;.equals(signature)) {
        String packageName = vm.getPackageName();
        if (packageName != null) {
            return new StringObject(vm, packageName);
        }
    }
    throw new UnsupportedOperationException(signature);
}

@Override
public DvmObject&amp;lt;?&amp;gt; getStaticObjectField(BaseVM vm, DvmClass dvmClass, String signature) {
    if (signature.equals(&quot;com/km/encryption/generator/KeyGenerator-&amp;gt;assetManager:Landroid/content/res/AssetManager;&quot;)) {
        return vm.resolveClass(&quot;android/content/res/AssetManager&quot;).newObject(signature);
    }
    throw new UnsupportedOperationException(signature);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;// trcecode开启，找到异常原因。
// patch补丁
//trace指令执行
&lt;a href=&quot;https://emulator.tracecode/&quot;&gt;//emulator.traceCode&lt;/a&gt;(long begin, long end);
//trace内存读写
//       emulator.traceRead(long begin, long end);
//       emulator.traceWrite(long begin, long end);&lt;/p&gt;
&lt;p&gt;//        emulator.attach().addBreakPoint(module.base + 0x4001562c  , new BreakPointCallback() {
//                    @Override
//                    public boolean onHit(Emulator&amp;lt;?&amp;gt; emulator, long address) {
//                        System.out.println(&quot; ====== traceCode ====== &quot;);
//
//                        UnidbgPointer pX = UnidbgPointer.register(emulator, Arm64Const.UC_ARM64_REG_X1);
//
//                        byte[] bData = pX.getByteArray(0,16);
//                        String strLabel = String.format(&quot;x0值 0x%08x&quot;, pX.peer);
//                        Inspector.inspect(bData,strLabel);
//
//                        try {
//                            emulator.traceCode(module.base + 0x8EE4, module.base + 0x9C0C).setRedirect(new PrintStream(new File(&quot;traceCodeCar.log&quot;)));
//                        } catch (IOException e) {
//                            throw new IllegalStateException(e);
//                        }
//                        return true;
//                    }
//                });
&lt;img src=&quot;https://github.com/zhkl0228/unidbg/assets/92913799/de481669-72cb-4a0b-910d-f1adfd566979&quot; alt=&quot;image&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/558</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/558</guid><pubDate>Thu, 24 Aug 2023 19:14:33 GMT</pubDate><author>mr-linge</author></item><item><title>android/os/Bundle-&gt;getParcelable(Ljava/lang/String;)Landroid/os/Parcelable 这种应该如何补，求教</title><description>No description</description><link>https://github.com/zhkl0228/unidbg/issues/556</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/556</guid><pubDate>Wed, 02 Aug 2023 21:27:16 GMT</pubDate><author>a1274807709</author></item><item><title>Read memory failed: address=0x706b6ca020, size=8, value=0x0</title><description>&lt;p&gt;版本：安卓qq8.9.70  so文件：&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;
Hook出的参数：&lt;/p&gt;
&lt;p&gt;{
&quot;param1&quot;: &quot;/data/user/0/com.tencent.mobileqq/files/com.tencent.qimei.sdk.QimeiSDK&quot;,
&quot;param2&quot;: [
[&quot;com/tencent/qimei/n/b&quot;, &quot;sendError&quot;, &quot;(III)I&quot;, &quot;k2&quot;],
[&quot;com/tencent/qimei/n/b&quot;, &quot;sendSample&quot;, &quot;(III)I&quot;, &quot;k1&quot;],
[&quot;com/tencent/qimei/l/a&quot;, &quot;getLauncherActivity&quot;, &quot;(Landroid/content/Context;)Landroid/app/Activity;&quot;, &quot;k4&quot;],
[&quot;com/tencent/qimei/u/b&quot;, &quot;p&quot;, &quot;(ILjava/lang/String;)Ljava/lang/String;&quot;, &quot;k5&quot;]
],
&quot;Times&quot;: &quot;2023-07-31-22:24:58&quot;
}
native层： private static native void n(Context context, String str, Object[] objArr);&lt;/p&gt;
&lt;p&gt;代码：
`  ArrayList&amp;lt;String[]&amp;gt; f296371a = new ArrayList&amp;lt;&amp;gt;();
String[] strArr = new String[4];
strArr[0]=&quot;com/tencent/qimei/n/b&quot;;
strArr[1]=&quot;sendSample&quot;;
strArr[2]=&quot;(III)I&quot;;
strArr[3]=&quot;k1&quot;;
f296371a.add(strArr);
strArr[0]=&quot;com/tencent/qimei/n/b&quot;;
strArr[1]=&quot;sendError&quot;;
strArr[2]=&quot;(III)I&quot;;
strArr[3]=&quot;k2&quot;;
f296371a.add(strArr);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    strArr[0]=&quot;com/tencent/qimei/l/a&quot;;
    strArr[1]=&quot;getLauncherActivity&quot;;
    strArr[2]=&quot;(Landroid/content/Context;)Landroid/app/Activity;&quot;;
    strArr[3]=&quot;k4&quot;;
    f296371a.add(strArr);
    strArr[0]=&quot;com/tencent/qimei/u/b&quot;;
    strArr[1]=&quot;p&quot;;
    strArr[2]=&quot;(ILjava/lang/String;)Ljava/lang/String;&quot;;
    strArr[3]=&quot;k5&quot;;
    f296371a.add(strArr);
    Object[] objects=   f296371a.toArray();

    String n = &quot;n(Landroid/content/Context;Ljava/lang/String;[Ljava/lang/Object;)V&quot;;
     this.dvmClassQimei.callStaticJniMethod(emulator,n,context,str,  ProxyDvmObject.createObject(vm,objects));`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;报错：&lt;/p&gt;
&lt;p&gt;debugger break at: 0x40cc74a0 @ Function64 address=0x40cd3a0c, arguments=[unidbg@0xfffe1640[&lt;a href=&quot;http://libandroid.so/&quot;&gt;libandroid.so&lt;/a&gt;]0x640, -1688988207, 1056860985, 624795507, 337799666]&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;x0=0x65107976 x1=0xbffff3d0 x2=0x0 x3=0x20 x4=0xfffffffffffffff0 x5=0x40 x6=0x3f x7=0x0 x8=0x706b6ca000 x9=0x7f454c46 x10=0x706b6ca000 x11=0xdcaa2465 x12=0xbffff458 x13=0xbffff468 x14=0x1
x15=0x3ed4be59 x16=0x40d07e60 x17=0xa749 x18=0x40189f50 x19=0x133ae5fe x20=0x0 x21=0x90fd6129 x22=0xe5705dd0 x23=0xfef5 x24=0xdfcf39cd x25=0x6186dbdb x26=0xa56b5961 x27=0x1d935179 x28=0x41d3 fp=0xe36c
q0=0x72727272727272727272727272727272(1.9680840716716443E243, 1.9680840716716443E243) q1=0x0(0.0) q2=0x702d2d72(2.143833868430176E29) q3=0x80200802802008028020080280200802(-4.458850023827439E-308, -4.458850023827439E-308) q4=0x80200802802008028020080200000000(-4.45884789975736E-308, -4.458850023827439E-308) q5=0x0(0.0) q6=0x1(1.401298464324817E-45) q7=0x80200802802008028020080280200802(-4.458850023827439E-308, -4.458850023827439E-308) q8=0x0(0.0) q9=0x0(0.0) q10=0x0(0.0) q11=0x0(0.0) q12=0x0(0.0) q13=0x0(0.0) q14=0x0(0.0) q15=0x0(0.0)
q16=0x40100401401004014010040140100401(4.003911019303815, 4.003911019303815) q17=0xa00aa00aa00a0001aaaaaa01aaaaaaaa(-3.720302283390508E-103, -2.482244139579132E-154) q18=0x80200802802008028020080200000001(-4.458847899757361E-308, -4.458850023827439E-308) q19=0x5003474657514c53535650034e564e4a(2.9088939508169216E93, 2.79036023712085E77) q20=0xa4bdb1fcafb8b9b9bfa4b9fcfbb2fbfc(-0.04048147747516137, -1.0458973637743107E-131) q21=0x34373f33357d373c3d26353c3b207d21(3.9449244407276354E-14, 3.703440873897255E-57) q22=0xf9e3e8e0f8eee2c9a2e9ffeceee9fea2(-1.705691643836012E-140, -1.4117257583346367E279) q23=0x672f656e6f74676e69722f636973754d(8.69987647388894E199, 1.0928602047774224E189) q24=0x3b6f666e49656369767265532f6d702f(3.620386432783241E262, 2.0778856622684563E-22) q25=0x6c6d782f6e6f69746163696c707061(3.983861098561292E252, 1.265070865790262E-306) q26=0x746e65746e6f632f64696f72646e614c(5.032746132294561E175, 6.964135520393147E252) q27=0x4965636976726573(3.815805220542376E45) q28=0x66643139313230626434313335633938(4.994141873244771E174, 1.7159818404838045E185) q29=0x62323161356161353336356661353330(5.398610010944219E-62, 1.047657493609918E165) q30=0xe2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2(-2.227377823277027E168, -2.227377823277027E168) q31=0x62613934333231303030303030303061(1.398043286095304E-76, 7.934651310604643E165)
LR=RX@0x40cc9ad8[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;]0x2dad8
SP=0xbffff1c0
PC=RX@0x40cc74a0[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;]0x2b4a0
nzcv: N=0, Z=1, C=1, V=0, EL0, use SP_EL0
22:48:03.614 [main] DEBUG org.scijava.nativelib.NativeLibraryUtil - architecture is WINDOWS_64 &lt;a href=&quot;http://os.name/&quot;&gt;os.name&lt;/a&gt; is windows 11
22:48:03.614 [main] DEBUG org.scijava.nativelib.NativeLibraryUtil - platform specific path is natives/windows_64/
22:48:03.614 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - mappedLib is disassembler.dll
22:48:03.617 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - Couldn&#39;t find resource natives/windows_64/disassembler.dll
22:48:03.617 [main] DEBUG org.scijava.nativelib.NativeLibraryUtil - platform specific path is windows_64/
22:48:03.617 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - mappedLib is disassembler.dll
22:48:03.620 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - Couldn&#39;t find resource windows_64/disassembler.dll
22:48:03.620 [main] DEBUG org.scijava.nativelib.NativeLibraryUtil - platform specific path is META-INF/lib/windows_64/
22:48:03.620 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - mappedLib is disassembler.dll
22:48:03.624 [main] DEBUG org.scijava.nativelib.BaseJniExtractor - Couldn&#39;t find resource META-INF/lib/windows_64/disassembler.dll
=&amp;gt; *[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;  &lt;em&gt;0x02b4a0]&lt;/em&gt;[fd7bbaa9]&lt;em&gt;0x40cc74a0:&lt;/em&gt;&quot;stp x29, x30, [sp, #-0x60]!&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4a4] [fc6f01a9] 0x40cc74a4: &quot;stp x28, x27, [sp, #0x10]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4a8] [fa6702a9] 0x40cc74a8: &quot;stp x26, x25, [sp, #0x20]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4ac] [f85f03a9] 0x40cc74ac: &quot;stp x24, x23, [sp, #0x30]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4b0] [f65704a9] 0x40cc74b0: &quot;stp x22, x21, [sp, #0x40]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4b4] [f44f05a9] 0x40cc74b4: &quot;stp x20, x19, [sp, #0x50]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4b8] [ffc306d1] 0x40cc74b8: &quot;sub sp, sp, #0x1b0&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4bc] [e12f00f9] 0x40cc74bc: &quot;str x1, [sp, #0x58]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4c0] [e82f40f9] 0x40cc74c0: &quot;ldr x8, [sp, #0x58]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4c4] [49058052] 0x40cc74c4: &quot;movz w9, #0x2a&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4c8] [2d400391] 0x40cc74c8: &quot;add x13, x1, #0xd0&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4cc] [2ce00291] 0x40cc74cc: &quot;add x12, x1, #0xb8&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4d0] [000100f9] 0x40cc74d0: &quot;str x0, [x8]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4d4] [29200039] 0x40cc74d4: &quot;strb w9, [x1, #8]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4d8] [e82f40f9] 0x40cc74d8: &quot;ldr x8, [sp, #0x58]&quot;
[&lt;a href=&quot;http://libqimei.so/&quot;&gt;libqimei.so&lt;/a&gt;   0x02b4dc] [c9888952] 0x40cc74dc: &quot;movz w9, #0x4c46&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/555</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/555</guid><pubDate>Mon, 31 Jul 2023 15:04:48 GMT</pubDate><author>a1274807709</author></item><item><title>callObjectMethodV =&gt;java/lang/StackTraceElement-&gt;getMethodName()Ljava/lang/String;</title><description>&lt;p&gt;这种返回应该怎么补呢？？&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/554</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/554</guid><pubDate>Fri, 21 Jul 2023 16:54:52 GMT</pubDate><author>a1274807709</author></item><item><title>Exception in thread &quot;main&quot; java.lang.NullPointerException</title><description>&lt;p&gt;JNIEnv-&amp;gt;NewStringUTF(&quot;0b2cf7ed7b925696de4b5c4dd129b18d9933ce2f9eac3b6b12eba8e86a2c9de11e&quot;) was called from RX@0x40008470[&lt;a href=&quot;http://libxtoken.so/&quot;&gt;libxtoken.so&lt;/a&gt;]0x8470
函数最后一步字符串都new出来了但是我用Number number =dm.getModule().callFunction(emulator, 0x83a4, list.toArray());
System.out.println(&quot;================================================&quot;);
String result = (String) vm.getObject(number.intValue()).getValue();
获取返回值会报错
Exception in thread &quot;main&quot; java.lang.NullPointerException
at com.kanxue.test2.XTokenServer.getXtoken(XTokenServer.java:239)
at com.kanxue.test2.XTokenServer.main(XTokenServer.java:290)
我打印了number.intValue()发现是-1这是为什么&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/549</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/549</guid><pubDate>Sat, 17 Jun 2023 15:34:43 GMT</pubDate><author>fyfyfy982</author></item><item><title>trace无效的问题</title><description>&lt;p&gt;卡了很多天的一个问题，请教一下如何解决
1 so有个全局变量0x1314存放字符串指针
2 so调用jni函数获取path
&lt;code&gt;JNIEnv-&amp;gt;CallObjectMethod(android.content.Context@27c6e487, getPackageResourcePath() =&amp;gt; &quot;/data/app/~~123==/com.simple.app-456==/base.apk&quot;)&lt;/code&gt;
3 so调用 &lt;code&gt;JNIEnv-&amp;gt;GetStringUtfChars(&quot;/data/app/~~123==/com.simple.app-456==/base.apk&quot;) &lt;/code&gt;获取utfchars，存在0x7890
4 utfcharts的指针0x7890存入0x1314&lt;/p&gt;
&lt;p&gt;问题：在某处需要读取这个字符串的时候，0x7890不可读
traceWrite(0x1314) 可以发现在&lt;code&gt;GetStringUtfChars()&lt;/code&gt;执行后，地址写入一次，写入内容为字符串指针0x7890
traceWrite(0x7890)的话，根本没有打印到内存读写操作&lt;/p&gt;
&lt;p&gt;是unidbg的问题还是unicorn的问题还是so的暗桩导致？如何抓取到这个字符串内存被修改的地方&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/547</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/547</guid><pubDate>Tue, 13 Jun 2023 04:01:00 GMT</pubDate><author>kings0527</author></item><item><title>IpaLoaderTest中替换成另外一个ipa后报错</title><description>&lt;p&gt;只有这行错误提示：
&lt;code&gt;MemoryRead64[dynarmic.cpp-&amp;gt;MemoryRead64:347]: vaddr=0000000000000000&lt;/code&gt;
问下大佬有没有完整的加载一个ipa或只加载主要可执行文件后调用其中OC方法的示例&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/546</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/546</guid><pubDate>Mon, 12 Jun 2023 06:14:54 GMT</pubDate><author>joshuachenn</author></item><item><title>java/lang/reflect/Method 类型的参数怎么传进so</title><description>&lt;p&gt;JNIEnv-&amp;gt;GetMethodID(android/content/Context.bindService(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z) =&amp;gt; 0x1bb87487 was called from RX@0x401ce6a4[&lt;a href=&quot;http://libtiny.so/&quot;&gt;libtiny.so&lt;/a&gt;]0x1ce6a4
JNIEnv-&amp;gt;GetMethodID(android/content/Context.unbindService(Landroid/content/ServiceConnection;)V) =&amp;gt; 0xa9850764 was called from RX@0x401ce6d0[&lt;a href=&quot;http://libtiny.so/&quot;&gt;libtiny.so&lt;/a&gt;]0x1ce6d0
JNIEnv-&amp;gt;NewStringUTF(&quot;getSharedPreferencesPath&quot;) was called from RX@0x401cf4f8[&lt;a href=&quot;http://libtiny.so/&quot;&gt;libtiny.so&lt;/a&gt;]0x1cf4f8
JNIEnv-&amp;gt;NewStringUTF(&quot;String&quot;) was called from RX@0x401cf59c[&lt;a href=&quot;http://libtiny.so/&quot;&gt;libtiny.so&lt;/a&gt;]0x1cf59c
com/xingin/tiny/internal/t-&amp;gt;b(I[Ljava/lang/Object;)Ljava/lang/Object;
1275693480
JNIEnv-&amp;gt;CallStaticObjectMethodV(class com/xingin/tiny/internal/t, b(0x4c0989a8, [class android/content/Context, &quot;getSharedPreferencesPath&quot;, [&quot;String&quot;]]) =&amp;gt; java.lang.reflect.Method@130d63be) was called from RX@0x4014ba04[&lt;a href=&quot;http://libtiny.so/&quot;&gt;libtiny.so&lt;/a&gt;]0x14ba04
debugger break at: 0xfffe00c4 @ Runnable|Function64 address=0x400b2bf4, arguments=[unidbg@0xfffe1620, -1733448322, -1374630582, 2012993836]&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;x0=0xfffe1620(-125408) x1=0x130d63be x2=0x10006 x3=0xbffff1c0 x4=0x72967906 x5=0xbffff2a0 x6=0x0 x7=0x0 x8=0xfffe00c0 x9=0x0 x10=0xbffff1c0 x11=0x0 x12=0xbffff230 x13=0x0 x14=0x1
x15=0xa x16=0xb x17=0x0 x18=0x19 x19=0xefcdea78 x20=0xfffe1620 x21=0x40599000 x22=0x130d63be x23=0x1f5e07cb x24=0xbffff718 x25=0x400581b0 x26=0x1ec1438 x27=0x3d86670d x28=0x9ed19285 fp=0xbffff2d0
q0=0xbffff1c000000000bffff230(1.591495096E-314, 1.591495041E-314) q1=0xffffff80ffffffd800000000bffff190(1.591495017E-314, NaN) q2=0x87b3e8fd1d7b319eb6(-1.2440420431681426E-58, 6.67E-322) q3=0x0(0.0) q4=0x0(0.0) q5=0x40100401401004014010040140100401(4.003911019303815, 4.003911019303815) q6=0x0(0.0) q7=0x1f100000000000001f1(2.456E-321, 2.456E-321) q8=0x0(0.0) q9=0x0(0.0) q10=0x0(0.0) q11=0x0(0.0) q12=0x0(0.0) q13=0x0(0.0) q14=0x0(0.0) q15=0x0(0.0)
q16=0x51f100000000000041f1(8.3403E-320, 1.0364E-319) q17=0x0(0.0) q18=0x51f100000000000041f1(8.3403E-320, 1.0364E-319) q19=0x0(0.0) q20=0x0(0.0) q21=0x0(0.0) q22=0x0(0.0) q23=0x0(0.0) q24=0x0(0.0) q25=0x0(0.0) q26=0x0(0.0) q27=0x0(0.0) q28=0x0(0.0) q29=0x0(0.0) q30=0x0(0.0) q31=0x0(0.0)
LR=RX@0x401ce764[&lt;a href=&quot;http://libtiny.so/&quot;&gt;libtiny.so&lt;/a&gt;]0x1ce764
SP=0xbffff2a0
PC=unidbg@0xfffe00c4
nzcv: N=0, Z=1, C=1, V=0, EL0, use SP_EL0
[Arm64Svc   0x0000c0] [612000d4] 0xfffe00c0: &quot;svc #0x103&quot;
=&amp;gt; *[Arm64Svc  &lt;em&gt;0x0000c4]&lt;/em&gt;[c0035fd6]&lt;em&gt;0xfffe00c4:&lt;/em&gt;&quot;ret&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;这部分对应java的逻辑是通过反射返回一个Method
我这样实现
Class&lt;context&gt; c = Context.class;
Method m = null;
try {
m = c.getMethod(&quot;getSharedPreferencesPath&quot;, String.class);
} catch (Exception e) {
}
return vm.resolveClass(&quot;java/lang/reflect/Method&quot;).newObject(m);
但并不能正确进行，请问该怎么做&lt;/context&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/544</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/544</guid><pubDate>Fri, 19 May 2023 08:08:57 GMT</pubDate><author>jocson</author></item><item><title>新手请教ios版本，如何hook NSSDate 修改返回值</title><description>&lt;p&gt;目标ipa使用NSSDate-&amp;gt;timeIntervalSince1970获取时间戳，我想让此函数返回我指定的固定值，请问该如何修改返回值，没有找到合适的示例&lt;/p&gt;
&lt;p&gt;·&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    // - (double)timeIntervalSince1970;

    ObjC objc = ObjC.getInstance(emulator);
    ObjcClass NSDateClass = objc.getClass(&quot;NSDate&quot;);
    Substrate.getInstance(emulator).hookMessageEx(
            NSDateClass, objc.registerName(&quot;timeIntervalSince1970&quot;), new ReplaceCallback() {

        @Override
        public HookStatus onCall(Emulator&amp;lt;?&amp;gt; emulator, HookContext context, long originFunction) {
            System.out.println(&quot;---- onCall ----&quot;);
            return HookStatus.RET(emulator, originFunction);
        }

        @Override
        public void postCall(Emulator&amp;lt;?&amp;gt; emulator, HookContext context) {
            System.out.println(&quot;---- post call ----&quot;);
            super.postCall(emulator, context);
        }
    }, true);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;·&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/542</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/542</guid><pubDate>Thu, 11 May 2023 15:35:42 GMT</pubDate><author>xtqsky</author></item><item><title>AndroidFileIO 中对ioctl的处理不完善</title><description>&lt;p&gt;AndroidFileIO 中对ioctl的处理不完善，缺少很多，这些需要自己补吗，还是说以后会完善。此外对网卡之类的硬件地址信息的处理能否改成可配置的&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/541</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/541</guid><pubDate>Mon, 08 May 2023 02:37:17 GMT</pubDate><author>mrright2019</author></item><item><title>Please help its giving this error all the time</title><description>&lt;p&gt;Exception in thread &quot;main&quot; java.lang.IllegalStateException: java.io.FileNotFoundException: /Users/badhra/Reverse%20Eng/unidbg-0.9.7/unidbg-android/target/classes/android/sdk23/lib/liblog.so (No such file or directory)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:190)
at com.github.unidbg.linux.AndroidElfLoader.loadInternal(AndroidElfLoader.java:62)
at com.github.unidbg.spi.AbstractLoader.load(AbstractLoader.java:233)
at com.github.unidbg.linux.android.dvm.BaseVM.loadLibrary(BaseVM.java:312)
at org.telegram.messenger.Utilities32.&lt;init&gt;(Utilities32.java:57)
at org.telegram.messenger.Utilities32.main(Utilities32.java:82)&lt;/init&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/540</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/540</guid><pubDate>Mon, 01 May 2023 18:20:00 GMT</pubDate><author>TrilochanSati</author></item><item><title>父类对象获取子类的field的时候出错</title><description>&lt;p&gt;&lt;a href=&quot;http://xn--libuserenv-8g5pp9rhvu8hgvfa2214bb33d.so/&quot;&gt;具体复现在拼多多libUserEnv.so&lt;/a&gt;&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/issues/538</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/issues/538</guid><pubDate>Fri, 28 Apr 2023 04:01:05 GMT</pubDate><author>0xjacklove</author></item></channel></rss>