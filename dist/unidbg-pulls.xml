<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>zhkl0228/unidbg Pull requests</title><link>https://github.com/zhkl0228/unidbg/pulls</link><atom:link href="http://127.0.0.1:1200/github/pull/zhkl0228/unidbg" rel="self" type="application/rss+xml"></atom:link><description>zhkl0228/unidbg Pull requests - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><lastBuildDate>Thu, 24 Oct 2024 20:36:09 GMT</lastBuildDate><ttl>5</ttl><item><title>增加支持在LinuxModule注册新的符号</title><description>&lt;p&gt;背景: 在模拟一个elf的文件执行时,该elf需要用到libdl.so的dlvsym函数,但我看了下unidbg带的so中仅支持dlsym函数，于是我手动实现该函数，并通过registerSvc注册进SvcMemory,再通过registerSymbol函数注册到libdl的Module里。&lt;/p&gt;
&lt;p&gt;问题:当我注册进去后发现, elf中依旧找不到dlvsym函数，而我尝试通过module.findSymbolByName()和memory.dlsym()去寻找，依旧找不到dlvsym函数。&lt;/p&gt;
&lt;p&gt;发现:我看了一下代码，对于系统库的LinuxMoudle而言,发现findSymbolByName仅从缓存和elf文件结构中寻找符号，而registerSymbol函数仅将符号添加到hook表，也就是说registerSymbol实际上只支持对elf文件中的符号进行hook(替换)，而无法添加符号函数。&lt;/p&gt;
&lt;p&gt;解决:我认为如果仅是对现有符号进行hook，这非真正意义上的注册符号，所以我认为registerSymbol除了hook，应该还支持进行增加符号。&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/pull/694</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/pull/694</guid><pubDate>Thu, 24 Oct 2024 06:53:07 GMT</pubDate><author>JunGe-Y</author></item><item><title>修复在threadDispatcher启用时，socket相关的读取造成的死锁问题</title><description>&lt;p&gt;在threadDispatcherEnabled时，由于使用抢先式调度，会导致socketpair在其中一个线程在接收时，持续占用调度，导致永远无法接收到发送线程的信息。&lt;/p&gt;
&lt;p&gt;同理，由于ppoll没有考虑io是否有信息可读，会导致线程持续卡死在后接的recv中，导致实际运行逻辑与实际不符，同时如果其他线程正在同一socket准备发送请求，也会造成死锁。&lt;/p&gt;
&lt;p&gt;详细样例可见本fork的master分支&lt;/p&gt;
</description><link>https://github.com/zhkl0228/unidbg/pull/665</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/pull/665</guid><pubDate>Fri, 23 Aug 2024 11:36:43 GMT</pubDate><author>cc004</author></item><item><title>fix bug of unicorn backend mem_protect</title><description>No description</description><link>https://github.com/zhkl0228/unidbg/pull/663</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/pull/663</guid><pubDate>Wed, 21 Aug 2024 06:35:38 GMT</pubDate><author>stickycookie</author></item><item><title>when dvmObject instanceof DvmClass, there is no need to call getObjectType().</title><description>No description</description><link>https://github.com/zhkl0228/unidbg/pull/640</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/pull/640</guid><pubDate>Thu, 27 Jun 2024 07:10:04 GMT</pubDate><author>18712886438</author></item><item><title>Feature: re-compile libdynarmic.so for Linux x86_64 platform</title><description>&lt;p&gt;Finished jobs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upgrade dynarmic version from v5 to v6&lt;/li&gt;
&lt;li&gt;Modify linux_build.sh to support compiling of new version&lt;/li&gt;
&lt;li&gt;Add a base compiler environment via Dockerfile&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TODO jobs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;use LLVM to speed up compile time&lt;/li&gt;
&lt;/ol&gt;
</description><link>https://github.com/zhkl0228/unidbg/pull/548</link><guid isPermaLink="false">https://github.com/zhkl0228/unidbg/pull/548</guid><pubDate>Thu, 15 Jun 2023 10:44:13 GMT</pubDate><author>x-cold</author></item></channel></rss>