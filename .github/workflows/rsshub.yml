name: rsshub

on:
  push:
    branches: ["master"]
  workflow_dispatch:
  schedule:
      - cron: "30 */2 * * *"

permissions:
  contents: write

concurrency:
  group: rsshub
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: config git
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git fetch --all
          git checkout cache || git checkout -b cache
          mkdir -p dist

      - name: start rsshub
        run: |
          docker run -d --name rsshub \
              -p 127.0.0.1:1200:1200 \
              -e PORT=1200 \
              -e LISTEN_INADDR_ANY=1 \
              -e REQUEST_RETRY=2 \
              -e REQUEST_TIMEOUT=3000 \
              -e CACHE_TYPE=memory \
              -e MEMORY_MAX=256 \
              -e DEBUG_INFO=true \
              -e LOGGER_LEVEL=info \
              -e NO_LOGFILES=false \
              -e SHOW_LOGGER_TIMESTAMP=true \
              -e NODE_ENV=production \
              -e GITHUB_ACCESS_TOKEN="$GITHUB_ACCESS_TOKEN" \
              diygod/rsshub
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: check healthz
        timeout-minutes: 3
        run: |
          while ! curl -f http://127.0.0.1:1200/healthz; do
            sleep 3s
          done

      - name: save
        run: |
          LEN=$( cat rsshub.json | jq '. | length' )
          echo "got $LEN elements"
          for (( i=0; i<$LEN; i++ )) ; do
            name="$(cat rsshub.json | jq -r ".[$i].name")"
            url="$(cat rsshub.json | jq -r ".[$i].url")"
            url=$(echo "$url" | sed 's@https://rsshub.app@http://127.0.0.1:1200@')
            echo "name $name"
            echo "url $url"
            items_ori="$(cat "dist/$name" | grep -oP '<guid[^<]+</guid>' | sort -u || true)"
            curl -f -L --output "dist/$name" "$url"
            items_new="$(cat "dist/$name" | grep -oP '<guid[^<]+</guid>' | sort -u || true)"
            if [ "$items_ori" != "$items_new" ]; then
              git add "dist/$name"
            fi
          done

      - name: push
        run: |
          if git commit -m "update dist"; then
            git push origin cache
          fi
